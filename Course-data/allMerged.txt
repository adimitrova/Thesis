CD|provided some conditions are satisfied,the extreme value therom guarantees the existence of maximum and minimum values 
CD|but how am i supposed to find those maximum and minimum values 
CD|we've actually alreaOMITTED done this in some examples,but it's worth describing an explicit process for finding maxima and minima 
CD|here's a frour-step process 
AP|first,differentiate your function can find all the critical points 
CD|those are places where the derivative is equal to zero or the derivative isn't defined 
CD|and also lists the end points if they're included in your domain 
CD|check those points,right 
AP|check the end points,check the critical points,and potentially you also need to check the limiting behavior if you're working on an open interval 
EX|let's work an example 
EX|okay,let's work an example 
EX|let's look at the function,given by the rule OMITTED of OMITTED equals over,x squared minus this quantity squared 
EX|but let's only consider this function on a restricted domain 
EX|let's consider,a maximum,minimum values of this function on the interval between minus and NUMBER this open interval 
EX|and now i differentiate 
EX|yeah,the first step is to differentiate this function 
EX|so before i differentiate it,i'm just going to rewrite this 
EX|instead of over OMITTED squared minus squared,i'm going to write this as OMITTED squared minus to the negative NUMBER power 
EX|it's going to make it a little bit easier for me when i think about the derivative 
EX|so what's the derivative of this function 
CD|by the power rule and the chain rule this is negative times the inside,x squared minus to the negative NUMBER power times the derivative of the inside which is NUMBER or another way to write this is negative times NUMBER,that's minus NUMBER divided by OMITTED squared minus to the third power 
CD|with the derivative in hand,i can find the critical points 
AP|yeah,the next step is to list the critical points,and also the end points if they're included 
EX|so let's see 
EX|what are the critical points of this function 
EX|will those be places where the derivative doesn't exist,or the derivative is equal to zero 
EX|let's first think about when the derivative is equal to zero 
CD|well,in order for that derivative to be equal to zero,it's a fraction 
CD|when's a fraction equal to zero 
CD|well,that occurred exactly when the numerator is equal to zero 
CD|so i'm really just asking when is minus NUMBER equal to zero 
CD|and that's just when OMITTED is equal to NUMBER so the only time when the derivative is equal to is when OMITTED is equal to NUMBER now the derivative doesn't exist when OMITTED is equal to or when OMITTED is equal to minus but,you know,the functions not even defined in that case anyway 
CD|and i'm only considering numbers between minus and anyhow 
CD|don't have to worry about those 
CD|and i don't have to worry about end points 
CD|because,again,the interval that i'm considering doesn't include the end points,it's an open interval 
CD|so i'm just going to check OMITTED equals zero to figure out what's going on there 
EX|so let's think about this point where OMITTED is equal to zero 
EX|well the derivative at zero is equal to zero 
EX|if i just plug in zero into this i can see that 
EX|what's the derivative at a number between minus and zero 
EX|well if i plug in a number between minus and zero,x squared is then between zero and,so OMITTED squared minus is now a negative number cubed 
EX|the denominator is negative,but this is a negative number,negative times a negative number 
EX|so we've got negative times negative divided by negative,that's negative 
EX|so the derivative at a number between minus and is negative in this case 
EX|and a similar kind of reasoning will show that the derivative is positive if i evaluate the derivative between and NUMBER so here is the deal 
EX|i've got one critical point on this interval between minus and NUMBER and the function's decreasing between minus and,and it's increasing between and NUMBER so what does that mean about the point 
EX|well it means that the point must be a place where the function achieves a local minimum value 
SM|so i can summarize that here,f of NUMBER is by,this is the first derivative test is a local minimum value 
EX|what about the end behavior 
EX|what happens when OMITTED is near negative,or when OMITTED is near 
AP|so that's really step in this checklist,is to check the limiting or the end behavior of this function 
CD|what do i mean by that 
CD|i really mean look at this when OMITTED is just a little bit bigger than minus y,or OMITTED is a little bit less than NUMBER alright,that's the end behavior of this function 
CD|these end points are actually included so of course i can't evaluate the function there but i should still see what happens when OMITTED is close to these endpoints 
EX|let's imagine i was trying to draw a graph of the function,alright 
EX|how would i know from the derivative 
EX|i know the function's decreasing here and increasing here 
EX|and i know the function's got a local minimum value here,but linking to the first derivative test 
EX|so the function's going down and then it's going up 
EX|but what happens at these two values,when i get close to minus and when i get close to NUMBER when i get close to minus,the function is very,very large,and when i get close to,on this side,the function's also very,very large 
EX|so if i imagined trying to draw a graph of this function 
EX|right,it would be coming down like this,flattening out and then it would be getting very,very large again 
SM|let's summarize the situation 
SM|this graph will help us summarize the situation 
SM|alright,what do i know 
SM|i know that OMITTED of is the smallest output,it's the minimum value that the function achieves on the domain,open interval minus to NUMBER and there's no maximum value 
SM|by considering this limiting behavior,as OMITTED approached to the endpoints which aren't included in this domain 
SM|i can see that this function's output can be made as positive as i'd like,right 
SM|i can choose values of OMITTED to make the output as big as i want 
SM|so i can't say this function actually achieves some maximum output value 
SM|it doen'st achieve some maximum output value 
SM|but it does achieve a minimum output value right here 
CD|when OMITTED is equal to NUMBER and that output is NUMBER it's important to emphasize that the domain truly matters 
CD|yeah,what if i ask to find the maximum and minimum values of the same function OMITTED of OMITTED is equal to one over OMITTED squared minus one squared,but a different domain what if i looked on the interval from one to infinity this open interval 
AP|again we start by differentiating well of course,the derivative's the same 
CD|the derivative of this function is still minus OMITTED over OMITTED squared minus to the third power 
CD|now,where are the critical points 
CD|the only place that this derivative is equal to,is when OMITTED is equal to NUMBER and the only place where the derivative doesn't exist is just places where the function isn't even defined,right 
CD|so on this interval 
CD|from one to infinity,there's no place where the derivative isn't defined or is equal to zero 
CD|so there's no critical points 
CD|so what about the behavior near the boundaries of this interval 
CD|what happens if OMITTED is just a little bit more than one or when OMITTED is really,really big 
CD|so,we working on the interval from to infinity 
CD|this open interval 
CD|so,that means the limits that you'd consider are the limits,the function as OMITTED approaches infinity and the limit of the function as OMITTED approaches from the right hand side 
CD|and,doing calculation i find that the limit of the function as OMITTED approaches infinity is because,in that case the denominator can be made as large as i like,which makes this ratio as close to as i like 
CD|and,the limit of the function as OMITTED approaches from the right is equal to infinity 
CD|because in that case if OMITTED approaches from the right this denominator can be made as close to and positive as i'd like which makes this ratio as large as i'd like 
CD|so in this case this function on this domain doesn't take a largest value and doesn't take a smallest value 
CD|the function's output can be made as big as i'd like if i'm willing to choose OMITTED just a little bit bigger than and the function's output can be made as close to as i'd like if i'm willing to choose OMITTED to be big enough 
CD|in other words,the domain matters 
CD|i mean this function,if i'm considering the funciton on this domain,from -1 to NUMBER it does have a smallest output value 
CD|and it should use its local minimum value when OMITTED is equal to NUMBER but if consider the same function 
CD|but on a different domain there's no critical point on this domain,right 
CD|and i studied the limiting behavior as OMITTED approached one,and as OMITTED approached infinity,and i found that i could make the output of this function as large as i'd like and as close to zero as i'd like 
CD|so this function doesn't achieve a maximum minimum value on this interval 
NL|here we are at a lecture hall at the ohio state university 
NL|i'm bart snap 
SM|today,we're going to see how we can use calculus to stuOMITTED the path of an object through space,in particular this orange ball 
EX|when the ball leaves my hand,it's going pretty fast 
EX|but as it approaches the ground,it's going faster and faster,and faster until it hits the ground,bounces up at nearly the same speed 
EX|and then it's going quickly,but slower,slower,slower,until,it reaches its pinnacle and then it stopped 
EX|and then it starts falling back down again,slowly at first,but then quicker,quicker and quicker,and then i,grab the ball 
EX|so how fast was the ball moving well lets see 
CD|the total distance the ball traveled was about,NUMBER meters and the total time the ball traveled for,was about NUMBER seconds 
CD|dividing this,we find this is equal to NUMBER meters per second 
CM|this is the average speed of the ball 
CD|now,of course,i took the ball and i threw it down with some force and then it came back up and hovered here and then came back down if you recall 
CD|so,what i'm trying to say is the speed of the ball was changing the entire time and this is the average speed and so sometimes the speed was faster and sometimes it was slower 
NL|here 
CD|so,think about when i just threw the ball down 
CD|from leaving my hand to touching the ground,that was about NUMBER seconds 
CD|and the distance it traveled was about one meter 
CD|one meter divided by NUMBER seconds is meters per second 
CD|so we found the average speed to be NUMBER meters per second 
CD|but that's not really the instantaneous speed of the ball 
CD|because when i threw down the ball,the ball was traveling much faster 
CD|and then the ball bounced up 
CD|and then it started slowing down 
CD|and then it slowed down to almost no speed at all 
CD|and then it came back into my hand going a little faster 
CD|so how do we figure out how fast the balls going at say one of those other time intervals 
CD|we found the average speed over the course of the entire trajectory the full NUMBER seconds to be NUMBER meters per second 
CD|however if we only consider the first NUMBER seconds we find the average speed to be five meters per second,this makes sense because if you watch the video you see the ball is moving rather quickly in the first NUMBER seconds of its trajectory 
CD|you probably asking yourself,how does bart know that the ball traveled one meter during the first NUMBER seconds of its journey and NUMBER meters during the whole of NUMBER second journey down up and down 
CD|well,we know this because we got the video 
EX|alright,here bart is just about to release the ball from his hand 
EX|and,,,,,frames later,the ball hits the ground 
CD|there's NUMBER frames being shot in every second so that means that it took NUMBER or NUMBER seconds for the ball to hit the ground 
CD|making a bunch more measurements,i can combine all this information in a graph 
CD|this is a graph of a function the input to this function is time so along the OMITTED axis i'm plotting time and seconds 
CD|the output to the function is the height the height of the ball at that particular moment in time 
CD|now,on this graph,i can go back now and try to figure out how fast the ball is moving at say NUMBER seconds after bart releases it and at NUMBER seconds after bart releases it 
CD|so let's try to figure out how fast the ball is moving at NUMBER seconds 
CD|here i've marked the position of the ball,.4 seconds after bart releases the ball 
CD|now we don't really have any way of figuring how fast the ball is moving at that particular moment 
AP|what i can do is figure out the average speed of the ball during some time interval 
CD|so as sort of a first guess to how fast this thing is moving at NUMBER seconds,i'm going to figure out the average speed of the ball between NUMBER seconds and NUMBER seconds 
CD|alright,so i've got this hanOMITTED table here,of function values at NUMBER seconds 
CD|the the ball was NUMBER centimeters above the ground and NUMBER seconds after bart released the ball,the ball was NUMBER centimeters above the ground 
CD|so i can put that information together to figure out the speed of the ball between NUMBER and NUMBER seconds 
NL|alright 
CD|so NUMBER seconds to say NUMBER seconds at NUMBER seconds on my chart the ball was a NUMBER centimeters above the ground 
CD|at NUMBER seconds the ball was a NUMBER centimeters above the ground 
CD|now this time interval has a length of NUMBER seconds 
CD|and how far did the ball move during that time interval 
CD|well NUMBER NUMBER is NUMBER centimeters 
CD|so during the NUMBER seconds that elapsed from NUMBER seconds to NUMBER seconds after bart released the ball,the ball traveled a distance of NUMBER centimeters,which means the speed,which is the distance traveled over time is NUMBER over NUMBER centimeters per second,which is NUMBER centimeters per second or NUMBER meters per second 
CD|which is about seven miles per hour 
CD|now i could do a little bit better,alright 
CD|here i'm calculating the average speed of the ball between NUMBER and NUMBER seconds,but i'm trying to figure out how fast the ball is moving at this particular moment 
AP|so instead of just calculating the average speed during this time interval to be about seven miles per hour,i could do it over a shorter time interval,all right 
CD|instead of NUMBER to,i could go from NUMBER to say NUMBER here's half a second after bart released the ball 
CD|and i could figure out the average speed of the ball during this part of its trajectory 
CD|let's see how we calculate that 
CD|well,it's the same kind of game 
CD|all right.4 seconds after bart released the ball,the ball was NUMBER centimeters above the ground 
CD|NUMBER seconds after barb released the ball,looking back at my table i find that the ball was NUMBER centimeters above the ground 
NL|NUMBER centimeters 
CD|this time interval was NUMBER seconds long 
CD|and how far did the ball move during that time interval 
CD|well,that's NUMBER centimeters 
CD|NUMBER minus NUMBER is NUMBER so,the ball moved NUMBER centimeters 
CD|during the point one seconds that elapsed point four seconds to NUMBER seconds after bart released the ball 
CM|speed is how far you've traveled over how long it took you so if i divide these this is the speed of the ball the average speed of the ball between point four and point five seconds and this works out to be NUMBER centimeters per second i mean i'm dividing by this very nice number point one 
CD|which is the same as NUMBER meters per second which is about eight miles per hour 
CD|and indeed,if you look back at this,this chart,between NUMBER and NUMBER seconds,yeah 
CD|maybe the average speed was u,about seven miles per hour 
CD|between NUMBER and NUMBER seconds the average speed was a little bit higher 
CD|you know,the average speed here worked out to be eight miles per hour instead of seven miles per hour 
CD|the average speed of the ball during this time interval is higher than during this whole time interval 
CD|we're still not there 
CD|we are trying to figure out how fast the ball is moving at this particular moment right not the average speed between NUMBER and NUMBER seconds 
CD|to get closer,right,we should take an even smaller time interval 
CD|instead of NUMBER to NUMBER well,why not look back on our hanOMITTED chart here and see well,here is where the ball is at NUMBER seconds 
CD|here's where the ball is at NUMBER seconds 
CD|we could use this information to figure out the speed of the ball just during the very tiny time interval between NUMBER and NUMBER seconds after bart releases the ball 
CD|well,let's do that 
NL|all right 
EX|so again,.4 seconds after bart releases the ball,the ball is NUMBER centimeters above the ground 
EX|.42 seconds after bart releases the ball,the ball is NUMBER centimeters above the ground,that's what this chart is telling me.42 seconds after bart releases the ball,NUMBER centimeters above the ground 
CD|so that means during the very tiny time interval NUMBER seconds that elapsed between NUMBER seconds and NUMBER seconds after bart releases the ball,the ball has traveled how far well NUMBER NUMBER centimeters is just NUMBER centimeters 
CD|so in two hundredths of a second the ball has traveled NUMBER centimeters 
CD|to figure out the speed i again divide NUMBER NUMBER is NUMBER centimeters per second 
CD|which is NUMBER meters per second 
CD|which is about miles per hour 
CD|this is a much better approximation to the instantaneous speed of the ball at NUMBER seconds 
CD|look,here's the graph again 
CD|between point four and point six seconds,the ball is travelling maybe seven miles per hour on average 
CD|between point four and point five seconds,the ball is travelling maybe 
CD|eight miles per hour between NUMBER and NUMBER seconds we just calculated that the speed of the ball is about nine miles per hour 
CD|and that makes a whole lot of sense 
NL|right 
CD|the speed of the ball from here to here is slower than the average speed from here to here 
CD|which is slower than average speed from NUMBER to NUMBER seconds 
CD|the ball's slowing down in its trajectory,so the average speed over these shorter time intervals is decreasing 
EX|so,let's figure out how fast the ball was moving at NUMBER seconds 
CD|that's when the ball was at the top of its trajectory 
CD|we can't really do that 
CD|all i can really do is figure out the average speed of the ball over some time interval but i've got a table of values of the function 
CD|and i know how high the ball was at NUMBER seconds after release 
CD|it was NUMBER centimeters,and i can compute its average speed over a very short time interval,like the time interval between NUMBER and NUMBER seconds after release,all right 
CD|and the ball didn't move very far during that time interval but of course that time interval also isn't very long,so it's not super clear how fast the ball might be moving on average during that time interval 
CD|we can do the calculation though 
CD|let's do it now,so 
CD|NUMBER seconds after the ball was released,the ball was NUMBER centimeters above the ground 
CD|NUMBER seconds after the ball was released,the ball was NUMBER centimeters above the ground 
CD|now this time interval between NUMBER and NUMBER seconds has the duration of just one hundredth of a second 
NL|NUMBER 
CD|NUMBER is NUMBER that's a very short amount of time and during that short amount of time,how far do the ball move 
CD|well,NUMBER NUMBER centimeters,that's just.1 centimeters 
CD|and if we're being pedantic,it's negative NUMBER centimeters 
NL|all right 
CD|the ball fell between NUMBER and NUMBER seconds,so this number is recording not only how far it moved but also the direction that it moved in 
CD|it's really displacement instead of a distance 
CD|anyhow,.01 centimeters divided by NUMBER seconds,that will give me the velocity,right 
CD|displacement over time 
CD|so if i divide these,this ratio here is NUMBER centimeters per second or -10 if i am keeping track of the direction its moving in 
CD|it's falling down at a speed on average of ten centimeters per second during this time interval 
CD|that's -.1 meters per second 
CD|which is about.2 miles per hour or -.2 miles hour if i'm keeping track of the direction it's going 
CD|anyway,.2 miles per hour is a really slow speed,right 
CD|the ball is not moving very much on average between NUMBER and NUMBER seconds 
CD|in light of this,it might make sense to say that the instantaneous speed of the ball at.4 seconds is nine miles per hour 
NL|now,why 
CD|well,the average speed between NUMBER and NUMBER seconds is maybe miles per hour 
CD|the average speed from NUMBER and NUMBER is about eight miles per hour 
CD|the average speed between NUMBER and NUMBER seconds is about miles per hour 
CD|you know and based on this,it seems like if we took a really short time interval,just after NUMBER seconds and tried to calculate how fast the ball was going on average during that very small time interval,you might conclude that the average speed during a very small time interval is about miles per hour 
CD|it's in that sense that we're going to say that the instantaneous speed of the ball at point four seconds is miles per hour 
CD|when you play the same game NUMBER seconds into the balls journey,alright 
CD|when it's just to the top of its trajectory 
CD|so the average speed of the ball,between NUMBER and NUMBER seconds is exceedingly slow,and you can see that in the video,alright 
CD|the ball is barely moving,at the top of its trajectory 
CD|what's the instantaneous speed of the ball at the top of its trajectory 
CD|it's zero,right 
NL|i mean yes 
CD|the average speed over a time interval between NUMBER and NUMBER seconds isn't zero 
AP|but if you look at an average speed over an exceedingly small time interval,those average speeds over shorter and shorter time intervals are as close to zero as you like 
CD|that's the sense in which the instantaneous velocity at the top of the trajectory,the limit of the average velocities over small time intervals,is zero 
NL|isn't calculus amazing 
CD|we're using the idea of limits to compute instantaneous speed 
CD|using a little bit of math,we can understand the world around us 
CD|that's the power of calculus 
NL|music 
CM|music here is a classic related rates problem 
NL|so here's the question 
CD|you're walking away from a light source,at some speed,and you don't know how fast is your shadow's length changing 
CD|there's a standard method to solving a related rates problem,four steps 
AP|so,step is draw a picture,alright 
CD|you're told some sort of story,you should convert it into some diagram 
AP|step,find an equation 
CD|given that picture,you should label everything in the picture so you can write down some equation 
CD|step is to differentiate that equation which would probably involve the chain rule 
CD|and step is to solve that equation for whatever you're interested in finding out 
CD|i mean,hopefully you're trying to find some rate of something so,you're going to try to find one of these derivatives in there 
EX|let's draw a picture to represent this person moving away from the light source 
EX|here's my picture,i've got a light source right here and i've got this person right here 
EX|and i imagine that person walking away from the light and i've drawn in their shadow 
EX|and i've drawn this beam of light just glancing across this person's head 
CD|now we'll turn this picture into an equation using similar triangles 
CD|you might suppose that the original problem told us that the lamppost was meters tall,and the person was,say,two meters tall 
CD|and i can label the other relevant lengths on this diagram 
CD|i'll call OMITTED the distance from the bottom of the lamppost to the person's feet,and the distance from the feet to the tip of the shadow,i'll call that OMITTED for shadow 
SM|so,now i've got a nicely labeled diagram,and i can replace that nicely labeled diagram with a slightly more extract diagram,where the person is now a vertical line,the lamppost is now a vertical line,and i've got these triangles 
CD|the up shot here is that i've got similar triangles 
CD|this little triangle is similiar to this big triangle 
CD|well,because the angles are all the same,right 
CD|both of these triangles have a right angle here,they have the same angle here,consequently these angles are the same 
EX|they're two triangles that have the same angles,they're similar triangles 
CD|and as a result,i get this equation out of the diagram 
CD|this distance to this distance,x plus OMITTED to,must be the same as the corresponding ratio in to the other triangle,which is this distance to this distance OMITTED over NUMBER with an equation in hand we can now differentiate 
CD|thinking of my position and the shadow's length as a function of t,i could rewrite this equation as say,x of OMITTED plus OMITTED of OMITTED divided by equals OMITTED of OMITTED divided by,right 
CD|my position is a function of time and my show's length is a function of time,and i can differentiate both sides of this equation 
CD|the derivative of this is NUMBER,the derivative of OMITTED plus the derivative of s,and the derivative of the other side is one half the derivative of s. and i could solve for the derivative of s. let me first expand this out 
CD|i've got NUMBER derivative of OMITTED plus NUMBER derivative of s,is NUMBER derivative of s. i'll subtract NUMBER OMITTED prime from both sides 
CD|got NUMBER OMITTED prime is NUMBER OMITTED prime 
CD|'because a half minus a NUMBER is a NUMBER 
CD|and then i multiply both sides by NUMBER so i find out that OMITTED prime 
CD|this is the rate of change in the shadow's length is twice 
CD|OMITTED prime this is the speed for which the person is moving 
CD|there's a bit of a surprise to this answer 
EX|take a look at this equation,it's telling you that the speed that your shadows length is changing is just twice the speed that your walking 
EX|but it doesnt matter where your standing 
CD|the value of OMITTED doesn't appear on this side only OMITTED prime appears on this side 
CD|so that's kind of interesting right 
CD|the speed with which your shadow is growing only has to do with how fast you're walking 
CD|in fact,the speed at which your shadow is growing is exactly twice the speed at which you are walking 
CD|assuming of course,you are two meters tall and the lamp post is three meters tall 
CD|i think the important thing to take away from this example is that similar triangles are hugely helpful 
AP|if you see similar triangles,use them 
CD|there's also one thing that i think is very funny about this particular solution to the problem 
EX|here's the challenge for you to think about 
EX|if your velocity is NUMBER the speed of light,so you're almost going the speed of light 
EX|then this formula would be telling you that your shadow's length would be moving faster than the speed of light,is that really possible 
SM|music we've alreaOMITTED learned about the chain rule in reverse 
SM|that technique was OMITTED substitution 
CD|i want to anti-differentiate a function evaluated at OMITTED times the derivative of g. i can make a substitution and reduce that just down to anti-differenting OMITTED of this new variable u. now we're going to run the product rule in reverse 
CD|what is the product rule 
CD|well the product rule tells us how to differentiate the product of two functions 
EX|so here's two functions,f and g,and if i want to differentiate their product,using the product rule,right 
CD|the derivative of the product is the derivative of the first,times the second plus the first,times the derivative of the second 
CD|now,integrate both sides 
CD|so then i get that anti derivative of the derivative of OMITTED times g,is anti derivative of,what's this by the product rule 
CD|alright,it's derivative of the first,times the second,plus the first,times the derivative of the second 
CD|but the antiderivative of the derivative is just the original function 
CD|so let's write that down 
CD|that tells me that an antiderivative of the derivative of OMITTED times OMITTED plus OMITTED times the derivative of OMITTED is this 
CD|which is just OMITTED of OMITTED times OMITTED of x,and i'll include a constant 
CD|that's the integral of a sum,so its the sum of the intergrates 
CD|so integrate OMITTED prime of OMITTED OMITTED of OMITTED OMITTED plus integral of OMITTED of x,g prime of OMITTED OMITTED and we get OMITTED of OMITTED times OMITTED of OMITTED plus a constant 
CD|and that's one very symmetric way of writing down the product rule in reverse 
CD|but we can rearrange it a bit more 
CD|i'll subtract this integral from both sides,so the left hand side is just this integral 
CD|so the integral of OMITTED of x,g prime of OMITTED OMITTED is equal to,well heres what we got on the righthand side OMITTED of OMITTED times OMITTED of x. but i'm going to subtract this 
CD|subtracting OMITTED prime of OMITTED OMITTED of OMITTED OMITTED 
CD|now look at what this is saying 
CD|it's saying that i can do this integration problem if i can do this integration problem 
CD|and how do these two integration problems differ 
CD|well here i've got a function times a derivative and here i've got the derivative of OMITTED and an antiderivative of this 
NL|right 
CD|OMITTED is an antiderivative of OMITTED prime 
CD|so i can replace this integration problem with another integration problem 
CD|where i've differentiated part of the integrand,and anti-differentiated another piece of the integrand 
CD|it'll be a bit easier to see what's going on if i make some substitutions 
EX|let's set OMITTED equal to OMITTED of x,and dv equal to OMITTED prime xOMITTED 
EX|and in that case OMITTED OMITTED is OMITTED prime OMITTED OMITTED x. and what's an anti-derivative of this 
CD|well one of them is just OMITTED of x. so i can use these substitutions to rewrite what i've got up here 
CD|this integral is OMITTED times dv 
CD|and it's equal to OMITTED times v,minus the integral of OMITTED is v. and OMITTED prime OMITTED is du 
CD|so now i've got the integral of udv is uv minus the integral of vdu 
CD|this is maybe why it makes sense to call this integration by parts 
CD|so i can integrate udv provided i can integrated vdu 
CD|it's this trading game 
CD|i'm trading this integration problem for this integration problem 
CD|but now one part is differentiated and another part of the inner grand is antidifferentiated 
CD|maybe that'll make things better 
CD|with OMITTED substitution,we had to come up with a single u. in contrast,when you're doing integration by parts,when using this formula 
CD|you not only have to pick a u,but you've got to pick a dv so that you can write your integrand as udv 
CD|this makes parts a bit harder to apply the OMITTED substitution 
CD|i've got ta find both a OMITTED and a dv 
CD|but any time you're willing to differentiate part of the integrand at the price of antidifferentiating the other part of the integrand 
CD|well if that's something you're willing to do,parts will do that for you 
NL|blank_audio 
SM|music we've seen df/OMITTED and we've seen d/OMITTED 
SM|so now,we're going to think about just OMITTED 
CM|this sort of object is called a differential 
CD|inaudible about OMITTED not d/OMITTED,right 
CD|we've thought about that little bit alreaOMITTED,right 
CD|as an operator,this the thing that does the differentiation 
SM|this object is what we're going to stuOMITTED right now 
CM|it's called a differential 
CD|but what does that even mean 
CD|geometrically,these differentials,so OMITTED and OMITTED,represented some change in the linear approximation that i get using the tangent line 
EX|so here,i've got some function that i've graphed,y equals OMITTED of x. and here's a point,x,f of x. and i've got a tangent line with a curve there 
EX|and here's some change in x,which i'm calling OMITTED,and here's some change in y,which i'm calling OMITTED 
EX|and if you think about,what is the derivative 
CD|well,i mean the derivative really is OMITTED over OMITTED,right,in some sense,you know 
CD|if you take the derivative and multiply it by how much the input changed by,i mean,you don't actually get how much the output changed by but you get an approximation to how much the output changed by and as for this OMITTED here is being used as,this OMITTED is the change in the linear approximation 
CD|okay,here's a statement in words 
CD|in words,OMITTED is a change in the linearization,or the linear approximation,or the tangent line approximation,to this function that you're thinking of as y,depending on x. that's what OMITTED is 
CD|i should emphasize that your OMITTED's had better include a OMITTED in there somewhere 
CD|at different points in your life,you'll develop hm,different ideas about what OMITTED and OMITTED really mean 
CD|so,in a calculus class,in this calculus class,if you really want to,you can think of OMITTED and OMITTED as infinitesimal quantities,very small quantities 
CD|it's difficult to make this sort of thinking entirely rigourous 
CD|but that's certainly an okay way to think if you're trying to get some intuition for what these things are representing 
EX|now,later on in your life,when you take some course,say,a differential geometry course,OMITTED will then be given some better foundation 
CD|OMITTED will be revealed to be a differential form or a covector 
CD|i mean,you'll have some actual interpretation of OMITTED but for the time being,you know,if you really want to,you can regard these things as infinitesimal quantities 
AP|but honestly,i wouldn't worry too much about how to actually think about these things and focus more on how to compute with these objects 
CD|the basic trick is that if OMITTED is OMITTED of x,then OMITTED is the derivative of OMITTED OMITTED,and you don't even need necessarily to differentiate OMITTED in a lot cases 
CD|the differential satisfies many of the same rules or analogous rules as just differentiation satisfies 
EX|so,for example,d of OMITTED and v,or OMITTED plus OMITTED i should say,is du plus dv 
EX|OMITTED of OMITTED times v,is a product rule,is du times OMITTED plus OMITTED dv,right 
CD|and there's a quotient rule 
CD|i mean,this differential satisfied all the same or let's just say analogous rules to derivatives 
EX|let's take a look at an example 
EX|for example maybe OMITTED is something here like OMITTED squared and,in that case,what's OMITTED 
CD|well,OMITTED is the derivative NUMBER times OMITTED and yes,this does relate some change in OMITTED and change in OMITTED in terms of linearizations 
CD|but you don't even need necessarily to write it this way 
CD|you could if you wanted to write OMITTED squared and then think that there is power rule of a differential just like the usual power rule,which then says that this is NUMBER OMITTED 
CD|so,in general,d of OMITTED to the OMITTED would be nx to the OMITTED minus OMITTED 
EX|we can cook up a more complicated example 
EX|for example,let's calculate OMITTED of OMITTED sine x. well,this is OMITTED of a product and i can compute that by using the product rule for differentials,right 
CD|what does that tell me 
CD|well,it will be OMITTED of the first thing times the second thing plus the first thing times OMITTED of the second thing 
AP|now,instead of writing OMITTED times sin x,i could write that as sin OMITTED OMITTED 
CD|and what's OMITTED of sin of OMITTED 
CD|well,this is OMITTED of a function 
CD|and remember,how do i take OMITTED of a function 
CD|well,it's the derivative times OMITTED 
CD|so,this is OMITTED times the derivative,which is cosine OMITTED times OMITTED 
CD|now,if i like,i could factor out the OMITTED and i could write this as sin OMITTED plus OMITTED cos OMITTED OMITTED,now,because i haven't done anything new here,right 
CD|i mean,i could have just differentiate OMITTED sin OMITTED but the point is i'm writing it down without ever,you know,taking derivative 
CD|i'm sort of using the rule for how to compute differentials,right 
CD|like the differential product rule and the fact that the differential of a function is the derivative OMITTED 
CD|i'm being a little bit vague with how to deal with these differentials at this point 
SM|but we're going to be seeing more of these differentials in the coming weeks 
NL|music 
CM|we dive into thinking more about volume and length and things,let's just focus a bit more on area 
CD|so let's find the area inside here 
CD|this orange curve is the graph OMITTED equals OMITTED squared,and this red line is just the horizontal line OMITTED equals NUMBER so i want to figure out the area of this region which is below the red line and above the orange curve 
CD|we alreaOMITTED know how to attack a problem like this 
CD|i take this region and cut it up into a vertical strips 
EX|alright,i'm going to imagine cutting it up into a whole bunch of thin rectangles 
EX|and then i just want to add up the areas of those rectangles integrate 
CD|well to set up the intergral,and i should say pick a value of x. and think now,how tall is this thin rectangle 
CD|well the top edge of the rectangle is at,, and the bottom edge is at OMITTED squared 
CD|so,the height of this rectangle,here say,is one minus OMITTED squared 
CD|that's the length here,say is minus OMITTED squared 
CD|that's the length here 
CD|what's the width 
CD|well,i'm just going to call that OMITTED 
CD|right,i'm going to imagine that these rectangles are real thin 
CD|so,now the area of just this one rectangle is minus OMITTED squared,that's its height times its width OMITTED 
CD|but i don't just want the area of this one rectangle 
CD|i want to add up the areas of all these rectangles 
CD|so,i'm going to integrate this from OMITTED goes minus to NUMBER alright,and i get those end points by thinkin about how,small and how large OMITTED can be in this region 
CD|so i put a minus and a there,and this definite interval will calculate the area of this region 
CD|and i can calculate that definitne integral 
CD|let me just copy it down here 
CD|the integral that i want to calculate is the integral OMITTED goes from minus to of minus OMITTED squared OMITTED 
CD|and to calculate that integral,it's enough to use the fundamental theorem of calculus 
CD|so i'll write down an anti-derivitive 
CD|OMITTED minus OMITTED cubed over is an anti-derivitive and then the fundemental theorum of calculus says evaluate this at and at minus and i take the difference 
CD|so,i will plug in and i'll get one minus cubed over and i am going to subtract what i get when i plug in minus which minus minus,minus cubed over but what's this,this is minus a third that's NUMBER minus,minus plus a NUMBER which is negative NUMBER,and NUMBER minus negative NUMBER,is NUMBER 
CD|so the area of this region is NUMBER square units,but i could also do this by cutting the region up into horizontal strips 
CD|so,here i am cutting this region up into some horizontal rectangles,which instead of being thin in terms of their width,they're now thin in terms of their height 
CD|i just want to add up all of these not very tall rectangles to compute the area of this region 
CD|so to do that i'm going to pick some value of OMITTED and i'm going to think about,for that value of y,how wide is is that rectangle 
EX|well let's think about this point over here,right 
CD|this is the curve OMITTED equals OMITTED squared 
CD|so for this value of OMITTED what's the corresponding value of OMITTED 
CD|well it's the square root of y,and that tells me how wide this whole rectangle is right 
CD|and this point over here is negative the square root of y. so,from here to here,is square roots of y,that's the width of,of this rectangle,let me write that down 
CD|so,i got the width of the rectangle is square roots of y. now,how tall is that rectangle 
CD|well,let's call that OMITTED,right,i'm imagining that the rectangle isn't very tall,really thin 
CD|so the product squared of OMITTED its width,and it's not very tall height OMITTED y. that gives me the area of one of these thin rectangles and i'm going to integrate that 
CD|but from where to where 
CD|well,y could be as small as and as big as NUMBER so this integral will calculate the area of this region,decomposed into horizontal strips 
CD|i was going to do that integral,but i can definitely do that,right 
CD|i can do this integral by using the fundamental theory of calculus 
CD|i just copy that integral down over here 
CD|it would be integrating from to,square roots of OMITTED OMITTED,l only rewrite that as the interval from to of NUMBER to the half power OMITTED 
CD|and now i can write down an anti-derrivitave of this by using the power rule 
CD|so an anti-derrivitave is NUMBER to the halves power,divided by halves 
CD|right,an anti-derivative OMITTED to a power,is OMITTED to one more than that power,divided by one more than that power 
CD|i want to evaluate that at,and at,and take the difference 
CD|well,when i plug in,i get over over NUMBER when i plug in i get,so the answer's divided by over,which i can rewrite as NUMBER,which is the area of this region 
CD|the neat thing here is that either way,we're getting the same answer,and i think this is more amazing than it seems at first 
CD|i mean look,when i cut it into horizontal strips i ended up wanting to calculate this interval,the interval OMITTED goes from to square roots of OMITTED OMITTED 
CD|and when i cut the region up into these vertical strips i wanted to do the interval OMITTED goes from minus to of minus OMITTED squared OMITTED 
CD|but these two intervals end up being equal because they're both calculating the area of the same region,they're both calculating over square units 
CM|music when you're integrating powers of sines and cosines 
NL|i've got a motto for you to remember 
CD|you can trade sines for cosines or vice versa 
NL|how so 
CD|well since sin squared plus cosin squared is,that is the pythagorean identity,i can use this to get these two facts 
CD|that i can replace sin squared OMITTED by minus cosin squared,and can i replace a cosin squared by minus sin squared 
CD|this is often useful 
EX|let's try making some trades 
EX|for example,let's try to anti-differentiate say,sine cubed of OMITTED times cosine squared of x,OMITTED 
EX|our first inclination might be to try and make a substitution 
CD|but rats,i mean if you were sin OMITTED right then du would be cosine OMITTED OMITTED 
CD|but i got a cosine squared term there that i have to deal with 
CD|if i made different subsitiution like,you know OMITTED equals cosine OMITTED or when du,would be minus sine OMITTED OMITTED 
CD|but then i've got a sine cube term to deal with 
CD|so instead,i'll trade a pair of sines for a pair of cosines 
CD|so,instead of making a substitution immediately 
CD|i'm going to trade a pair of sines for a pair of cosines 
CD|what i mean,is that i'm going to rewrite the integrand as sine of OMITTED times sine squared of OMITTED times cosine squared of x. and then i'm going to use the fact that sine squared is is what 
CD|well it's minus cosine squared x. all right,so i can rewrite the integral as this 
CD|now i can make the substitution OMITTED equals cosine x. so,u is cosine OMITTED and in that case du is minus sine OMITTED OMITTED which i don't quite see here 
CD|but i can manufacture that by including a minus sign there 
CD|so this becomes the integral of minus OMITTED squared times OMITTED squared and then minus du 
CD|now i expand 
CD|so this is negative the integral of OMITTED squared minus OMITTED to the NUMBER du 
CD|now i'll integrate 
CD|so this is minus and i derivative of OMITTED squared is OMITTED cubed over NUMBER and an anti derivative OMITTED to the NUMBER is OMITTED to the NUMBER over plus c. now i'll substitute cosine x,for u. and,we get negative cosine cubed,of OMITTED over,plus the negative of the subtraction cosine to the NUMBER OMITTED over plus c. and this same kind of trick works in other cases too 
EX|for example,what if i wanted to anti-differentiate sine to the NUMBER power times cosine to the NUMBER power 
CD|since i've got an odd number of cosines,i can trade all but one of them for sines 
CD|what i mean is i can rewrite this integral as sine to the NUMBER times cosine squared squared times cosine OMITTED OMITTED 
CD|right,this is four cosines times another cosine gives me cosine to the NUMBER 
CD|but,now,i can use the fact that cosine squared is minus sine squared 
CD|so i can rewrite cosine squared squared,as minus sine squared,squared 
CD|and then times cosine OMITTED 
CD|and now we can finish by making a substitution 
CD|i'll make the substitution,u equals sine x. in that case,du is cosine OMITTED OMITTED 
CD|so,the integral becomes,instead of sine to the NUMBER,u to the NUMBER 
CD|minus sine squared is minus OMITTED squared 
CD|and that's squared 
CD|and cosine OMITTED OMITTED is du 
NL|is that going to work 
CD|yeah,i could definitely finish this off,i just expand this out and i get a polynomial u. and i can anti-differentiate a polynomial OMITTED and then just replace OMITTED by sine of OMITTED to get the anti-derivative of sine of the NUMBER cosine of the NUMBER 
SM|so what's the general pattern to this kind of trick 
AP|the trick works as long as we've got an odd power on the sine,or an odd power on the cosine 
CD|'cuz in that case,i can split off all but one of them 
CD|and then i'll get say,sine times an even power of sine,times some number of cosines 
CD|or sine,times an even number of cosines,times cosine 
CD|and since this an even number here,i can rewrite those in terms of the other 
CD|so then i'll end up with a single sine times a bunch of cosines,really a polynomial and cosine x. or a polynomial and sine OMITTED times cosine,and then i can finish it off with a single substitution 
NL|music where are we in the course 
SM|well we've seen some stuff about anti-differentation,alright 
SM|we learned how to start with a function,and find a function whose derivative is that original function 
SM|we've also had the sudden change of pace,where we looked at integrals 
SM|we looked at areas under the curves 
SM|and now,i want to take those two seemingly unrelated topics and connect them together 
CM|that's what the fundamental theorem of calculus is,is going to do for us 
CD|alright,the fundamental theorem of calculus,tells us that evaluating integrals really amounts to finding anti-derivatives 
CD|these two seemingly unrelated concepts of differentiation,and integration are really related 
CD|and this is really key insight of calculus as a whole 
CD|i mean think about it,in what sense did newton and leibniz discover calculus 
CD|greek mathematics had these ideas right,greek mathematicians were calculating areas of curved objects by taking limits 
CD|i have formulas for the areas of circles 
CD|and the idea is of slope,okay,predate newton and livenets 
CD|so,what was the insight that,that means that we credit newton and leibniz with discovering calculus 
CD|what really amounts to the fundamental theorem of calculus 
CD|it amounts to this idea that,differentiation and integration are somehow related 
CD|by thinking systematically and precisely,about how a function changes when you wiggle its input,and in particular,thinking about a derivative of the accumulation function 
CD|alright,we're able to see this,this relationship between evaluating a definite integral,and finding an ai derivative 
CD|and i want to do more now,than,than just show you how to calculate integrals,by using the fundamental theorem of calculus 
CD|that will be a big thing too,just the process of computing 
CD|but i hope,that you'll understand some of the reasons why,the fundamental theorem of calculus is true 
SM|so,i want to look at the fundamental theorem of calculus just from a lot of different perspectives 
SM|alright,we should come on away from this,not just with the ability to compute,but also the ability to really communicate sort of an understanding,of this absolutely amazing theorem 
NL|music blank_audio 
CM|music what's the derivative of a product of two functions 
CM|the derivative of a product is given by this,the product rule 
CD|the derivative of OMITTED times OMITTED is the derivative of OMITTED times OMITTED plus OMITTED times the derivative of g. it's a bunch of things to be warned about here 
CD|this is the product of two functions,but the derivative involves the sum of two different products 
CD|it's the derivative of the first times the second plus the first times the derivative of the second 
EX|let's see an example of this rule in action 
EX|for example,let's work out the derivative of this product,the product of NUMBER and NUMBER 
NL|alright,well here we go 
CD|this is a derivative of product,so by the product rule,i'm going to differentiate the first thing,multiply by the second,and add that to the first thing times the derivative of the second 
CD|so,it's the derivative of the first term in the product times the second term in the product,derivative of the first function times the second,plus the first function,NUMBER,times the derivative of the second 
CD|so,that's an instance of the product rule 
CD|now,this is the derivative of a sum,which is the sum of the derivatives 
CD|so,it's the derivative of plus the derivative of NUMBER times NUMBER plus NUMBER times the derivative of a sum,which is the sum of the derivatives 
CD|now,the derivative of,that's a derivative of a constant function that's just,this is the derivative of a constant multiple so i can pull that constant multiple out of the derivative,times NUMBER times,the derivative of is,it's the derivative of a constant,plus the derivative of x^2 is NUMBER 
NL|alright 
CD|now,i've got NUMBER times the derivative of x. the derivative of OMITTED is just NUMBER so,that's just NUMBER NUMBER NUMBER NUMBER 
NL|so,there it is 
CD|i could maybe write this a little bit more neatly 
NL|NUMBER NUMBER NUMBER *2x 
CD|this is the derivative of our original function NUMBER NUMBER 
CM|we din't really need the product rule to compute that derivative 
CD|so,instead of using the product rule on this,i'm going to first multiply this out and then do the differentiation 
NL|here,watch 
CD|so,this is the derivative but i'm going to multiply all this out,alright 
CD|so,NUMBER,which is what i get when i multiply NUMBER by x^2,plus x^2,which is NUMBER so now,i could differentiate this without using the product rule,right 
CD|this is the derivatives of big sum,so it's the sum of the derivatives 
CD|the derivative of one,the derivative of NUMBER,the derivative of x^2,and the derivative of NUMBER 
CD|now,the derivative of,that's the derivative of a constant,that's just NUMBER the derivative of this constant multiple of x^3,i can pull out the constant multiple 
CD|the derivative of x^2 is NUMBER and the derivative of NUMBER,so i can pull out the constant multiple 
CD|now,what's times the derivative of x^3 
CD|that's times,the derivative of x^3 is NUMBER times the derivative of x,which is NUMBER and then,i could write this maybe a little bit more nicely 
NL|this is NUMBER 
CD|so,this is the derivative of our original function 
NL|woah 
NL|what just happened 
CD|i'm trying to differentiate NUMBER 
CD|when i just used the product rule,i got this,NUMBER NUMBER NUMBER NUMBER 
CD|when i expanded and then differentiated,i got this,NUMBER 
CD|so,are these two answers the same 
NL|yeah 
NL|these two answers are the same 
CD|let's see how 
CD|i can expand out this first answer 
NL|this is NUMBER plus NUMBER is NUMBER 
CD|now look,, NUMBER gives me NUMBER 
CD|and NUMBER gives me this NUMBER here 
CD|these are,in fact,the same 
CD|should we really be surprised by this 
CD|i mean,i did do these things in a different order 
EX|so,in this first case,i differentiated using the product rule and then i expanded what i got 
EX|in the second case,first,i expanded and after doing expansion,then i differentiated 
CD|more succintly in the first case,i differentiated than expanded 
CD|in the second case,i expanded then i differentiated 
CD|look,you'd think the order would matter 
CD|usually,the order does matter 
CD|if you take a shower and then get dressed,that's a totally different experience from getting dressed and then stepping into the shower 
CD|the order usually does matter and you'd think that differentiating and then expanding would do something really different than expanding and then differentiating 
CD|but you've got real choices when you do these derivative calculations,and yet somehow,mathematics is conspiring so that we can all agree on the derivative,no matter what choices we might make on our way there 
CD|and i think we can also all agree that that's pretty cool 
NL|music 
NL|music 
CM|once,we believe that sine and cosine are important functions,they're all about the connection between angles and lengths 
CD|well,then we want to apply our usual calculus trick 
EX|what happens if i wiggle the input to sine and cosine 
CM|you might think about trigonometry as being something about right triangles 
CD|but,here,i've drawn a picture of a circle and you can rephrase all this stuff in terms of just geometry of the unit circle 
CD|so this is the unit circle 
CD|the length of this radius is and i've got a right triangle here and this angle is theta 
CD|that means this base here has like cosine theta and the height of this triangle is sine theta 
CD|the coordinates then,or this point on the unit circle are cosine theta sine theta 
CD|now,let's make that angle just a little bit bigger 
EX|let's suppose that i make this angle just a big bigger,and instead of thinking about theta,i'm thinking about an angle of measure theta plus OMITTED and that means this angle in between has measure h. we'll do a little bit of geometry to figure out how far that point moved when i wiggled from theta to theta plus h. so let's think about this point here and let's draw the tangent line to the circle at that particular point 
EX|well,i'm going to draw a little tiny triangle,which is heading in the direction of that of that tangent line 
CD|and,so that it's tangent to the circle,the hypotenuse of that little tiny right triangle here in red will be perpendicular to this line here 
CD|i can actually determine the angles in that little,tiny right triangle 
CD|so we go this big right triangle down here,and just because its a triangle,this angle theta plus this angle in here plus this right angle have to add up to NUMBER degrees 
CD|but i've also got a straight line here and that means that this top angle plus this right angle plus this mystery angle must also add up to NUMBER degrees 
CD|well,this plus this plus this is NUMBER degrees 
CD|and this plus this,same right angle,plus this mystery angle add up to NUMBER degrees 
CD|that means that,that mystery angle and that little tiny right triangle must also be theta 
CD|i'd also like to know the length of the hypotenuse of the little tiny triangle 
CD|radians save the day 
NL|how so 
CD|well,i want to know the length of this little piece of arc 
CD|what else do i know 
CD|i know this is a unit circle 
CD|and i know this angle here is OMITTED in radians 
CD|and the definition of radiance means that this little length of arc here has length h. now,let's put my tiny right triangle back there 
CD|i'm going to have the hypotenuse of that little right triangle also be h. it's going to be close enough,right,because this little piece of curved arch and this straight line are awfully close 
CD|now that i know the length of the hypotenuse and the angles in that right triangle i can use sine and cosine to determine the side lengths of the other two sides 
CD|so i've got a little tiny right triangle,hypotenuse h,that angle there is theta,and that means that this vertical distance here is OMITTED times cosine theta 
CD|and the horizontal distance of that little tiny red triangle is OMITTED sine theta 
NL|okay 
CD|so how much did wiggling from theta to theta plus OMITTED move the point around the circle 
CD|so the original point here from angle theta had coordinates cosine theta sine theta 
CD|and the point up here which i got when i wiggled theta up to theta plus h,that point has coordinates cosine theta plus OMITTED sine theta plus h. so how much did wiggling from theta to theta plus OMITTED move the point 
CD|well,if i use this little right triangle as the approximation,sine theta increased by about OMITTED cosign data,and cosign data decreased by about OMITTED sine theta 
CD|we're now in a position to make a claim about the derivative 
SM|in other words,from the picture,we learned that sine theta plus OMITTED is about sine theta plus OMITTED cosine theta 
CD|and cosine theta plus OMITTED is about cosine theta minus OMITTED sine theta 
CD|and as a result,we can say something now about the derivatives 
CD|how does changing theta affect sine 
CD|well,about a factor of cosine theta compared to the input 
CD|so the derivative of sine is cosine theta 
CD|and how does changing theta affect cosine 
CD|well,about a factor of negative sine 
CD|so the derivative of cosine is negative sine 
CD|maybe you don't find all this geometry convincing 
CD|well,we could go back to the definition of derivative in terms of limits and calculate the derivative of sin directly 
CD|so if i want to calculate the derivative of sin using the limit definition of the derivative,well,the derivative of sine would be the limit as OMITTED approaches of sine theta plus OMITTED minus sine theta over h. the trouble now,is that i've got ta somehow calculate sine theta plus h. how can i do that 
CD|well,you might remember,there's an angle sum formula for sine 
CD|sine of alpha plus beta is sine alpha cosine beta plus cosine alpha sine beta 
CD|if i use this,but replace alpha by theta and beta by h,i get this 
CD|sine of theta plus OMITTED can be replaced by sine theta cosine OMITTED plus cosine theta sine h. so let's do that 
CD|so,the derivative is the limit as OMITTED approaches zero of,instead of sine theta plus h,it's sine theta times cosine h. this first term,plus cosine theta sine OMITTED minus sine theta from up here and this whole thing is divided by h. so,this is sine theta plus OMITTED minus sine theta all over h. now,i can simplify this a bit 
CD|i've got a common factor of sine theta,so i can pull that out 
CD|this is the limit as OMITTED approaches zero,pull out that common factor of sine theta 
CD|what's left over is cosine OMITTED minus over OMITTED plus,i've still got this term here,cosine theta sine OMITTED over h. i'll write that as cosine theta times sine OMITTED over h. all right 
CD|so this limit calculates the derivative of sine 
CD|now,it's written as a limit of a sum,which is a sum of the limits,provided the limits exist 
CD|so,i can also note that sine theta and cosine theta are constants 
CD|right,h is the thing that's wiggling,so i can pull those constants out of the limits as well 
CD|so what i'm left with is sine theta 
CD|times the limit as OMITTED approaches of cosine OMITTED minus over h. plus cosine theta times the limit as OMITTED approaches of sine OMITTED over h. now,how do i calculate these limits 
CD|well,we've got to remember way back to when we were calculating limits a long,long time ago 
CD|we can calculate these limits by hand,using say,the squeeze theorem 
CD|and it happens that this first limit is equal to and the second limit is equal to NUMBER so i'm left with plus cosine theta 
CD|so,this is a limit argument,back from the definition of derivative that the derivative of sine is cosine 
CD|so,regardless of whether you think more geometrically or more algebraically,the derivative of sine is cosine and the derivative of cosine is minus sine 
CD|now,once you believe this,there is some sort of weird things you might notice,like what if you differentiate sine a whole bunch of times 
CD|so the derivative of sine is cosine and the second derivative of sine,is the derivative of the derivative 
CD|it's the derivative of cosine which is minus sine 
CD|and the third derivative of sine is the derivative of the second derivative and the derivative of minus sine is minus cosine 
CD|and the fourth derivative of sine,well,that's the derivative of the third derivative,which is minus cosine 
CD|and the derivative of a cosine is minus sine 
CD|so,the derivative of minus cosine is sine 
CD|so the fourth derivative of sine is sine 
CD|so that's kind of interesting 
CD|if you differentiate sine four times,you get back to itself 
CD|and we alreaOMITTED know a function that if you differentiate just once,it spits out itself again,e to the OMITTED is its own derivative 
EX|so as sort of a fun challenge,you might try to find a function f,so that if you differentiate it twice,you get back the original function,but if you differentiate it only once,you don't get back the original function 
EX|and if you can do this,you can ask the same question for even higher derivatives 
EX|we know a function whose fourth derivative is itself,but none of the earlier derivatives are the function again 
EX|can you find a function whose third derivative is itself,but the first and second derivatives aren't the original function 
EX|that's a fun little game to play,anyway,it's a little challenge for you to try to find such a function 
CM|music let's integrate OMITTED squared from to by using the definition of integral 
CD|now,since the function OMITTED squared is continuous,it's integrable 
CD|so,it won't matter exactly how we choose our partition or how we choose our sample points as long as the partition is fine enough 
CD|so,i'm going to choose a partition in which each of the subintervals has the same width,over n. i'm going to divide the interval into OMITTED pieces each with the same size 
CD|now,i've got to figure out exactly where those cut points are being made 
CD|and i'm labeling these points OMITTED sub i,so my left hand OMITTED point is OMITTED sub and my right hand OMITTED point is OMITTED sub n,and my cut points in between where i'm cutting up to partition are i over n. so,the first one here,or the one after the of anyway,is over n. the next one is over n,the next one is over n,and each of those subintervals has the same width,over n. now,i also have to choose points to sample the function at,and i'm just going to choose the right hand end point here 
CD|so,my OMITTED sub sample point will be over n,my OMITTED sub sample point will be over n,and so on 
CM|and i can write down the riemann sum,right 
CD|the riemann sum is the sum,i goes from to n,the function evaluated at the sample point times the width of this i-th interval,right 
CD|which i could write as OMITTED sub i minus OMITTED sub i minus NUMBER now,in this case some of this is a little bit easier 
CD|i know i can write this a little bit more nicely,right 
CD|OMITTED of OMITTED of i star,x of i star being i over n,and the function being the squaring function 
CD|i can rewrite this riemann sum as i over OMITTED squared,and then OMITTED of i minus OMITTED of i minus NUMBER that's just the width of the i-th subinterval in my partition 
CD|and that's,you know,how far apart these numbers are,and that's over n. so,there is my riemann sum associated to this particular partition as my particular choice of sample point 
CD|i can evaluate that exactly by using some of the facts we've learned about sums 
CD|in fact,i want to do a little bit more than just evaluate this,right 
CD|i want to take the limit of this as OMITTED goes to infinity 
CD|and by choosing finer and finer partitions,that's going to give me better and better approximations to the true area under the graph of this function,right 
CD|that's the area that i'm trying to calculate by evaluating this particular riemann sum and taking the limit as the number of pieces in my equal length partition goes to infinity,okay 
CD|so,this is really what i want to calculate,alright 
CD|i want to calculate the limit as the number of things in my partition,each of equal size,goes to infinity,right 
CD|that's a finer and finer partition 
CD|and this is the riemann sum that we had before 
CD|and this is calculating the integral from to of OMITTED squared 
NL|all right 
NL|well,how do i do this now 
CD|well,this is the limit as OMITTED approaches infinity of the sum,i goes from to n,and this is i squared over OMITTED squared times over n. now,n is a constant,so i can pull this out of a sum by using distributivity 
CD|this is the limit as OMITTED approaches infinity of over OMITTED cubed times the sum of i squared,i goes from to n. now we think back,i've got a formula for the sum of the first OMITTED perfect squares,right 
CD|that formula tells me that this is the limit as OMITTED goes to infinity of over OMITTED cubed times,and what's the sum of the first OMITTED perfect squares 
CD|it's OMITTED times OMITTED plus times NUMBER plus all over NUMBER now,i could expand that out 
CD|this is the limit as OMITTED goes to infinity of over OMITTED cubed times NUMBER cubed plus NUMBER squared plus OMITTED all over NUMBER and this limit,well,it really just matters,right 
CD|what these highest powers are 
CD|there's an OMITTED cubed in the denominator,or a NUMBER cubed in the denominator,and a NUMBER cubed in the numerator 
CD|and as OMITTED approaches infinity,this is NUMBER 
SM|let's summarize this with an official looking statement 
SM|so,the integral from to of OMITTED squared OMITTED,right 
CD|we've just calculated this as NUMBER 
SM|and what that's really saying is that if i've got say,this graph here,say this is the graph of OMITTED equals OMITTED squared,this integral is calculating this area,right 
CD|the area between and underneath the graph of OMITTED squared,right 
SM|this red area here is NUMBER square unit as a result of the integral calculation 
CD|now,i can play around with this a little bit 
CD|so,to say that the integral from to of OMITTED squared OMITTED is NUMBER,well,one thing i could do with this is i could multiply this by,right 
CD|what's times the integral from to of OMITTED squared 
AP|well,that's times a NUMBER,that's equal to NUMBER but times an integral,that's the same as integrating from to times the function,right 
AP|and this is really worth thinking about 
AP|i mean,here i'm taking this area and multiplying it by NUMBER here,i'm calculating the area of the graph stretched in the OMITTED direction by times,right 
CD|and these are the same 
CD|and this is saying that the integral from to of NUMBER squared OMITTED is equal to NUMBER so,what does that mean 
CD|so here,i've graphed the function OMITTED equals OMITTED squared from to NUMBER and the area in there is NUMBER of a square unit 
CD|that's the first calculation that we did 
CD|and,now what i'm claiming is that if i took this same function here but multiplied it by,right 
CD|which has the effect of stretching it in the OMITTED direction by times as much 
CD|well,that triples the area 
CD|so,the original area here is a NUMBER,but now there's new area square unit,right 
CD|which is what i've written here,okay 
CD|so,what does it mean to say that the area under the graph is one square unit 
CD|what i don't mean is that i can take a square of side length and cut it up and exactly cover that region 
CD|that's really not what i'm talking about when i claim that,that region has area NUMBER if i claim that,that region is area one,i really mean two different things 
CD|i mean that if i had a square with just a little tiny corner nicked off of it,i could take that thing that has area just under one unit and chop it up into little pieces and fit that thing entirely inside my curved region 
CD|conversely,i mean that i could take a square of side length and just a little bit of extra area,and i could cut that thing up into little tiny pieces and cover up my curved region,right 
SM|but it's fundamentally all about limits,right 
CD|this whole story isn't actually about achieving anything 
CD|it's just saying that i can get as close as i want,right 
SM|it's saying that i can take this almost square unit entirely inside,or i could take a little bit more than square unit and cover it up 
SM|but i'm never actually asserting that things are equal 
SM|i'm just saying that they are as close as i like them to be 
SM|music thus far,i've been trying to sell you on the idea that the derivative of OMITTED measures how we wiggling the input effects the output 
SM|a very important point is that sensitivity to the input depends on where you're wiggling the input 
EX|and here's an example 
EX|think about the function OMITTED OMITTED =x^3 
EX|OMITTED which is NUMBER is NUMBER OMITTED NUMBER NUMBER cubed is NUMBER so,the input change of NUMBER was magnified by about NUMBER times in the output 
CD|now,think about OMITTED which is NUMBER,which is NUMBER OMITTED NUMBER is NUMBER so the input change of NUMBER was magnified by about NUMBER times as much,right 
CD|this input change and this input change were magnified by different amounts 
CD|you know,you shouldn't be too surprised by that right,the derivative,of course,measures this 
CD|the derivative of this function is NUMBER,so the derivative at two is NUMBER is NUMBER is NUMBER and not coincidentally,there's a NUMBER here and there's a NUMBER here,right,that's reflecting the sensitivity of the output to the input change 
CD|and the derivative of this function at is NUMBER,which is NUMBER which is NUMBER and again,not too surprisingly here's a NUMBER,right 
CD|the point is just that how much the output is effected depends on where you're wiggling the input 
CD|if you're wiggling around,the output is affected by about NUMBER times as much if we're wiggling around,the output is affected by NUMBER times as much,right 
CD|the derivative isn't constant everywhere,it depends on where you're plugging in 
CD|we can package together all of those ratios of output changes to input changes as a single function 
CD|what i mean by this,well,f OMITTED is the limit as OMITTED goes to of OMITTED x+h -f OMITTED /h 
CD|and this limit doesn't just calculate the derivative at a particular point 
CD|this is actually a rule,right,this is a rule for a function 
CD|the function is OMITTED OMITTED and this tells me how to compute that function at some input x. the derivative is a function 
CD|now,since the derivative is itself a function,i can take the derivative of the derivative 
CD|i'm often going to write the second derivative,the derivative of the derivative this way,f'' OMITTED 
CD|there's some other notations that you'll see in the wild as well 
CD|so,here's the derivative of f. if i take the derivative of the derivative,this would be the second derivative but i might write this a little bit differently 
CD|i could put these d's together,so to speak,and these OMITTED's together and then i'll be left with this 
CD|the second derivative of OMITTED OMITTED 
CD|a subtle point here is if OMITTED were maybe y,you might see this written down and sometimes people write this OMITTED^2,that's not right 
CD|i mean,it's d^2 OMITTED^2 is the second derivative of y. the derivative measures the slope of the tangent line,geometrically 
CD|so,what does the second dreivative measure 
CD|well,let's think back to what the derivative is measuring 
CD|the derivative is measuring how changes to the input affect the output 
CD|the deravitive of the derivative measures how changing the input changes,how changing the input changes the output,and i'm not just repeating myself here,it's really what the second derivative is measuring 
CD|it's measuring how the input affects how the input affects the output 
CD|if you say it like that,it doesn't make a whole lot of sense 
CD|maybe a geometric example will help convey what the second derivative is measuring 
CD|here's a function,y=1+x^2 
CD|and i've drawn this graph and i've slected three points on the graph 
CD|let's at a tangent line through those points 
CD|so,here's the tangent line through this bottom point,the point NUMBER and the tangent line to the graph at that point is horizontal,right,the derivative is there 
CD|if i move over here,the tangent line has positive slope and if i move over to this third point and draw the tangent line now,the derivative there is even larger 
CD|the line has more slope than the line through that point 
CD|what's going on here is that the derivative is different 
CD|here it's,here it's positive,here it's larger still,right 
CD|the derivative is changing and the second derivative is measuring how quickly the derivative is changing 
CD|contrast that with say,this example of just a perfectly straight line 
CD|here,i've drawn points on this line 
CD|if i draw the tangent line to this line,it's just itself 
CD|i mean,the tangent line to this line is just the line i started with,right 
CD|so,the slope of this tangent line isn't changing at all 
CD|and the second derivative of this function,y=x+1,really is,right 
CD|the function's derivative isn't changing at all 
EX|here,in this example,the function's derivative really is changing and i can see that if i take the second derivative of this,if i differentiate this,i get NUMBER,and if i differentiate that again,i just get two,which isn't NUMBER there's also a physical interpretation of the second derivative 
CD|so,let's call OMITTED t,the function that records your position at time t. now,what happens if i differentiate this 
CD|what's the derivative with respect to time of OMITTED OMITTED 
CD|i might write that,p OMITTED 
CD|that's asking,how quickly is your position changing,well,that's velocity 
CD|that's how quickly you're moving 
CD|you got a word for that 
CD|now,i could ask the same question again 
CD|what happens if i differentiate velocity,i am asking how quickly is your velocity changing 
CD|we've got a word for that,too 
CM|that's acceleration 
CD|that's the rate of change of your rate of change 
CD|there's also an economic interpretation of the second derivative 
CD|so,maybe right now dhappiness,ddonuts for me is equal to,right 
CD|what this is saying 
CD|this is saying how much will my happiness be affected,if i change my donut eating habits 
CD|if i were really an economist i'd be talking about marginal utility of donuts or something,but,this is really a reasonable statement,right 
CD|this is saying that right at this moment you know,eating more donuts really won't make me any more happier and i probably am in this state right now,because if this weren't the case,i'd be eating donuts 
CD|so,let's suppose this is true right now and now,something else might be true right now 
CD|i might know something about the second derivative of my happiness with respect to donuts 
CD|what is this saying 
CD|maybe this is positive right now 
CD|this is saying that a small change to my donut eating habits might affect how,changing my donut habits would affect how happy i am 
CD|if this were positive right now,should i be eating more donuts,even though dhappiness,ddonuts is equal to zero 
CD|well,yeah,if this is positive,then a small change in my donut eating habits,just one more bite of delicious donut would suddenly result in dhappiness,ddonuts being positive,which should be great,then i should just keep on eating more donuts 
CD|contrast this with the situation of the opposite situation,where the second derivative happens with respect to donuts isn't positive,but the second derivative of happiness with respect to donuts is negative 
CD|if this is the case i absolutely should not be eating any more donuts because if i start eating more donuts,then i'm going to find that,that eating any more donuts will make me less happy 
EX|let's think about this case geometrically 
EX|so here,i've drawn a graph of my happiness depending on how many donuts i'm eating 
EX|and here's two places that i might be standing right now on the graph 
EX|these are two places where the derivative is equal to zero 
EX|and i sort of know that i must be standing at a place where the derivative is,because if i were standing in the middle,i'd be eating more donuts right now 
CD|so,i know that i'm standing either right here,say,or right here 
CD|or maybe here,or here 
CD|i'm standing some place where the derivative vanishes 
CD|now,the question is how can i distinguish between these two different situations 
CD|right here,if i started eating some more donuts,i'd really be much happier 
CD|but here,if i started eating some more donuts i'd be sadder 
CD|well,look at this situation,this is a situation where the second derivative of happiness to respected donuts is positive,right 
CD|when i'm standing at the bottom of this hole,a small change in my donut consumption starts to increase the extent to which a change in my donut consumption will make me happier,alright 
CD|if i find that the second derivative of my happiness with respect to donuts is positive,i should be eating more donuts to walk up this hill to a place where i'm happier 
CD|contrast that with a situation where i'm up here 
CD|again,the derivative is zero so a small change in my doughnut consumption doesn't really seem to affect my happiness 
CD|but the second derivative in that situation is negative 
CD|and what does that mean 
CD|that means a small change to my donuts consumption starts to decrease the extent to which donuts make me happier 
CD|so,if i'm standing up here and i find that the second derivative of my happiness with respect to donuts is negative,i absolutely shouldn't be eating anymore donuts 
CD|i should just realize that i'm standing in a place where,at least for small changes to my donut consumption,i'm as happy as i can possibly be and i should just be content to stay there 
CD|there's more to this graph 
CD|look at this graph again 
CD|so,maybe i am standing here 
CD|maybe the derivative of my happiness with respect to donuts is zero 
CD|maybe the second derivative of my happiness with respect to donuts is negative 
CD|so,i realize that i'm as happy as i really could be for small changes in my donut consumption 
CD|but if i'm willing to make a drastic change to my life,if i'm willing to just gorge myself on donuts,things are going to get real bad,but then they're going to get really really good and i'm going to start climbing up this great hill 
CD|it's not just about donuts,it's also true for calculus 
CD|look,right now,you might think things are really good,they're going to get worse 
CD|but with just a little bit more work,you're eventually going to climb up this hill and you're going to find the immeasurable rewards that increased calculus knowledge will bring you 
NL|music 
NL|music 
NL|welcome to calculus one 
NL|i'm glad you're in this course,or maybe quest for understanding calculus 
NL|alright,we really are on a quest,you know,we're taking thousands of years of human ingenuity 
NL|right 
SM|the sort of triumph of humankind to be able to understand numbers and functions 
EX|all of these insights that humans have had for thousands of years,and we're just distilling all those down to short videos and exercises 
SM|you know,and it's not going to be easy,all right 
SM|to take thousands of years of insight,and try to cram that in to short online learning modules,it's going to be challenging to understand all this stuff 
NL|but i think the payoff is worth it 
NL|you know 
CM|anf for me the payoff is worth it,because the concepts in calculus are just really cool 
CD|calculus is a huge subject,and it combines just a lot of different topics 
EX|you know,a calculus course and this course,introduces things like functions and limits,talk about infinity,talk about derivative,talk about area and integrals 
CD|and the big surprise is that all of these seemingly unrelated topics,end up being related 
NL|right 
CD|there's connections between all of these different concepts that are appearing in calculus 
CD|and i think those kinds of connections are just very exciting 
SM|another cool thing about calculus,is that we get to do a lot of neat computations 
SM|alright,we're going to learn how to compute derivatives,compute areas 
NL|you know,but don't get me wrong 
NL|right 
SM|at the end of this whole process,the goal isn't really to be able to compute things 
NL|right 
SM|the goal is insights,it's understanding,it's some appreciation of the concepts,and how these concepts connect together 
CD|and doing the computations is certainly a prerequisite to being able to understand those concepts 
SM|but i really hope to,to dig deeper,you know,and to be able to see how all of these different ideas within calculus are related 
SM|it's going to be a challenging quest,but i think it's a worthwhile quest,and i'm glad that you've chosen to join us 
NL|good luck 
NL|music 
CM|music we're going to calculate the derivative of OMITTED squared with respect to x. maybe a little bit more prosaically,i want to know how wiggling OMITTED affect OMITTED squared 
CD|there's a ton of different ways to approach this 
EX|let's start by looking at this numerically 
CD|so let's start off by just noting that sqyared is,and i'm going to wiggle the and see how the wiggles 
EX|instead of plugging in,let's plug in NUMBER squared is NUMBER and let's just keep on going with some more examples 
CD|NUMBER squared is NUMBER 
EX|NUMBER squared,say,is NUMBER alright,so those are a few examples 
CD|i've wiggled the inputs,and i've seen how the outputs are affected 
CD|and of course the,all the outputs are close to,alright 
CD|but they're not exactly NUMBER when i wiggled the input from to NUMBER,the output changed by about.04,and a little bit more,but that'ts a lot smaller 
CD|when i wiggled the input from to NUMBER,the output changed by about.08,not exactly.08,but pretty close to.08. and when i wiggled from to NUMBER,the output changed by about 
CD|about.012 and a little bit more,but,you know,it's close 
CD|now look at the relationship between the input change and the output change 
CD|the input change by.01,the output change by times as much,about 
CD|the input change by.02,the output change by times as much 
CD|the input change by.003,the output change by about times as much 
SM|i'm going to summarize that 
SM|the output change is the input change magnified by times 
NL|right 
SM|the input change by some factor 
SM|and the output change by about times that amount 
EX|let's see this at a different input point 
EX|instead of plugging in,let's plug in and see what happens 
CD|so NUMBER is,but what's,say NUMBER 
CD|that's NUMBER or what's NUMBER 
CD|well,that's NUMBER maybe wiggle down a little bit 
CD|what's NUMBER squared 
CD|that's close to but wiggling down by.01. that's NUMBER let's see how much roughly the output changed by 
CD|when i went from to NUMBER the output changed by out point NUMBER when i went from to NUMBER,the output changed by about.06,and when i went from down to NUMBER,the output when down by about.06 again 
NL|little bit less 
CD|now what's the relationship between the input change and the output change 
CD|well here the input changed by.1,the output change by.6,about times as much 
CD|again,the input change by.01,the output changed by about six times as much 
CD|and when the input went down by.01 the output went down by about six times as much 
CD|so again,we're seeing some sort of magnification of the output change to the input change,but now it's magnified not by four times but by six times 
CD|so the important lesson here is that the extent to which wiggling the input affects the output depends on where you're wiggling 
CD|if you're wiggling around,the output is being changed by about four times as much 
CD|if you're wiggling the input around,the output is being change by about six times as much 
EX|instead of doing just a few numerical examples,let's generalize this by doing some algebra 
CD|so,i'm starting with x^2 and i'm going to wiggle OMITTED and see how x^2 is effected 
CD|so,instead of plugging in x,i'll plug in OMITTED something,let's call the change in x,h. now i want to know,how is this related to OMITTED 
CD|well i can expand out x+h ^2,that's x^2+2xh+h^2 
CD|so when i wiggle the input from OMITTED to x+h,how is the output being affected 
CD|well the output,is the old output value plus this change in output value NUMBER,h^2 is pretty small 
CD|when OMITTED is small,h^2 is really small so i'm going to throw that away for now 
SM|and just summarize this by saying that the output change is NUMBER and the input change 
CD|is h. now the derivative is supposed to measure the relationship between the output change and the input change 
CD|so i'm going to take the ratio of the output change to the input change,and NUMBER,as long as OMITTED isn't NUMBER this is the ratio of output change to input change and that makes sense,right 
CD|think back to what just happened here a minute ago,when we were plugging in some nearby values and seeing how the outputs were affected 
CD|when i was wiggling the input around,the output was changing by about twice NUMBER when i was wiggling the input around,the output was changing by about twice,alright 
CD|NUMBER is the ratio of output change to input change 
CD|if the algebra's not really speaking to you,we can also do this geometrically,like drawing a picture 
CD|here's a square of side length x. the area of this square is not,coincidentally,x^2 
CD|now i want to now the derivative of x^2 with respect to x. i want to know how changing OMITTED would affect the area of this square 
EX|now to see this here is another square 
CD|this is a slightly larger square of side length x+h 
CD|OMITTED is a small but positive number 
CD|so how does the area of this new square compare to the area of this old square 
CD|let me put the old square on top of the new square,and you can see that when i change the input from OMITTED to x+h,i gained a bit of extra area 
CD|the derivative is recording the ratio of output change to input change 
CD|so,i want to know what's the ratio of this new area as compared to just the change in the input h. so,let me pull off the extra area 
CD|there is extra area,is this OMITTED shaped region 
CD|how big is this OMITTED shaped region 
CD|well,this short side here,has side length h. this side length here,is also h. this is the extra length that i added when i went from OMITTED to x+h 
CD|this inside has length x,and this inside edge has length x. now i want to know the area of this region 
CD|to see that,i'm going to get out my scissors and cut this region up into pieces 
EX|now here's one of those pieces 
EX|and,here's another one of those pieces 
EX|and,here's the third piece 
CD|so these are the long thin rectangles,and they've both got height h,and length x. i'm also left with this little tiny corner piece 
CD|and that little tiny corner piece has side length h,and the other side is also length h. it's a little tiny square 
CD|well the limit,this little tiny corner piece,is infinitesimal 
CD|i'm going to throw this piece away and most of the area is left in these long,thin rectangles 
CD|if i rearrange these long,thin rectangles a bit,can put them end to end 
CD|they've both got height h. so i can put them next to each other like this 
CD|and their base is both length x. so how much area is in this long thin rectangle 
CD|well,it's height h,it's width is NUMBER 
CD|so the area is NUMBER h. now this is the additional area,excepting for that little tiny square,which we gained when i changed the size of the square from OMITTED to OMITTED h. so the change in output is about OMITTED h. the change in input was h,so the ratio of output change to input change is x. maybe what we're doing here seems a little bit wishy washy,not really precise enough 
CD|but we can also calculate the derivative of OMITTED with respect to x,by just going back to the definition of derivative in terms of limits 
CD|carefully,f of OMITTED is x^2 
CD|and the derivative of OMITTED is by definition the limit as OMITTED approaches NUMBER OMITTED of OMITTED plus OMITTED minus OMITTED of x,the change in output divided by h,the change in input 
CD|in this case OMITTED of OMITTED plus OMITTED is just OMITTED plus OMITTED squared and OMITTED of OMITTED is just OMITTED squared 
CD|i'm dividing by h. i can expand this out 
CD|this is the limit as OMITTED approaches of x+h ^2-x^2 /h 
CD|now i've got an x^2-x^2,so i can cancel those,and i'm just left with the limit,as OMITTED approaches,of NUMBER /h 
CD|more good news,in the limit i'm never going to be plugging h=0,so i can replace this with an equivalent function that agrees with it when OMITTED is close to but not equal to NUMBER in other words,maybe a little bit more simply,i'm canceling an OMITTED from the numerator to the denominator 
CD|so,NUMBER over OMITTED is just NUMBER and h^x over OMITTED is just an h. now what's the limit of this sum 
CD|well that's the sum of the limits 
CD|it's the limit of NUMBER as OMITTED approaches the limit of OMITTED as OMITTED approaches NUMBER now as far as wiggling OMITTED is concerned,NUMBER is a constant,so the limit of NUMBER as OMITTED approaches is just NUMBER 
CD|and what's the limit of OMITTED as OMITTED approaches 
CD|well,what's OMITTED getting close to when OMITTED is close to NUMBER that's just NUMBER so,this limit is equal to NUMBER and that's the derivative of x^2 
CD|what that limit is really calculating is the slope of a tangent line at the point OMITTED and we can see that it's working 
CD|this is the graph of y=x^2 
CD|at -4 the slope of the tangent line is -8 at,the slope of the tangent line is,and,at,the slope of the tangent line is NUMBER there's a ton of different perspectives here 
CD|we've been thinking about the derivative of OMITTED with respect to x,numerically,algebriaically,geometrically,going back to the definition of derivative in terms of limits,looking at it in terms of slopes of tangent lines 
CD|what makes derivatives so much fun is that there just so many different perspectives on this single topic,no matter how you slice it 
SM|we've shown that the derivative of OMITTED squared with respect to OMITTED is times x. maybe you like algebra,maybe you like geometry,maybe you just like to play with numbers 
CD|but now matter what your interests are,derivatives have something to offer you 
NL|music 
NL|music 
EX|let's suppose that you work for a soup company,and they've given you a task,a task to design a soup can that can hold NUMBER times pi cubic centimeters of soup 
CD|this is really an optimization problem 
CD|your goal is to design a soup can using as little metal as possible,which nevertheless holds NUMBER pi cubic centimeters of soup 
CD|okay,less dramatically,you're really being asked to produce a cylinder with a given volume 
CD|i want the volume of the thing to be NUMBER pi cubic centimeters,and i want you to minimize the surface area,right 
CD|this thing's got a side and a top and a bottom 
CD|and i want you to minimize the surface area for a given volume 
CM|probably helps to review a little bit of the geometry that goes into this problem 
EX|here's a picture of a cylinder right,and it's got some height that i'll be calling OMITTED and a radius that i'll call r. and the volume of this cylinder is pi OMITTED squared h. all right,pi OMITTED squared is the area,and i'm multiplying by OMITTED to compute the volume of this disk dragged through space 
CD|what's the surface area of this cylinder 
CD|well pi OMITTED squared counts the surface area of the top disk and the bottom disk 
CD|each of those has pi OMITTED squared for their area 
CD|and the curved part of this cylinder has area pi OMITTED h. okay,let me draw a picture of my soup can 
EX|so,yeah,here's a little picture of our soup can,and you see i've labeled the relevant sizes 
CM|the height of the can and the radius of the can is what i'm trying to figure out 
CD|now what is it that i'm trying to optimize 
CD|so i'm trying to minimize the surface area 
CD|here's that formula for the surface area of this can,and i want that surface area to be as small as possible 
CD|of course,if i wanted to make that surface area as small as possible,i just make a really tiny soup can,right 
CD|but there's a constraint 
CD|well,the constraint is that soup can has to hold NUMBER pi cubic centimeters of soup 
CD|so i'm trying to make this quantity,the surface area,as small as possible,subject to the constraint that the volume of the soup can is in fact NUMBER pi 
CD|and i should also point out that the radius and height had better be positive 
CD|otherwise,kind of nonsense 
CD|this thing that i'm trying to optimize really involves two variables 
CM|it involves the height and also a radius 
CD|yeah this is some bad news,right 
CD|the quantity that i'm trying to minimize involves variables,involves OMITTED and h. and calculus,as we've been setting it up,only works for understanding how a single variable changing affects something else 
CD|so i need to rewrite this function of two variables as a function of a single variable 
CD|so,here we go,let's take this constraint and let's solve for h,all right 
CD|and if i start doing that,well,h is NUMBER pi over pi OMITTED squared and i can cancel these,pis and i'm just left with OMITTED is NUMBER over OMITTED squared 
CD|so,for a given radius,this is how tall i need to make the soup can to guarantee that the soup can holds NUMBER pi cubic centimeters of soup 
CD|now,once i've got an equation for OMITTED in terms of r,i can use this to rewrite the thing i'm trying minimize just in terms of r. so,here we go 
CD|the thing i'm trying to minimize now is pi OMITTED squared plus pi OMITTED times h,but h,in order to satisfy the constraint,is NUMBER over OMITTED squared 
CD|and now i can simplify this a little bit further,right 
CD|i've got an OMITTED and an OMITTED squared here 
CD|so i can get rid of this square and get rid of this r. and then,the thing i'm trying to minimize is pi OMITTED squared plus pi times NUMBER,which is NUMBER pi divided by r. so this is the quantity that i'm trying to minimize 
CD|now that i've got this thing written as a function of a single variable,i'm really tempted to do the fifth step here 
CD|apply calculus,right 
CD|if i got a function of a single variable,i could differentiate 
CD|ind the critical points 
CD|figure out where the maxima and minima occur 
CD|but before we dive in to the calculus side of this problem,let's just think about some creative solutions to the soup can issue 
EX|for example,here's a little model of a situation 
CD|here's the sun,here's earth and here is my new plan for soup cans,right 
CD|really big radius,really tiny height,right 
CD|even if OMITTED is you know,NUMBER million miles,that can make OMITTED small enough so that this soup can contains exactly NUMBER pi cubic centimeters of soup 
NL|laugh 
CD|well,what's the surface area in this case 
CD|is this a really good choice for a soup can,in,in terms of surface area 
NL|no,right 
CD|if i make OMITTED really big,admittedly,this quantity,NUMBER pi over r,which is measuring the curved area,that'll end up being very small 
CD|right,but pi OMITTED squared when OMITTED is really big,this quantity,the amount of metal in the top and the bottom of the can is enormous right 
CD|so this is not a great choice for soup cans 
CD|so having the soup can shaped like a giant pancake is a terrible idea 
CD|but what if i went the other way 
CD|here is a piece of wire,what if i made the soup can really long and thin like this piece of wire 
CD|well,here is that long,thin wire-shaped soup can,right 
CD|even if i make the radius of my cylinder very small,if i make it long enough,then the soup can does hold NUMBER pi cubic centimeters of soup,right 
CD|and the question is,is this a really smart choice to minimize surface area,and no,it turns that if OMITTED is really small,that's really not all that helpful 
CD|yeah,if OMITTED is really small,then pi OMITTED squared is really small 
CD|i don't need very much metal on the top and the bottom of the soup can 
CD|but then NUMBER pi over r,which is how much metal is in the curved part of the soup can,this quantity is going to be enormous 
CD|so really,we see that these two things are competing against each other 
CD|a small value of OMITTED isn't really very helpful,and a really big value of OMITTED isn't very helpful 
CD|so our creative solutions didn't quite pan out 
CD|let's do some calculus now 
CD|okay,so i'm going to think of this surface area as a function of a single variable,r,right 
CD|here it is,f of OMITTED is pi OMITTED squared plus NUMBER pi over r,and i'm going to differentiate,and here's the derivative 
CD|all right,i differentiate pi OMITTED squared to get pi r,and i differentiate this number divided by r. well,over OMITTED is negative over OMITTED squared 
CD|that's its derivative 
CD|and the i multiply by NUMBER pi 
CD|so this,is the derivative of this 
CD|now,i need to find the critical points 
CD|now,remember what critical points are,right 
CD|critical points are where the derivative vanishes,or where the derivative doesn't exist,right 
CD|the function's not differentible 
CD|this function,that was differentible on its domain 
CD|all right 
CD|you might worry when OMITTED is equal to NUMBER but that's not even in the domain of the original function 
CD|so i don't have to worry about that 
CD|all right,now we've got ta figure out,when is the derivative equal to zero,so i'm trying to solve this 
CD|i'll add NUMBER pi over OMITTED squared to both sides 
CD|so pi OMITTED must be NUMBER pi over OMITTED squared in that case 
CD|i'll multiply both sides by OMITTED squared,and i'll divide both sides by pi 
CD|and i'll get OMITTED cubed is NUMBER pi over pi 
CD|the pis cancel,and NUMBER over is NUMBER,so OMITTED cubed must be NUMBER in other words,r is the cube root of NUMBER this is the only critical point 
CD|now that i found the critical points,what about the end points 
CD|well,the end points actually aren't really valid in this situation 
CD|one of the end points might be when OMITTED is equal to zero 
CD|but in that case,the soup can has no volume 
CD|so i can't satisfy the constraint 
CD|the same thing happens when OMITTED is equal to zero 
CD|in that case,the soup can,again,has no volume 
CD|so i can't satisfy the constraint 
CD|so,i don't have to worry about the end points,because they're not in the domain that i'm considering 
CD|but i do have to worry about the limiting behavior when OMITTED is really big or when OMITTED is really small 
CD|so,we actually alreaOMITTED handled the limiting behavior 
NL|right 
CD|we've alreaOMITTED considered the situation when OMITTED is really small 
CD|that's the situation where the soup can's like a long,thin wire 
CD|and we checked,in that case the surface area is enormous 
NL|right 
CD|if OMITTED is small enough,the surface area can be as large as you like,and still hold NUMBER pi cubic centimeters of soup 
CD|we also consider the situation where OMITTED is really large,right 
CD|when OMITTED was really big,we had this sort of flat pancake shape for the soup can 
CD|and in that case,we again saw that if OMITTED is big enough,the surface area can be made as large as you like,while still having that soup can contain NUMBER pi cubic centimeters of soup 
CD|so,the only thing that really remains is this critical point 
CD|and if you plug this critical point into the original function,you get this as the resulting surface area,if you build your soup can with a radius of cube root NUMBER centimeters,and your height,whatever it has to be in order to guarantee that the soup can contains NUMBER pi cubic centimeters of soup 
CD|so how does this turn out 
CD|what's the best shape for a soup can 
CD|so the best case for your soup can is to use a radius of the cube root of NUMBER and you can see that from this graph 
CD|here,i'm graphing the surface area for a given radius of soup can containing NUMBER pi cubic centimeters of soup 
CD|and you can see that the graph goes up towards infinity here 
CD|and up towards infinity there 
CD|and that's exactly the situation when the radius is very small or very big 
CD|the derivative is negative and then positive 
NL|right 
CD|the function's decreasing and then increasing 
CD|so this value really is a local minimum 
CD|and in fact,this is the global minimum of this function 
NL|right 
CD|and that's why this is the best choice for your soup can 
CD|is this really a legitimate application of calculus 
AP|well,here's a task to think about 
NL|right 
AP|go out,find some soup cans and check them 
AP|are they really building soup cans in order to minimize the amount of metal that it takes to manufacture the can 
AP|or perhaps there's other issues involved in manufacturing soup cans 
CM|music differentiating is a process really guaranteed to work 
CD|alright,if someboOMITTED writes down a function and asks you to differentiate it 
NL|you can 
CD|it might be painful,alright,it might involve a lot of steps but it's just a matter of applying those steps carefully 
CM|in contrast antidifferentiation might be really hard 
EX|let's try a really hard example now 
EX|for instance,can you find some function so if i differentiate that function,i get OMITTED to the negative OMITTED squared 
EX|which is just another way of saying,i want to anti-differentiate OMITTED to the negative OMITTED squared 
NL|right,what is that 
EX|well,let's make a guess and see if our guess is correct 
CD|i mean maybe,an antiderivative of OMITTED to the negative OMITTED squared is i don't know,e to the negative OMITTED squared,over minus OMITTED plus c,right 
CD|i mean i'm not saying this is correct,but it could be true 
CD|if this were the case,i can check it,right 
CD|i can differentiate this side and see if i get this 
CD|so let's differentiate OMITTED to the minus OMITTED squared over minus x. that's sort of the same thing as differentiating OMITTED to the minus OMITTED squared times minus OMITTED to the negative NUMBER power 
CD|so that's a derivative of a product,which is assuming the product rule's good for,right 
CD|so first i'll differentiate OMITTED to the minus OMITTED squared 
CD|and i'll multiply that by the second term minus two OMITTED to the minus NUMBER power and i'll add to that the first term,e to the minus OMITTED squared times the derivative of the second term,which is minus two OMITTED to the minus NUMBER power 
CD|but what's the derivative of OMITTED to the minus OMITTED squared 
CD|that's OMITTED to the minus OMITTED square cause the derivative of OMITTED to the is OMITTED to the 
CD|times the derivative of minus OMITTED squared which is minus x. and then it's times negative OMITTED to the negative NUMBER power,right 
CD|plus OMITTED to the minus OMITTED squared times the derivative of minus OMITTED to the minus NUMBER power 
CD|i'll just copy that down and we'll deal with it in a second 
CD|because this is pretty exciting right here right 
CD|this term cancels,this term cancels,this is looking pretty good right 
CD|maybe the antiderivative of OMITTED to the minus OMITTED squared really is this 
CD|because when i differentiate this thing,at least i get a OMITTED to the minus OMITTED squared 
CD|the bad news is that i also get this term,right 
CD|and this terms out to be OMITTED to the minus OMITTED squared,now i got ta deal with this 
CD|it's again OMITTED to the minus OMITTED squared and then times the derivative of this 
CD|well,when i differentiate this,i get a negative sign times this thing to the negative NUMBER power,right 
CD|and then by the chain rule,the derivative of the inside,which is negative NUMBER and yeah,i mean this is,this is bad right 
CD|i mean i differentiated this thing right here and i got back some of that included in the OMITTED to the minus OMITTED squared but also includes non zero term 
CD|so as result this is not the case 
CD|well that didn't work but it wasn't from lack trying 
CD|in fact,an antiderivative for OMITTED to the negative OMITTED squared can not be expressed using elementary functions 
CM|what do i mean by elementary functions 
CM|i mean things like polynomials,trig functions,e to the x,log,things like that,right 
CD|i mean,this is really a surprising result 
CD|i mean there is a function whose derivative is OMITTED to the negative OMITTED squared,but it's not a function i can write down 
CD|using the functions that i alreaOMITTED have in hand 
CD|may be OMITTED to the negative OMITTED squared just an isolated terrible example 
CD|i can't answer differentiate OMITTED to the OMITTED to the OMITTED using elementary functions 
CD|i can't answer differentiate log,log OMITTED using elementary functions 
CD|i can't even answer differentiate this very reasonable looking algebraic function 
CD|the square root of plus OMITTED to the NUMBER 
CD|i can't find an anti-derivative of this just using elementary functions 
CD|so,what does this mean 
SM|let's try to summarize the situation 
SM|it's not just that many functions are hard to antidifferentiate 
SM|it's that many functions are impossible to antidifferentiate,not in the sense that they don't have an antiderivative 
SM|but in the sense that we're not going to succeed in writing down that antiderivative using the functions that we have at hand 
SM|in light of the difficulties of antidifferentiating,the fact that there's no guaranteed answer,it means that we should be happy that we can ever evaluate an antiderivative problem right 
SM|it also reflects the fact that some real creativity is needed 
SM|you know,if an answer's not guaranteed then potentially we're going to require more creativity to cook up the answers,even when they exist 
SM|music you've alreaOMITTED seen some examples where we're antidifferentiating the powers of x. so here's an example 
EX|what would i have to differentiate,right 
EX|what goes in this cloud 
CD|so if i differentiate it i get OMITTED squared or stated differently,what's the antiderivative of OMITTED squared 
CD|i've just got to think of some function because if i differentiate it i get OMITTED squared 
CD|well i can think of one 
CD|OMITTED cubed is an example of a function that if i differentiate OMITTED cubed i get back OMITTED squared 
CD|what about the general case 
CD|so when i think about what would i differentiate to get OMITTED to the n. here i'm going to suppose that OMITTED is some number but it's not negative NUMBER right,so in other words i want to know what the anti derivative of OMITTED to the OMITTED is 
CD|right,so i'm thinking what would i differentiate to get OMITTED to the OMITTED 
CD|and,i'm going to claim that it's OMITTED to the OMITTED plus,divided by OMITTED plus NUMBER now how do i know that this is the anti-derivative of OMITTED to the OMITTED 
AP|well all i've got to do is differentiate 
CD|alright,i'll differentiate OMITTED to the OMITTED plus over OMITTED plus NUMBER and i'll do that with the power rule and the constant multiple rule 
CD|this constant multiple just comes on out of this differentiation 
CD|so i've got over OMITTED plus times the derivative of OMITTED to the OMITTED plus NUMBER now,what does the power rule tell me 
CD|power rule tells me how to differentiate this 
NL|right 
CD|that's OMITTED plus,times OMITTED to the OMITTED plus minus which is just OMITTED to the n. but now this OMITTED plus and OMITTED plus cancels what i'm left with is just OMITTED to the OMITTED and that's exactly what i'm claiming right that the OMITTED type derivative of OMITTED to the OMITTED is OMITTED to the OMITTED plus over OMITTED plus NUMBER i should be careful to point out something here 
CD|what if i wanted to anti differentiate a polynomial 
CD|for example let's suppose i want to find a function big OMITTED so that the derivative of big OMITTED is little f. and maybe little OMITTED is a polynomial like maybe little OMITTED is NUMBER OMITTED squared i don't know minus OMITTED plus NUMBER all right so i'm really asking for an antiderivative of little f. i'm asking for a function whose derivative is this polynomial 
CD|we can totally do this 
CD|so let's do this using the notation that we've been developing 
CD|so i'm going to write antiderivative of NUMBER OMITTED squared minus OMITTED plus OMITTED 
CD|and this is the antiderivative of a sum of the difference,and that's the sum of the difference of the antiderivative 
CD|so i can write this as the antiderivative of NUMBER OMITTED squared OMITTED minus the anti-derivative of x,OMITTED plus the antiderivative of OMITTED 
CD|now i've got the antiderivative of a number times something 
CD|so i can pull these numbers outside of the antiderivatives 
CD|so i rewrite this as NUMBER times the antiderivative of OMITTED squared OMITTED minus four times the antiderivative of OMITTED OMITTED,plus,alright,the antiderivative of OMITTED 
NL|okay 
CD|then i think what's the antiderivative of,of OMITTED squared 
CD|what's just an antiderivative of OMITTED squared 
NL|well,i know one 
CD|it's OMITTED to the NUMBER over,right 
CD|that's the power rule running in reverse 
CD|minus times,this is an antiderivative of x,something that i differentiate to get x. well,that's OMITTED squared over,right 
CD|if i differentiate OMITTED squared over,i get back x. and what's an antiderivative of 
CD|what's something i differentiate to get 
CD|well,NUMBER is such a thing,and to write down the most general antiderivative,i'm going to add plus OMITTED here 
CD|so this is the antiderivative of this polynomial 
CD|and i could write this a little bit more nicely now since some of these things cancel 
CD|NUMBER NUMBER is OMITTED to the NUMBER,minus OMITTED squared,plus x,plus c. here we're using a sum rule,a power rule and also a constant multiple rule that we haven't seen yet 
CD|so it's worth writing down that constant multiple rule explicitly 
CD|just remember what the constant multiple rule says for just differentiation 
NL|yeah 
CD|if i differentiate say some number a times some function big OMITTED of x,well that's just a times the derivative of big OMITTED of x. and i can write down the same kind of rule,but for antiderivatives 
CD|for antiderivatives,if i'm antidifferentiating,say,a times little OMITTED of x. well,this is the same as a times the antiderivative of OMITTED of x. its not too difficult to justify this 
CD|so yeah lets try to justify this constant multiple rule for antiderivatives 
CD|lets suppose that OMITTED differentiates to give me OMITTED of x. so i'm really is supposing that big OMITTED is an antiderivative for little f. then this side here,i could rewrite a times the antiderivative of OMITTED as a times big f,it's an antiderivative of f,right,plus c. so that if i'm claiming that this,the antiderivative of a times OMITTED of OMITTED is this 
CD|it's enough to just check that the derivative of this is really this 
CD|and that's true,right 
CD|what's the derivative of a times OMITTED of OMITTED was exactly what i did up here,you know 
CD|these rules for antidifferentiation are exactly coming from the rules of differentiation 
CD|so the derivative of this constant multiple times OMITTED of OMITTED is that constant multiple times the derivative of OMITTED of x,right,and i'm claiming that the derivative of OMITTED of OMITTED is little f. so this is a times little OMITTED of x. which is exactly saying that the antiderivative here,is this 
CD|which is what i'm trying to justify 
NL|music 
CM|let's find the area between two parabolas 
CD|i want to find the area between the graph OMITTED equals OMITTED squared and the graph of OMITTED equals minus OMITTED squared 
CD|as usual let's start by graphing 
CD|well here's my coordinate plane 
CD|i'll draw a graph of OMITTED equals OMITTED squared 
CD|and the other curve is OMITTED equals minus OMITTED squared,so i'll draw a downward-facing parabola 
CD|there's the one side of it and there's the other side of it 
CD|i'll draw some rectangles to get an idea about what riemann sum i really want to take the limit of 
CD|so it's really the area inside here that i want to calculate 
CD|draw some some rectangles then for the for the riemann sum 
CD|that would approximate that area 
CD|right,so there's some rectangles for the the riemann sum that would approximate the area in there 
CD|and then i can write down the heights and the widths of one of those rectangles 
CD|let's take a look and say this rectangle here 
CD|well,what's the width of that rectangle,will be real thin,so i'll call the width OMITTED 
CD|and what's the height of that rectangle 
CD|well the top of that rectangle is on the curve minus OMITTED squared and the bottom of that rectangle was on the curve OMITTED squared 
CD|so if we take the top coordinate minus the bottom coordinate,that will give me the height of this rectangle 
CD|the top coordinate is minus OMITTED squared 
CD|the bottom OMITTED coordinate is just OMITTED squared 
CD|so this quantity is giving you the height of this rectangle 
CD|oh,now i can write down the integral 
CD|so i know the height and the width of these rectangles so the thing i want to add up are the areas of those little rectangles 
CD|so i want to integrate the height 
CD|minus,this is NUMBER squared,times the width,OMITTED 
CD|but i'm trying to integrate from where to where,right 
CD|what are the possible OMITTED values in this region 
CD|well,if we think about exactly where these two curves cross,right 
CD|what's the OMITTED coordinate where these curves cross 
CD|and this coordinate here is minus over the square root of and this coordinate is over the square root of NUMBER so i'm going to be integrating to compute the area from OMITTED equals negative over the square root of up to over the square root of NUMBER and it's this integral that'll calculate the area in between those two curves 
AP|i can use the fundamental theorem of calculus to evaluate this integral 
CM|let's find an antiderivative 
CD|so what's an antiderivative of,well OMITTED is an antiderivative of NUMBER what's an antiderivative of OMITTED squared,well OMITTED to the NUMBER over differentiates to OMITTED squared 
CD|and i'm looking for an antiderivative of a difference,so it'll be the difference of antiderivatives 
CD|now i'll evaluate my antiderivative at the right and left endpoints 
CD|right,so i have to evaluate my antiderivative at the end points,which are over the square root and minus over the square root of and then take the difference 
CD|so what do i get when i plug in over the square root of NUMBER i get over the square root of minus times over the square root of to the third divided by NUMBER so this is what i get when i plug in OMITTED equals over the square root of into my antiderivative 
CD|and i subtract what i get when i plug in negative that,which is negative over the square root of,minus times negative over the square root of cubed,all over NUMBER i can simplify this a bit 
CD|well,first off,i've got a quantity minus negative that same quantity 
CD|that's just two copies of this same quantity 
CD|now i can keep calculating this and try to simplify this even a little bit further 
CD|now let's keep going 
CD|so what do i have here 
CD|well it's times over the square root of,minus NUMBER and here i've got over the square root of to the NUMBER power 
CD|so i could write that as a half 
CD|times over the square root of NUMBER that's really copies of the square root of divided by NUMBER okay 
CD|but,times NUMBER,alright,cancels 
CD|and then i've got a common factor of over the square root of NUMBER so i could,pull out that common factor of over the square root of NUMBER and when i pull that out i've got a one there minus a third is left 
CD|now times over the square root of,that's just the square root of and minus a third well that's really NUMBER,so what's left all over here is the square root of NUMBER times NUMBER,this is the value of the integral and also then,the area between those two curves 
CD|before committing to this as my final answer,i should check to see that the answer's somewhat reasonable 
CD|well if we numerically approximate this,this is about NUMBER so is a bit less than one square unit a reasonable answer 
CD|well the region that we're interested in fits inside a rectangle of height,and width the square root of units 
CD|the area of this rectangle is about NUMBER square units 
CD|and the area of the region we just calculated to be about NUMBER square units,right 
CD|this region inside here 
CD|and it's pretty reasonable 
NL|i mean,you know 
NL|it looks like 
CD|if this thing is about NUMBER square units it's not unreasonable to think that this is a little bit less than square unit in this curved region,here 
CD|yea,we're really finding answers that accord with our geometric intuition 
CD|i want to differentiate really complicated functions 
EX|as a concrete example take a look at the function OMITTED of OMITTED equals plus NUMBER to the fifth power 
EX|let's try to differentiate this function 
AP|we could approach this in a couple different ways 
AP|first of all,i could just expand it out 
NL|alright 
CD|so i'm just going to expand this out to the fifth is just one,plus ten x,plus NUMBER OMITTED squared,plus NUMBER OMITTED cubed,plus NUMBER OMITTED to the fourth,plus NUMBER OMITTED to the NUMBER 
CD|now,it's just a polynomial so i can fearlessly differentiate it 
CD|so,f prime of x,by differentiate this,the derivative of one is zero,the derivative of ten OMITTED is ten,the derivative of NUMBER OMITTED squared is NUMBER x,and NUMBER OMITTED squared,NUMBER OMITTED cubed,and NUMBER OMITTED to the fourth 
CD|of course,if we're clever at this point,we can also see that this mess factors 
CD|so it's sort of believable as a factor of ten here,since all of these coefficients end in a zero 
CD|this is ten times one plus eight OMITTED plus NUMBER OMITTED squared plus NUMBER OMITTED cubed plus NUMBER OMITTED to the fourth 
CD|what's way less obvious,i mean not obvious at all,is that this mess also factors 
CD|it happens to be one plus two OMITTED to the fourth power 
CD|this is not an accident 
CM|what if we instead applied the change rule to original problem 
AP|so let's compute the derivative to the change rule 
CD|the first step is we're going to split up the function OMITTED into a composition of two functions,g and h,g here,the outside function is the fifth power function,and h,the inside function is one plus two x. so if i combine those two functions,save the composition,i get back f. now,i want to differentiate OMITTED and,by the chain rule,that's the derivative of the outside,add the inside function,times the derivative of the inside function 
CD|in this case,what is the derivative of the outside function 
CD|the derivative of OMITTED is five OMITTED to the fourth 
CD|so i'm going to take that but if evaluate it at h. five OMITTED of OMITTED to the fourth multiply by the derivative of h. what is the derivative of OMITTED 
NL|well,it's two 
NL|well,look what i got here 
CD|i've got five,h of OMITTED is one plus two OMITTED to the fourth times two,that's ten times one plus two OMITTED to the fourth,that's exactly what we calculated before 
EX|it's really nice example,because it shows that we're doing the same calculation 
CD|we're calculating derivative of the function one plus two OMITTED to the fifth power,but we're doing it in two different ways,nevertheless,we get the same answer 
CD|somehow,mathematics is conspiring to be consistent 
EX|okay,well,let's try another example 
EX|well,here's a more complicated function,f of OMITTED equals the square root of OMITTED squared plus NUMBER what's the derivative of OMITTED 
CD|we can't simply expand this function out,and in fact,if you graph the function,you might think that the function is not differential,because the graph of the function has this sharp corner at the origin,but let's zoom in and see what this actually looks like if we zoom in close enough 
CD|if we zoom in close enough,the thing doesn't look like it has a sharp corner anymore 
CD|it actually looks like it's curved and if we zoom in any further,the thing would look more and more like a straight line 
CD|what we're really seeing is the function is differentiable 
CD|now,we can verify this algebraically,we can use our derivative laws,like a change rule,to actually calculate the derivative of this function 
CD|we'll differentiate this by using the change rule since this is really a composition of two functions 
CD|this is a composition of the square root function and this polynomial,x squared plus NUMBER alright,so the derivative of OMITTED is the derivative of the outside function,which is the derivative of the square root,which is over square root and it's the derivative of the outside function evaluated at the inside,which is OMITTED squared plus NUMBER i have to multiply by the derivative of the inside function 
CD|what is the derivative of OMITTED squared plus NUMBER 
CD|well,that's the derivative of the OMITTED squared,since it's a constant and the derivative of OMITTED squared is two x. so the dirivitave of OMITTED is one over two OMITTED imes the square root of OMITTED squared plus NUMBER times two x. i could make that a little bit nicer looking 
CD|i could cancel these twos and write this as OMITTED over the square root of OMITTED squared plus NUMBER what happens at zero 
CD|so let compute the derivative at zero 
CD|well,if i plug in zero for x,i've got zero over zero squared plus NUMBER the denominator is not zero,the numerator is zero,the derivative at zero is zero and you can see that from the graph 
CD|if i look at when OMITTED equals zero,the tangent line at that point is horizontal,the slope of that tangent line is zero 
CD|the derivative at zero is zero,and there's more awesome things that you can see by looking at the derivative 
CD|if you look at,say,the limit of the derivative as OMITTED approaches infinity,that's the limit of this quantity,which is one,and the limit of the derivative as OMITTED approaches minus infinity is negative one and you can see this visibly on the graph of the function 
CD|if you plug in a really big number and look at the tangent line there,that tangent line has slope close to one 
CD|and,if you plug in areally negative number and look at the tangent line there,that tangent line has slope close to minus one 
CD|our derivative rules are revealing facts that are hidden 
CD|this function looks like it's got a sharp corner,but we know,by applying our differentiation rules,by using the change rule,that this function is in fact differentiable 
CD|and we know that if we zoom in close enough,the thing looks like a straight line,the derivative rules really revealing this structure at very small scales 
CD|sound so here's a table of values of the function OMITTED of OMITTED equals sin x. OMITTED of one is really sin of one,it's like OMITTED of NUMBER which is really sin of one over NUMBER sin of NUMBER -.5. OMITTED of NUMBER this will be sine of NUMBER,it's also about -0.5. OMITTED of NUMBER,which is like sine of NUMBER,well that's NUMBER and some more,right 
CD|so the question is these numbers aren't really getting close to anything in particular 
CD|can you really say that if you evaluate OMITTED at values which are close to but not equal to zero,that the outputs are actually getting close to anything in particular 
CD|i mean this is positive,negative,negative,positive,negative,positive,negative,it's looking pretty bad 
EX|instead of a table,let's look at a graph 
EX|here,i've got a graph of the funtcion OMITTED OMITTED sin x. and you see the middle of this graph is just that horrible green blob 
NL|right 
CD|it's really hard to make out any detail 
CD|you might think that's just a consequence of the fact that i'm drawing this graph with such thick lines 
CD|you know,and if i used thinner lines to draw my graph,maybe i could,you know get rid of this green blob and really see some detail 
CD|even if i dial down the size of the lines that i'm using to draw this graph,the blob thing is still there,you know 
CD|and it's really there in the graph of the function 
CD|even if these lines were true lines,zero thickness,it wouldn't be possible to fit even a single atom next to the OMITTED axis without touching the graph of this function 
CD|the graph is oscillating wildly near zero 
CD|even if your input is very close to zero your output could be anything between -1 and NUMBER so in light of this evidence,the limit of sine OMITTED as OMITTED approaches does not 
NL|sound exist 
CD|which sometimes i'll abbreviate dne,for does not exist 
CD|what does it even mean to say it doesn't exist 
CD|what do we mean by the definition of limit 
CD|to say the limit equals something means that i can make the output as close as i want to OMITTED by making OMITTED close to a. so when i say this limit doesn't exist,i mean it's not the case that this limit is equal to anything,okay 
CD|if you tell me this limit is some positive number,well look 
CD|when i evaluate the function at a number very close to,the output is negative 
CD|so the limit is probably not some positive number but there's also inputs very close to zero that give positive outputs so that the limit is pulling out a negative number either 
SM|limit is pulling out zero either cause none of these numbers are getting close to zero 
CD|so in this sense 
CD|this limit just doesn't exist because it's not the case that this limit is equal to anything in particular 
CD|if you tell me this limit is equal to l,i'm going to show you numbers close to zero which aren't close to l. let's see another example along the same lines 
EX|this is a particularly confusing example because in the function OMITTED OMITTED OMITTED sine pi x. the function evaluated at is NUMBER that's pretty clear because that is sine of pi and sine of pi is zero 
CD|about the function at NUMBER,i'm counting that's also equal to zero 
CD|the function at NUMBER,that is also zero 
CD|this can be kind of confusing 
CD|when you take a look here,i typed in sin pi divided by NUMBER on to my calculator 
CD|this is calculating the function's value at NUMBER if i ask my calculator to do this,it is not telling me the answer zero,right 
CD|the calculator's giving me this,admittedly,a very small number,right,e -11 here 
CD|but it's still not actually zero 
CD|so,can i convince you that this is even true 
CD|that the functions value at NUMBER actually is equal to zero 
CD|what is OMITTED NUMBER 
CD|well it's the same as sine,of pi NUMBER now here i'm taking pi and i'm dividing it by NUMBER that's the same thing as what 
CD|that's the same thing as multiplying a i'm dividing by a hundredth,that's the same as multiplying by a NUMBER so this function at.01 is sine of NUMBER pi 
CD|what's sine of NUMBER pi 
CD|well,think back to what the graph of sine looks like 
CD|here's a graph of sine,zero to two pi 
CD|if i do it again 
CD|here it is at four pi,and i drew it again 
CD|here it is at six pi,and i'm going to keep on going 
CD|and eventually,i'm going to get to NUMBER pi 
CD|and at that point,sign really is going to be equal to zero 
CD|calculators are great,they're also terrible 
CD|this calculator can't really calculate with pi,all it can do is calculate with some approximation to pi 
CD|we can use our human mind to evaluate this function exactly 
CD|in light of this evidence,you might be tricked into believing that the limit of OMITTED OMITTED as OMITTED approaches is equal to NUMBER after all these points are approaching zero,and function evaluating each of these points is zero 
CD|so maybe that means that this is true 
CD|so it looks like the limit is equal to zero 
EX|but,what happens if i look at some other points 
EX|we'll take a look at this example 
EX|here's the same function,f of OMITTED equals sign of pi over x. this function,if i evaluate it at NUMBER is this,maybe a little bit mysterious number,negative NUMBER and so forth 
CD|if i evaluate this function at NUMBER you get the same thing 
CD|if i evaluate the function at NUMBER,i get the same thing 
CD|at NUMBER i get the same thing,.000075,i get the same thing 
CD|so,what's going on here 
CD|well what is this number 
CD|i mean NUMBER this isn't just some sort of random number 
NL|right 
CD|this is in fact negative the square root of three over two 
CD|and it looks like this function at all of these points has the same value,negative the square root of three over two 
CD|so does that mean that the limit as OMITTED approaches zero of OMITTED of x,sound is equal to negative the square root of three over two 
CD|sound i mean again all of these values,.75.075.0075,these input values are approaching zero,and the functions value at all of those inputs is the same 
CD|so,what gives,is the limit zero,is a negative point a,which is it 
CD|okay,okay,i've been little bit too tricky in picking my input points 
CD|since the same function,f of OMITTED equals sin pie over x,and here,i am picking a collection of points,again approaching zero,.7,.07,.007,.0007. its getting closer and closer to zero 
CD|but now,my output values are looking pretty random 
CD|i mean,they are not over the same,for instance 
CD|so this is,maybe some evidence,that,the limit 
CD|of sine pi over OMITTED as OMITTED approaches zero 
CD|doesn't exist 
CD|here i've got a bunch of input points that are getting closer and closer to zero but my output values at least don't appear to be getting close to 
CD|we're not just learning 
CD|we're exploring 
CD|sound i encourage you to cook up you own examples 
SM|we've seen a couple examples now of where limits don't exist but can you come up with more 
NL|sound 
NL|welcome back to calculus i and welcome to week nine of our time together 
NL|can you believe that we've been at this for more than two months alreaOMITTED 
NL|it's crazy 
SM|the last two weeks,we've really been focusing on applications of the derivative in a particular word problem 
NL|right 
SM|those related rates problems or those optimization problems 
SM|they're word problems,stories from real life 
SM|this week,in week nine,we're still doing applications of the derivative,but it's not so much word problems anymore 
SM|it's sort of numerical applications 
SM|in particular,we're going to look at newton's method,which is a way of approximating a of a function 
SM|and we did that a while back 
SM|by using this bisection method and an intermediate value theorem but newton's method is,at least when it works,much faster 
SM|and the other thing that we're going to look at is how knowing information about the derivative lets you recover some numerical information about the original function 
EX|so if you knew for instance the derivative and you wanted to approximate a value of a function,we'll see how you can do that 
EX|well i hope you enjoyed these numerical examples 
NL|when,when i first took calculus i got to say that i didn't always enjoy all the numbers that were coming up,you know 
NL|i really just wanted to do all of the theorems,you know 
AP|but i think the numbers really make this subject come alive 
AP|so i encourage you,if you're skeptical about all the numerical stuff this week,just take a look 
NL|i think it's going to be a lot of fun 
CM|sound so,who knows what a function is,right 
NL|but i know what it does 
CD|it takes an input value,and produces an output value 
CD|and we've got a whole bunch of functions,right 
CD|and we can take these functions and start asking questions about them 
CD|what happens when you plug in a really big number,or a really small number 
CD|or,or what happens when you plug in two numbers that are nearby each other 
CD|how are the outputs related,right 
CD|those are the kinds of questions that are going to occupy us for the rest of the term 
CD|but even before we start thinking about questions like that,right 
CD|there are some things that we can still ask about functions 
CD|like,how do you know when two functions are the same function 
EX|for instance,here's two functions 
CD|OMITTED OMITTED NUMBER ^2,g OMITTED x^2 NUMBER NUMBER are these the same function 
NL|now,let's try 
CD|look at the value like OMITTED 
CD|OMITTED NUMBER ^2,start replacing the OMITTED by two, 
CD|NUMBER NUMBER well,what's what's OMITTED 
CD|well,g would be NUMBER 
CD|NUMBER,, NUMBER look,f and g,when i plug in OMITTED give me the same output value of nine 
CD|and that should be a little bit surprising,right 
CD|because the way that OMITTED and OMITTED are telling me to compute their output is totally different 
CD|OMITTED takes the input two,adds one to it and squares it to get nine 
CD|OMITTED takes two,squares it,doubles it,adds those two numbers to one,to get nine 
CD|so,the method by which OMITTED and OMITTED are doing the calculations is totally different,right 
CD|this sequence of operations is not the same as this sequence of operations 
CD|the,the rules are different 
CD|and yet,look at this 
CD|OMITTED x,for any value of x,right 
CD|is OMITTED x,right 
CD|that's x^2 
CD|well,i could expand this out,right 
CD|x,and then OMITTED x. i could combine some of these terms,right 
CD|OMITTED OMITTED NUMBER 
CD|OMITTED OMITTED x^2 
CD|look,NUMBER x^2,that's OMITTED OMITTED 
CD|this is really quite surprising 
CD|OMITTED and OMITTED don't compute their output in the same way,right 
CD|this one is doing something different than this function,and yet,for any input value,f's output value is this,which is the same by expanding out as OMITTED OMITTED 
CD|now,how we're going to deal with this 
CD|we're going to say that OMITTED and OMITTED are at the same function,right 
CD|not because they have the same rule,right 
CD|but because for every input value,they have the same output value 
CD|here's a much more subtle example 
CD|again,i got two functions 
CD|OMITTED is defined like this 
CD|OMITTED OMITTED x^2 x,and OMITTED is defined like this,g OMITTED is just x,the identity function 
CD|same question,is OMITTED the same as OMITTED 
CD|are these the same function 
CD|now,they're not the same rule,right 
CD|this is not the same as this 
CD|so,you know,it's a little more subtle,you know 
CD|but that's okay,right 
CD|two functions are the same if they have the same output for each input 
CD|so,let's see if that happens here 
EX|let's just pick some value to get a first test 
EX|let's take a look at f,right 
CD|OMITTED would be NUMBER,that's NUMBER 
CD|NUMBER,that's NUMBER well,that's the same as g,right 
CD|if i plug anything into g,i just get the same thing out 
CD|so,plug in five,you get five 
CD|so,at least at the value five,f and OMITTED agree 
CD|you might think this always works,right 
CD|because of something like this 
CD|you might want to say,well,f OMITTED that's x^2 x,no matter what OMITTED is 
CD|you might rewrite this x^22 as OMITTED OMITTED x. and then,you'd be tempted to say,cancel one of these xes with the OMITTED in the denominator 
CD|and then,you'd write equals x. and x,well that's,that's OMITTED OMITTED 
CD|so,this looks like a pretty convincing argument,right 
CD|over here,i've got OMITTED of x,i've got a bunch of equal signs 
CD|and over here,i've got OMITTED OMITTED 
CD|so maybe that means OMITTED and OMITTED are the same function 
CD|ha,but not so fast 
EX|what happens if you plug in zero 
CD|what's OMITTED 
CD|well,i know what OMITTED is 
CD|OMITTED is zero,right 
CD|zero is in the domain of OMITTED because zero makes sense for this rule 
CD|but,what's OMITTED 
CD|well,that would be zero squared over zero,whoa 
NL|okay 
CD|you see this is terrible,right 
CD|i can not divide by zero 
EX|this rule,x^2 OMITTED doesn't make sense when OMITTED is equal to zero 
EX|so,zero is not in the domain of f,but it is in the domain of g. so,i'm going to say that these are not the same function 
EX|they don't have the same domain,right 
EX|OMITTED isn't defined at zero,and OMITTED is defined at zero 
EX|in that sense,these are really different functions 
EX|this example suggests that there's a real richness to this theory of functions,right 
CD|and we're going to be stuOMITTEDing it a lot more this term 
NL|music 
CM|the mean value theorem has some other applications where it connects derivative information back to information about the original function 
CM|well,here's a theorem 
EX|suppose the derivative of some function 
EX|so i'm assuming it's a differential function,is positive,it's greater than zero on some open interval 
EX|then the function is an increasing function,meaning that it sends,bigger inputs to bigger outputs 
NL|you probably alreaOMITTED believe that statement 
CM|but the mean value theorem let's us verify that it's actually true 
CD|okay,so let's prove,this result 
CD|i'm going to pick,two points a and b,but i want to make sure that i pick them in order 
CD|so i'm going to pick OMITTED bigger than a so i can talk about the interval a b. all right 
CD|so i'll pick my two points 
CD|now i'm going to apply the mean value theorem to the open interval a,b 
CD|and that's ok because i'm going to pick a and OMITTED to be in this open interval and that's mean that OMITTED being differentiable satisfies the conditions of the mean value theorem 
CD|the continuous on the closed interval a,b and it will be differnetial on the open interval a,b. okay 
CD|so the mean value theorem then tells me to look at OMITTED of OMITTED minus OMITTED of a over OMITTED minus a,and the conclusion is that this is the derivative of OMITTED at some mystery point in between a and b. now the good news is i don't know much about the derivative but i know the derivative is positive 
CD|so i know that OMITTED of OMITTED minus OMITTED of a over OMITTED minus a is positive 
CD|the other thing that i know is that OMITTED is greater than a and that means the denominator here OMITTED minus a is also positive 
CD|so i've got mystery number divided by positive is positive 
CD|that means this numerator must also be positive 
CD|so OMITTED of OMITTED minus OMITTED of a is positive 
CD|now,if i add OMITTED of a to both sides,i get that OMITTED of OMITTED is bigger than OMITTED of a. if OMITTED sends bigger inputs to bigger outputs then OMITTED is increasing 
CD|increasing means that a bigger input is sent to a bigger output 
CD|so if OMITTED is greater than a then OMITTED of OMITTED is bigger than OMITTED of a and this argument works for any a and OMITTED in the open interval on which i know the derivative is positive 
CD|so i'm going to conclude that OMITTED is an increasing function,which is exactly what i wanted to show 
CD|so if the derivative's positive on a whole interval,then the function's increasing on that interval 
CD|but it's important to point out that i needed to know the sign,the OMITTED i OMITTED OMITTED of the derivative on that entire interval 
CD|the mean value theorem ends of just picking out a single point,that point c,where it'll examine the derivative 
CD|but in order to cover all my bases right because i don't know what point OMITTED the mean value theorem might make me look at 
CD|i've got to control the sign the OMITTED i OMITTED OMITTED on the derivative on the entire interval 
CD|alright,now i can play the same game when the sign of the derivative is negative 
CD|so,if i know the sign the sig derivative is negative on some open interval then i include that OMITTED is a decreasing function 
CD|and,again this is just an application of the mean value theorem 
CD|let's see the proof 
CD|so,i'm going to start out by again picking two points a,b in my opening interval and i'll again pick them so that OMITTED is greater than a so i can talk about the interval a,b 
CD|and then applying the mean value theorem,i should look at,f of OMITTED minus,f of a over OMITTED minus a. and the mean value theorem promises me that this is the derivative at some point,and i don't know what OMITTED is but it's the derivative at some point 
CD|but i know that the derivative at any point is negative so this must be negative 
CD|now OMITTED minus a is positive because b's bigger than a. so i've got a number i don't know divided by a positive number is negative 
CD|that means that OMITTED of OMITTED minus OMITTED of a must be negative 
CD|then i add OMITTED of a to both sides and i can conclude that OMITTED of OMITTED is less than OMITTED of a. in other words,f sends bigger inputs to smaller output 
CD|since OMITTED sends bigger inputs to smaller outputs,f is a decreasing function 
CD|once again we're seeing that the mean value theorem lets me relate information about the derivative,in this case the fact that the sign of the derivative is negative 
CD|back to information about the original function,in this case the function's decreasing 
SM|alright,well lets summarize what we've learned thus far 
SM|so here are some applications of the mean value theorem 
SM|if OMITTED is differentiable on some open interval and depending as to what happens then we know something about OMITTED on that interval 
SM|so if the derivative is identically zero,if the derivative is equal to zero no matter what i plug in,then OMITTED is constant on that interval 
SM|if the derivative is positive no matter what i plug in,then OMITTED is increasing on that interval 
SM|and,if the derivative is negative,then OMITTED is decreasing on that interval 
CD|music people have the idea that a local minimum means the function decreases and then increases 
EX|here's a local minimum on the graph of this random function 
CD|and the misconception is that they all look like this 
CD|that every time you got a local minimum on one side,the function's decreasing,and on the other side the function's increasing 
CD|plenty of local minima do look exactly like that 
CD|but,there's also plenty of pathological examples 
EX|for instance,consider this a somewhat pathological example 
EX|i'm going to define this function OMITTED as a piecewise function 
EX|if the input's nonzero,i'm going to do this 
CD|NUMBER NUMBER,which makes sense since OMITTED isn't zero,time x^2 
CD|and if the input is zero,the function's output will also be zero 
EX|in this case,there's a local minimum at zero 
CD|how do i know 
CD|well,here's how i know 
CD|let's take a look at this function the claim is that OMITTED OMITTED is never negative 
CD|how do i know that 
CD|well,what do i know about sine 
CD|sine of absolutely anything at all,no matter what i take this sine of,is between -1 and NUMBER now,if i add to this,plus sine of absolutely anything at all,is between zero and two 
CD|now,that's pretty good 
CD|now,think back to the definition of this function 
CD|here,i've got plus sine of something,it doesn't matter what,alright 
CD|plus sine of anything,this is between zero and two 
CD|now,i'm multiplying it by x^2 
CD|what do i know about x^2 
CD|well,x^2 is not negative 
CD|it could be zero,it could be positive 
CD|but no matter what OMITTED is,x^2 is not negative 
CD|now,i'm multiplying NUMBER NUMBER,this number which is trapped between zero and to,by x^2 which is never negative 
CD|and that means OMITTED OMITTED is not negative as long as OMITTED isn't equal to zero,alright 
CD|as long as OMITTED isn't equal to zero 
CD|i mean,this first case and this is a non-negative number times a non-negative number,so the product is also non-negative 
CD|now,the other possibility,of course,is that i plug in zero for x. but then,f is just by definition zero 
CD|and that means in either case,no matter that i plug in for x,f OMITTED is never a negative 
CD|now if OMITTED OMITTED is never negative and OMITTED =0,then i know that this must be the smallest possible output value for the function 
CD|the only numbers that are smaller than zero are negative numbers,and the output of this function is never negative 
CD|but this isn't the usual sort of local minimum where the function just decreases and then increases 
EX|well,here's the graph for our funciton f. and,there is a local minimum at zero,but if i start zooming in,no matter how much i zoom in,there's no little region on which the graph is just decreasing and then increasing 
EX|the graph is always wiggling 
CD|the upshot here is that decreasing and then increasing is one way to produce a local minimum,but it's not the definition of a local minimum 
CD|and not every local minimum arises in that exact way 
CD|what a local minimum means is just that no nearby output value is smaller than that local minimum value 
CM|music how can anyone compute sine 
CD|i mean nowadays,people use computers or caluculators 
CD|but by what mysterious force are these computational devices able to perform these computations 
CD|how does the machine know what sine of one is equal to 
CD|so,that's a good question 
CD|how do we compute sine of radian 
CD|one way is to use a little bit of calculus 
CD|so,what does calculus tell us 
CD|so let's let OMITTED of equals sine x,and the derivative of OMITTED is cosine x,the value of OMITTED at is,sine NUMBER,and the value of the derivative at is,because cosine is now,i can use the derivative to approximate the functions value 
CD|the functions value near zero is the functions value at zero,plus how much i would be the input by,times the ratio of output change to input change,the derivative at zero 
CD|well given this,in our specific case the value of function and derivative at is,and that means the functions value at h,for OMITTED very small,is about h. that means that sine of a very small angle is very close to that same value 
EX|let's actually use some numbers 
EX|so very concretely,sine of say NUMBER is really close to NUMBER 
EX|now,in addition to this,we've also got a double angle formula 
CD|the double angle formula for sine says that sine of NUMBER is times sine OMITTED times cosine x. you can derive this formula from the angle sum formula for sine 
CD|sine of OMITTED plus OMITTED gives you this 
NL|alright 
CD|another way to rewrite that a double angle formula is to write it entirely in terms of sine 
NL|alright 
CD|cosine is the square root of minus sine squared x. well,as long as the cosine is positive,this is true 
EX|so,if i'm working with a value of x,which cos sins positive,then sin of OMITTED is times sin OMITTED times the square root of minus sin squared x. we can put these pieces together 
NL|well,here's what we do 
CD|i know that sin of NUMBER is very close to NUMBER because NUMBER is close to NUMBER and,sin of a number close to zero is about that 
CD|that same number 
CD|then i can use this double-angle formula entirely in terms of sign to get an approximate value for sign of NUMBER by using my approximate value for sign of NUMBER 
CD|then,i can use this double-angle formula again to get an approximate value for sign of NUMBER,and again to get an approximate value for sign of NUMBER,and again to get an approximate value for sign of half,and then again to get an approximate value of sign of NUMBER which is really quite close to the actual value of sine of NUMBER so,what happened 
CD|calculus told us that sine of a small number,is close to that small number 
CD|the double angle formula let us transport that bit of information around zero to points much further away 
CD|all the way to approximate sine of 
NL|music 
CM|i'm mostly selling you on the idea of u-substitution,as a way to find anti-derivatives 
CM|but anti-differentiation is just a means to an end 
SM|the real goal,at this point in the course,is evaluating definite integrals 
EX|well,here's an example of a definite integral 
EX|let's evaluate the integral of NUMBER times OMITTED squared plus to the NUMBER power OMITTED 
CD|as OMITTED goes from to NUMBER we can do it with u-substitution 
CD|the substitution that i want to make is OMITTED equals OMITTED squared plus,and in that case du,what's the derivative of this,is NUMBER OMITTED 
CD|and that's great'cuz i've got a NUMBER OMITTED right there 
CD|so,this integration problem becomes the integral OMITTED goes from to NUMBER but what is the integrand now 
CD|it's OMITTED cube du and i know the anti-derivative of OMITTED cube is OMITTED to the forth over and i want to make sure that i evaluate this when OMITTED equals to NUMBER and NUMBER now we replace OMITTED by OMITTED squared plus NUMBER so this is OMITTED squared plus to the NUMBER,over NUMBER and i want to evaluate at and NUMBER now we plug in OMITTED equals,and OMITTED equals,and take the difference 
CD|okay,well when i plug in,i get squared plus to the NUMBER over NUMBER and when i plug in,i get squared plus to the NUMBER over NUMBER what's squared plus 
CD|that's to the NUMBER over and that's to the NUMBER,which is just NUMBER a quarter 
CD|and,now i got think about what's to the NUMBER 
CD|well that's NUMBER times NUMBER tha'ts NUMBER over minus over NUMBER and,now i can combine these into a single fraction,that's NUMBER over NUMBER and that i can simplify a bit 
CD|that's NUMBER we did it 
CD|but i could've finished this problem off in a slightly different but equivalent way 
CD|let's back up,i'll get rid of this,and let's suppose that i didn't go down this path but i just stopped here 
CD|the problem is that my endpoints are in terms of OMITTED but my integrand now is in terms of u. so i'm just going to change those endpoints 
CD|so instead i'll see that,that integration problem is the same as the integral of OMITTED cubed du 
CD|and when OMITTED is equal to,u is and when OMITTED is equal to,u is squared plus,which is NUMBER so if i change the endpoint to be in term of u,then i don't have to go back to x. so again i know the anti-derivative,it's OMITTED to the NUMBER over and i'm evaluating it 
CD|at and in term of OMITTED and taking the difference so when i plug in the,i just get to the NUMBER over and when i plug in i just get to the NUMBER over NUMBER and to the NUMBER is NUMBER squared which is NUMBER over NUMBER and this is now the same as before 
CD|minus a quarter and,just like before,this ends up being NUMBER let's summarize these two different approaches 
CD|the first time i went through this problem,i found the antiderivative in terms of x,alright 
CD|i wanted to integrate this and i found an antidirivitive and i just evaluated it at OMITTED and a and took the difference 
CD|in the second method,instead of finding the antidirivitive in terms of x,i change the endpoints to make the endpoints be in terms of u. so,i took this original problem and after making the substitution OMITTED equals OMITTED of x,then i rewrote the endpoints to go from OMITTED of a to OMITTED of OMITTED in terms of u. and then i found an antiderivative of OMITTED prime OMITTED du and now OMITTED of OMITTED and i evaluated that at OMITTED of OMITTED and OMITTED of a and took the difference 
CD|at the end of it i'm doing the same calculation 
SM|in both cases i'm calculating,you know,f of OMITTED of b,f of OMITTED of b,and i'm subtracting OMITTED of OMITTED of a,f of OMITTED of a,but i'' OMITTED setting it up slightly differently 
SM|in the first case i'm finding the anti-derivative in terms of x,and in the second case,i'm changing the bounds on the integral to be in terms of OMITTED 
NL|,, 
CD|i can cook up some really nasty functions,give them to you 
CD|and then ask you to differentiate them 
EX|for instance,i could ask you to differentiate this function 
EX|plus OMITTED squared to the NUMBER power,plus OMITTED cubed to the NUMBER power,all divided by plus OMITTED to the fourth,this to the seventh power 
CD|in principle,there's nothing stopping you from plowing ahead and computing the derivative 
CD|you can totally differentiate this function 
NL|right 
CD|what's the derivative of this function 
CM|well,this function's a quotient so he needs the quotient rule 
CD|the denominator of the quotient rule is the original denominator squared 
CD|so it's going to be the original denominator now to the NUMBER power and the quotient rule,the numerator starts off with the derivative of the original numerator 
CD|now,the original numerator is a product 
CD|so i'll be able to do this derivative by using the,product rule and chain rule 
CD|so it's the derivative of the numerator imes the denominator 
CD|and it keeps going,right 
CD|then i got ta subtract the,derivative of the denominator times the numerator 
CD|but,look,you can do this derivative just by careful application of the quotient rule,the product rule,the power rule,and the chain rule 
CD|there is one thing stopping you,your sense of human decency 
CD|it's just an awful calculation 
CD|noboOMITTED would want to do that 
AP|so instead,i propose a trick 
AP|but maybe it's not a trick,because it's a trick that fits into a general theme 
AP|it's logarithms 
CM|logarithms turn exponentiation into multiplication,and multiplication into addition 
CD|let's see how this helps us 
NL|so here we go 
CD|instead of calling this function OMITTED of x. i'm jut going to call it y,because i'm getting reaOMITTED to do a sort of implicit differentiation 
AP|i'm going to first apply log to both sides of this 
CD|and i'll get log y. and what's log of the other side 
CD|well it's log of a quotient,which is a difference of logs,and logs of things to powers,which is that power times log of the base 
CD|so this works out to times log of plus OMITTED squared plus this log turns multiplication into addition 
AP|times log of plus OMITTED cubed and this quotient becomes a difference,so,minus NUMBER the in the exponent,log plus x. now,we differentiate 
CD|all right,so differentiating now,what's the derivative of log OMITTED 
CD|remember,y is secretly a function of x,so i differentiate log y. it's the derivative of the outside,which is over y,times the derivative of the inside,which,i'll write OMITTED OMITTED 
EX|this is really an example if you like the implicit differentiation 
CD|alright,now i differentiate the other side,, i just multiply it by the derivative of log is over,so over the inside function and plus OMITTED squared times the derivative of the inside function which is NUMBER 
CD|the derivative of plus OMITTED squared is NUMBER 
CD|all right,plus,and its derivative log is over at the inside function,plus OMITTED cubed,times the derivative of this inside function,which is times OMITTED squared,minus over,the derivative of log is one over at the inside function,one plus OMITTED to the fourth,and the derivative of one plus OMITTED to the fourth is four OMITTED cubed 
CD|we're almost there 
AP|so now,i just multiply both sides by y. and i get that the derivative is this thing calculated OMITTED y,y is this quantity 
CD|i can write this a little bit more nicely alright here's this times NUMBER is NUMBER,times is NUMBER,times is NUMBER,and then i multiply by y. so i found the derivative,here it is 
CM|in general,this trick logarithmic differentiation as it's called,works fantastically well for functions like these 
CD|rational functions that involve a lot of high powers 
CD|music here's a claim 
CD|the limit of NUMBER as OMITTED approaches NUMBER,is now,to justify this claim using an epsilon delta argument i have to be able to prove that delta for every epsilon,alright 
CD|you're going to demand that NUMBER be within epsilon of NUMBER i'm going to satisfy your demand by saying OMITTED is within some number delta of sound so proof,let epsilon be bigger than zero 
CD|i don't know how small a number epsilon you're going to choose 
CD|i'm going to set delta equal epsilon over two 
CD|i'm going to check now that this value of delta will work to satisfy your demand involving epsilon 
CD|so,if zero is less than OMITTED NUMBER is less than delta,right 
CD|if OMITTED is within delta of NUMBER,then if you multiply by,we see that x-10 is less than delta 
CD|but what's delta 
CD|delta is epsilon over delta is just epsilon 
CD|so then,times the absolute value of x-10 is less than delta,which is epsilon 
CD|sound and so,times the absolute value of x-10,that's the absolute value of NUMBER NUMBER,and that's less than epsilon 
CD|so look at what we've shown,alright 
CD|some epsilon bigger than zero,a corresponding value of delta is going to be epsilon over NUMBER and then,i verify that if OMITTED is within NUMBER,is within delta of NUMBER,then NUMBER is within epsilon of NUMBER and that's exactly what it means to say that the limit of NUMBER is NUMBER as OMITTED approaches NUMBER for every epsilon,there's some delta so that whenever OMITTED is within delta of NUMBER,then the function NUMBER is within epsilon of you can imagine trying to do this with other functions,right 
EX|but i'll let you try that 
EX|you can try that in the exercise included below 
NL|music 
CM|the chain rule is so important,it's worth thinking through a proof of its validity 
CD|you might be tempted to think that you can get away with just cancelling 
CD|what i mean is you might be tempted to think that something like this works 
CD|let's say you wanted to differentiate OMITTED of OMITTED of x. you might set OMITTED of OMITTED equal to y. and then,you might think,well,what you're really trying to calculate is the derivative of OMITTED of OMITTED and okay 
CD|and then,you might say,well,the derivative of OMITTED of y,that will be the derivative of OMITTED with respect to OMITTED times the derivative of OMITTED with respect to x,and that's really the chain rule 
CD|i mean,this first thing is the derivative of OMITTED and this other thing is the derivative of OMITTED just like you'd expect,and then you're trying to say that you can just cancel,alright 
CD|you're not allowed to just cancel 
CD|i mean,the upshot here is just that OMITTED/OMITTED is not a fraction,alright 
CD|you can't justify this equality by just canceling because these objects,the way you're supposedly doing the canceling,they're not fractions 
AP|we need a more delicate argument than that 
AP|one way to go is to give a slightly different definition of derivative 
AP|well,here's a slightly different way of packaging up the derivative 
CD|the function OMITTED is differentiable at a point a,provided there's some number,which i'' OMITTED suggestively calling OMITTED prime of a,if the derivative of OMITTED at a,so that the limit of this error function is equal to NUMBER and what's this error function 
CD|well,it's measuring how far my approximation is that i'd get using the derivative from the actual functions output if i plug in an input value near a. in some ways,that's actually a nicer definition of derivative,since it really conveys that the derivative provides a way to approximate output values of functions 
EX|in any case,now,let's take this new definition of derivative and try to prove the chain rule 
CD|try to approximate OMITTED of OMITTED of OMITTED plus h. try to discover the chain rules 
CD|so,i want to be able to express this in terms of the derivative OMITTED of OMITTED and f,at least,approximately,and then control the error 
CD|well,i can do that for OMITTED because i'm assuming that OMITTED is deferential about the point x. so,this is OMITTED of,instead of OMITTED of OMITTED plus h,f of OMITTED plus the derivative of OMITTED at OMITTED times OMITTED plus an error term,we should be calling error of OMITTED of OMITTED times h. i'm going to play the same game with g. this is OMITTED of OMITTED of OMITTED plus a small quantity 
CD|and if i assume that OMITTED is differentiable at the point OMITTED of x,then this is OMITTED of OMITTED of OMITTED plus the derivative of OMITTED at OMITTED of OMITTED times how much i wiggle by,which,in this case,is OMITTED prime of OMITTED OMITTED plus that error term plus an error term for g,which is the error term for g. and i have to put in how much i wiggled by,which,in this case,is OMITTED prime of xh plus the error term for OMITTED at OMITTED times OMITTED times that same quantity,f prime of xh plus the error term for OMITTED at OMITTED times h. alright,so that's exactly equal to OMITTED of OMITTED of OMITTED plus OMITTED and i'm including all of the error terms 
CD|now,we can expand out a bit 
CD|so,this is OMITTED of OMITTED of OMITTED plus,you can multiply these two terms together,g prime of OMITTED of OMITTED times OMITTED prime of xh 
CD|that's looking really good,because that's what the chain rule is,right 
CD|it's supposed to give me this as the derivative of OMITTED composed with f. plus,i've got a ton of error terms now 
CD|all those error terms have an h,so i'm going to collect all the h's at the end 
CD|the first error term is OMITTED prime of OMITTED of x,this term here,times the error of OMITTED at h. the next ones,plus the error of g,at this complicated quantity,i was going to abbreviate hyphen,times OMITTED prime of OMITTED times h,i'm collecting all of these h's the end,plus the error term for g,at that complicated quantity,times the error for OMITTED at h,and all of that is times h. alright 
CD|now,this is almost giving me the derivative of the composite function provided that i can control the size of this error term,right 
CD|what i need to show now is that the limit as OMITTED approches of this error term is really,and the error term,right,it's the part before th OMITTED times h,and it's OMITTED prime of OMITTED of OMITTED times the error term for OMITTED at OMITTED plus the error term for OMITTED times OMITTED prime of x,plus the error term for OMITTED times the error term for OMITTED at h. now,why do i know that,that limit is equal to 
CD|well,i can do it in pieces,right 
CD|it's the limit of the sum,so it's the sum of the limits 
CD|and i know that this first term is because it's got an error OMITTED OMITTED term in it,and because OMITTED is differentiable,the error term goes to NUMBER i likewise know the same for this,alright 
CD|this is,it also got an error OMITTED of OMITTED term in it 
CD|the most mysterious term is this 
CD|but if you think a little bit more about it,the error of OMITTED at this hyphen thing,which i'm abbreviating this whole thing here,also goes to as OMITTED goes to NUMBER and that's another thing to know that the limit as OMITTED goes to of this quantity is which is then enough to say that OMITTED of OMITTED of OMITTED plus OMITTED equals this quantity,actually implies that this is the derivative 
SM|so,here's what we've actually shown 
SM|suppose that OMITTED is differentiable at a point a and OMITTED is differentiable at the point OMITTED of a,then the composite function,g composed with f,is differentiable at a,with the derivative of OMITTED of OMITTED at the point a,equal to the derivative of OMITTED at OMITTED of a times the derivative of OMITTED at a 
CD|music so,i get a number like the square root of two 
CD|and square root of two is irrational 
CM|so,how am i going to figure out what it's approximately equal to 
CD|well,it turns out that it's approximately,you know,NUMBER and a bit more 
CD|but how would ever figure that out 
CD|how would i know that that's approximately the value of the square root of two 
CM|let's use the intermediate value theorem to try to pull it 
CD|i want to use the intermediate value theorem to approximate the square root of two 
CD|to do that,i'm going to use this function,f OMITTED x^2 NUMBER notice something about this function 
CD|this function is equal to zero when OMITTED is the square root of NUMBER and how is that 
CD|OMITTED of the square root of is the squared of two squared,which is two,minus two,which is zero 
CD|so,if i'm trying to approximate the square root of,what i'm going to think about this,is that i'm going to look for a positive value,that i can plug into this function to make it a square root of zero 
CD|how am i going to find such a value 
CD|you know,the other good thing about this function is that it's continuous 
CD|and then,i can plug in some values,like OMITTED 
CD|now,what's OMITTED 
CD|it's one squared minus two and that's minus one 
CD|and i can plot that on my graph right here,and it's this point right here 
CD|and take a look at,say,f 
CD|OMITTED would be two squared minus two,which is two 
CD|and i can plot that on my graph,right here 
CD|it's,now,f is a continuous function and at one,it's negative 
CD|and at two,it's positive 
SM|so,it's a continuous function 
SM|it's negative at one and it's positive at two 
SM|by the intermediate value theorem,there must be a point in between when the functions value is equal to zero 
CD|and you can see that on the graph 
CD|we're looking for that point 
CD|that is the square root of two where this graph crosses the x-axis,the positive x-axis 
CD|and that's the point that we're looking for,right 
AP|the intermediate value theorem promises me there's a value in between where the functions value equals zero 
CD|and i can see that there must be such a point on the graph 
CD|and now,i know that that value is between one and two 
CD|and i can do better 
CD|i can cut this interval between one and two in half and i get that OMITTED NUMBER 
CD|well,NUMBER squared is NUMBER is NUMBER 
NL|sound alright 
CD|so,that's,say,this point on my graph 
SM|now,what do i know 
SM|i know that the squared of two,which is where this graph crosses the x-axis,is between one,where the function is negative and NUMBER,where the function is positive 
CD|and i can do better,alright 
CD|i can pick some other point 
CD|let's be brave and pick NUMBER and if i plug in NUMBER,well,NUMBER squared is so,NUMBER squared is NUMBER,that makes this -0.4,alright 
CD|this is barely below the x-axis 
CD|and i can plot that point here 
CD|and now,i know that the square root of two,the positive input to this function,which is equal to zero,well,it must be between NUMBER and NUMBER because the function's value at NUMBER is negative and the function's value at NUMBER is positive 
CD|so,this is not so bad 
CD|i mean,we,we could do this with a few calculations on the blackboard 
EX|let's,let's bring out some sort of computation device so we can try to get an even better approximation to the square root of two 
EX|so here,i've got a function 
CD|the function is OMITTED OMITTED x^2 NUMBER and you can see that if i plug zero into the function,i get out -2 because NUMBER is -2. now,this is a physical function 
CD|i've got this knob here 
CD|and as i spin this knob,the function's input value changes 
CD|so,for example,if i spin it up to OMITTED NUMBER 
CD|OMITTED NUMBER,that's negative NUMBER and that's right because if i take a half squared,i get a quarter,and a quarter minus two is -1.75. now,i could spin the input up to one 
CD|OMITTED is -1 because NUMBER is -1 or OMITTED NUMBER,well,NUMBER squared is NUMBER,NUMBER is NUMBER now,this is positive or i could wheel it back down a little bit 
CD|and i see that when i get to NUMBER,the function's output is negative again 
CD|then,i could increase the function's input a bit 
CD|oh,now the function's output is positive again,at OMITTED NUMBER 
CD|and then,i could decrease the value a little bit 
CD|oh,now,the function's output value is negative again and that would increase the output value a little bit 
CD|oh,now,the function's output is positive and i could decrease the input a bit 
CD|now,the function's output is negative,could increase the input a little bit 
CD|now,it's positive,could decrease the input a little bit 
CD|now,it's negative again 
CD|now,look at what happened,right 
CD|what's going on 
CD|i'm looking at the function OMITTED OMITTED x^2 and i'm walking back and forth across the point where this function is equal to zero 
CD|and as i walk to the left and to the right,the function is positive and the function is negative 
CD|and i'm getting closer and closer to a,to the actual place where the function is equal to zero and what is NUMBER 
CD|it's awfully close to the square root of two 
CD|and if you think the square root of two and square it and subtract two,you get zero 
CD|what we just saw with the knob that i was turning is actually an incredibly general technique for figuring out where a continuous function crosses the x-axis 
CD|and we can do it very efficiently 
EX|let's take a look at how we might do this a little bit more carefully 
EX|here,i've drawn a graph with some random looking continuous function and i've labeled some points along the x-axis 
EX|imagine that we couldn't see this whole graph 
EX|just imagine that the only thing you can do is interrogate this function 
CD|you can ask this function at some input point,are you positive or negative 
CD|we're trying to figure out where,approximately,this continuous function crosses the x-axis 
AP|we're looking for a zero of this continuous function 
CD|how might the game begin 
CD|i'll let it begin by asking the function,are you positive or negative at zero 
CD|and the function is positive at zero 
CD|and then,maybe i'd ask at sixteen 
CD|at sixteen,is this function positive or negative 
CD|and i'd see the function is negative 
CD|the function's value is negative at sixteen 
CD|because it's a continuous function and the function's value at zero is positive and the function's value at sixteen is negative,i know that there's a zero in between 
CD|there's some point in between that if i plug it into the function,i get zero out 
CD|now,i could cut that interval in half 
CD|i could plug in eight and i could ask the function at f,are you positive or negative 
CD|and the function f,the value of the function at eight is positive 
CD|now,look 
CD|i know the function's value at eight is positive,the function's value at sixteen is negative 
CD|so,by the intermediate value theorem,there must be a value in between,right there,where the function's value is zero 
AP|and now,i could take that interval and cut it in half again 
CD|i could take a look at twelve,which is exactly between eight and sixteen 
CD|and i could ask the function,at OMITTED NUMBER ,12,are you positive or negative 
CD|and the function's value at twelve is negative 
CD|sound so now,i know by the intermediate value theorem,the function zero zero of this function must land between eight and twelve and i could cut that interval in half again 
CD|i could look at ten,and i could ask the function,well,if i plug in ten,are you positive or negative 
CD|and the function's value with ten is negative 
CD|and now,i know that the zero must land between eight and ten,because the function's value at eight is positive and the function's value at ten is negative,so there must be a zero in between,a point where the function's value is equal to zero 
CD|now,i could cut that interval between eight and ten in half again 
EX|i could look at nine 
CD|and i could ask the function,at nine,are you positive or negative 
CD|and if i plug in nine,it looks like the function is positive 
CD|and that means that a value that i can plug into the function to make the output zero lies between nine and ten 
CD|and this is really quite remarkable 
CD|i,i,i could cut the interval between nine and ten and half again and see if it was between nine and NUMBER or NUMBER and ten 
CD|and i could keep doing this every time i'm getting a little bit more precision as to the exact value of the input that would make the function zero 
CD|the other really neat thing about this is that i could have just tried all of the values between zero and sixteen 
CD|i could have plugged all seventeen of those numbers into the function to figure this out 
AP|but by doing this clever cutting in half method,this bisection method,i managed to only ask six questions,right 
AP|i asked the function's value at zero and sixteen,at eight and twelve,at ten and at nine,and by only asking six questions,i was able to narrow down a region where a zero resided 
AP|now,that's pretty quite efficient,much better than asking seventeen questions 
AP|so,this is a very general technique for figuring out where zeroes of continuous functions lie 
AP|and i encourage you to pick your favorite function and see if you can approximate a root,a zero of that function 
NL|music 
CD|music remember,f prime of OMITTED is encoding how wiggling OMITTED affects OMITTED of x. we can see this by thinking about slopes of tangent lines as well 
EX|here,i've drawn in orange the graph of some random function y=f OMITTED 
EX|and this point,a OMITTED a i've drawn in red the tangent line to the graph 
CD|i want to know how is the output OMITTED affected when input moves from a to a+h 
CD|i want to know what happens when i wiggle the input over by adding h. let me zoom in on this picture a little bit 
CD|here,i've got this tangent line,and the slope of that tangent line is the derivative of the function at the point a. that means that this triangle can be understood,right 
CD|this slope being OMITTED a,this base being OMITTED means this height is h*f a 
CD|in order to get this slope as OMITTED a,rise over run better be equal to OMITTED a,this divided by this is OMITTED a 
CD|this is giving me some information about how wiggling the input will affect the output 
CD|if i move from a to a+h,well,on the tangent line OMITTED moving up to this point which isn't so far off of the real value of the function up here 
CD|now,if i made OMITTED really,really small,i'd be doing an even better job of staying close to the graph of the function when i follow the tangent line 
CD|instead of starting with the function and trying to figure out the derivative,we can imagine that we know a little bit of information about the derivative and try to figure out something about the function 
EX|let's make up a concrete example 
EX|suppose that i've got some function f,and all i know is that its derivative is NUMBER,and its value at,is NUMBER just knowing this information without a rule for the function at this point,can i say anything about the function's value at,say NUMBER 
NL|yes,i can 
NL|right 
CD|OMITTED NUMBER,well that's OMITTED plus how much the output changes when i go from to NUMBER well,the output change is approximately something that i can compute from the derivative,right 
CD|the derivative is infinitesimally the ratio between output change and input change 
CD|so if i multiply by how much i change the input by the ratio of input change to output change,this should be approximately the true output change 
CD|now,in this case,i know what these numbers are 
CD|NUMBER times the derivative of OMITTED is NUMBER which means that this is about NUMBER which is NUMBER and that's about what this function at NUMBER is equal to 
CD|one more cat moves into the neighborhood 
CD|what happens to the mouse population 
NL|right 
SM|a small change to one thing will affect something else 
SM|that's what the derivative is encoding 
NL|music 
NL|music 
CM|let's think about the fundamental theorem of calculus physically 
CD|let's define the function OMITTED by the rule that OMITTED of OMITTED is my velocity at time t. physically,what does the accumulation function of velocity mean 
CM|well that accumulation function,remember,is say,the integral from to b,of OMITTED of OMITTED dt 
CM|and this is really the distance,that i've traveled from time to time b. this also makes sense when we think back to riemann sums 
CD|but what would the riemann sum say 
EX|if i think about how far i traveled over a short time period,say,between time zero and time OMITTED for some small number h,right 
EX|how far did i travel during that time period 
CD|well,i traveled for that small time period OMITTED and i was traveling at a speed of,i mean,you know,a velocity at time zero,say,is a good approximation 
EX|and i imagine my velocity didn't change very much during this time period 
CD|so,that's a pretty good approximation for how much i traveled during the first OMITTED moments of my journey 
CD|what about between time OMITTED and time NUMBER,right 
CD|how far did i travel there 
CD|well,the time that elapsed was OMITTED units of time 
CD|and how fast was i going 
CD|well,i could use OMITTED of h. my velocity of time OMITTED as a good approximation for my velocity over that time period,right 
CD|my velocity is not necessarily constant 
CD|but this is standing in for a reasonable approximation and my velocity is not changing too rapidly 
NL|all right 
CD|this is how far i traveled,right 
SM|time times velocity is distance 
NL|all right 
CD|now how far did i travel between,say time NUMBER and time NUMBER 
CD|well,again,how long was i traveling for OMITTED units of time 
CD|and how fast was i going 
CD|OMITTED NUMBER is a reasonable approximation for my velocity during that time period 
NL|and of course this keeps on going,right 
CD|but what do i get if i add all of these things up 
NL|right 
CM|what i'm getting is a riemann sum 
CD|and if i keep on adding these things up until i get,you know,all the way to,to b,right 
CD|what i'm writing down is the approximation for this interval of a particular riemann sum which approximates this integral and in the limit as OMITTED goes to zero,that riemann sum will compute this integral 
SM|so,summarizing that,the accumulation function of velocity,is displacement 
SM|and what's the derivative of displacement 
SM|t's velocity,right 
SM|the derivative of my accumulation function in this specific case where the accumulation function is the accumulation function for velocity,right,the derivative of that accumulation function is the thing that i'm integrating,velocity 
SM|that's the fundamental theorem of calculus 
CD|or in symbols,you know,the accumulation function,which is inaudible displacement,is the interval from zero to OMITTED of my velocity 
CD|and what i'm asking is,how is that changing,right 
CD|if that's my displacement when i travel from times to times b,right 
CD|what is the derivative with respect to the time that i've been traveling 
CD|the derivative of displacement is velocity 
SM|so physically,differentiating the accumulation function of velocity is to differentiate displacement 
CD|it's to ask for the rate of change in my position,which is velocity,which is the integrand 
CD|it's the fundamental theorem of calculus just wrapped up in physical clothing 
CD|music there's a visual way to gain some insight into these anti-differentiation problems 
CM|a visual method goes by the name of slope fields 
CD|so,what's a slope field 
CD|the idea is that i start with some function 
EX|like,here's an example of function OMITTED squared minus x. but instead of just graphing the function,like i normally do here,i'm graphing the function's values 
CD|i make a graph 
CD|but the thing that i'm graphing is little tiny line segments of that given slope,right 
CD|so,instead of plotting a value at some height,i draw little tiny line segments with that slope 
EX|now,you can see in this example that if you plug in or into this function,the output NUMBER and in this slope field,if you look at a point whose OMITTED value is or whose OMITTED value is,there i'm plotting just horizontal lines,lines of slope zero 
CD|over here,i've got very high slope,and over here i've got very high slope 
CD|and that just reflects the fact that this function's value is very high when OMITTED is negative and when OMITTED is positive 
CD|and in between here,i've got just a little tiny region where the lines are pointing down,right 
CD|where the slope of these little line segments is negative 
CD|and of course,that's because there's a little tiny region here where this function's value is negative 
EX|well,let's look at a specific example 
EX|with this specific example,function OMITTED of OMITTED equals OMITTED times cosine x. now,i can draw the slope field for this example 
EX|well,in that case,here's the slope field that i get 
EX|imagine that i have an anti-derivative,a function f,whose derivative was f. that is,suppose i had some function,f,whose derivative was f. the slope field is drawn so that all these little line segments have slope equal to the value of f,so i could use this slope field to try to draw a picture,the graph of my function f,right 
EX|let's suppose that my function maybe starts here 
EX|and then,i could try to follow the slope field along and try to use the information in the,in the slope field to try to draw a picture of what my function,f,must look like 
CD|so,these slope fields let you see the anti-derivative,right 
CD|if you follow the slope field,you're tracing out a function whose derivative is given by the slope field 
CD|now,we can find this anti-derivative,but we're trying to anti-differentiate OMITTED cosine x. well,our first guess might be OMITTED sine x. i mean,that's a reasonable guess because differentiating sine will give me the cosine and it,but what happens if i actually differentiate this product 
CD|well,that's the sort of thing that i do with the product rule which is OMITTED times the derivative,which is cosine 
CD|so,that's looking good 
CD|but it's plus the derivative of the first,which is times the second,which is sine x. so,the anti-derivative of OMITTED cosine OMITTED isn't just OMITTED sine OMITTED because i've got this pesky additional sine OMITTED term 
CD|but i also know that the derivative of cosine is minus sine 
CD|so,if i add these things together,right 
CD|if i add them together,what's the derivative of OMITTED sine OMITTED plus cosine OMITTED 
CD|well,it's these two things added together 
CD|but that's OMITTED cosine x,which is good,plus sine OMITTED minus sine x. so,it's just OMITTED cosine x. so that means the general anti-derivative of OMITTED cosine OMITTED is OMITTED sine OMITTED plus cosine OMITTED plus some constant c. and yeah,we can see this in the graph 
CD|so here,i've graphed OMITTED sine OMITTED plus cosine x. and you can see that it's really moving in the direction of the slope field,which makes sense 
CD|because the slope field is coming from OMITTED cosine x,which is the derivative of this thing 
CD|and,you know,i drew the slope field by drawing little tiny line segments whose slope is OMITTED cosine x. so,since this thing differentiates to OMITTED cosine x,this thing is really moving along the slope field 
CD|the slope field picture also gives you some insight into how the plus OMITTED really works 
CD|what is the plus OMITTED really accomplishing,right 
CD|it's moving the graph up and down 
CD|and if you start with,you know,say OMITTED sine OMITTED plus cosine x,and then you slide that graph up and down,it's still following the slope field,right 
CD|it's still an anti-derivative for OMITTED cosine x. 
NL|music 
CD|sometimes|sometimes the best substitution to make isn't even visible until after we've messed around with the integrand some how 
EX|for example,what's the antiderivative of over plus cosine OMITTED 
NL|OMITTED,what can you do 
CD|your first move might be to try the substitution OMITTED equals cosine x,which case du is negative sine OMITTED OMITTED,but there's no visible sine OMITTED in the integrand 
CD|well,since we're talking about invisible substitutions,we should try to mess around with the integrand 
EX|instead of doing that,let's try a different trick 
EX|let's try to multiply over plus cosine OMITTED by minus cosine OMITTED divided by minus cosine x. this doesn't change the integrand at all,because this is just NUMBER this trick makes a hitherto invisible substitution visible 
NL|i'm getting ahead of myself a little bit 
CD|let's first apply a trig identity 
CD|oh,this is minus cosine OMITTED in the numerator divided by,that's minus cosine squared x,and then the trig identity is that minus cosine squared x,well that's sine squared x. so now i want to antidifferentiate minus cosine OMITTED over sine squared OMITTED OMITTED 
NL|well even that isn't so great 
CD|let's split it up 
CD|well then i get,that this is antiderivative over sine squared OMITTED OMITTED minus the antiderivative of cosine OMITTED over sine squared OMITTED OMITTED 
CD|now that first integral is one that i can do 
CD|rewrite it as the antiderivative of cosecant squared x. you know,i just have to think,do i know any function whose derivative is cosecant squared 
CD|yes,negative cotangent is an antiderivative of cosecant squared,of of x. what about that other intergral 
CD|well i could read this as cotangent times cosecant and just recognize the antiderivative that way 
CD|but to demonstrate the technique i can also apply OMITTED substitution to that antidifferentiation problem so let's let OMITTED equal sine x,and in that case,du is cosine OMITTED OMITTED,which is great,because that's the numerator there 
CD|so this this antidifferentiation problem becomes what 
CD|this is the antiderivative of du over OMITTED squared 
CD|and i just got ta think,how do i,antidifferentiate OMITTED to the negative second power 
CD|well that,is by the power rule plus1 over OMITTED plus c. alright,if i differentiate one over u,that gives me negative over OMITTED squared 
CD|okay,but i don't want my answer to be in terms of u,right,i want my answer to be in terms of x. so this is negative cotangent OMITTED plus,what's over u,well that's over sine OMITTED which,if i wanted to,i could write as cosecant OMITTED plus c. let's put it all together 
CD|so what i'm claiming here is that the antiderivative of over plus cosine OMITTED OMITTED is negative cotangent plus cosecant,plus some constant 
CD|if you have it alreaOMITTED,i hope you're getting the idea that there's some really clever things that you can try to make these substitutions work 
CM|music|music what do we get if we add up a bunch of perfect squares 
EX|say,the first OMITTED perfect squares 
CD|what i'm asking for is a formula for this sum 
CD|the sum of OMITTED squared as OMITTED goes from to k,right 
CD|so squared,plus squared,plus squared,plus dot,dot,dot,right 
CD|and so on,until i get to OMITTED squared 
CD|what do i get if i add up the first OMITTED 
CD|perfect squares 
CD|quite shockingly,the resulting formula ends up looking really nice 
CD|this ends up being equal to OMITTED times OMITTED plus times OMITTED plus all over NUMBER really 
EX|well,we can try it for some specific value 
NL|all right 
EX|what if i do the sum and go from to of OMITTED squared 
CD|that's squared plus squared plus squared plus squared 
CD|that's plus plus plus NUMBER 
CD|and NUMBER make NUMBER 
CD|and make NUMBER 
CD|NUMBER plus NUMBER is NUMBER so the sum of the first four perfect squares is NUMBER is that really what this formula's giving 
CD|well let's check it out 
CD|so i'm going to put in for k,times plus NUMBER times times plus1 all over NUMBER what's that 
CD|well that's times times times plus is divided by 
CD|is times,so the kills part of the and part of the to give me times times NUMBER and yeah,i mean,times is NUMBER,twice NUMBER is NUMBER it really works,at least for the value NUMBER of course,this isn't a proof in general 
CD|so how am i going to verify that,that statement is true 
CD|well,one argument is a geometric argument,really a proof by picture 
CD|so here's a geometric or a diagrammatic way of writing down squared plus squared plus squared plus squared 
CD|now i know there's NUMBER dots here,right 
CD|but i'm trying to draw a diagram that suggests a general pattern 
CD|ok. so let's try to add up 
CD|these,these four numbers 
CD|i'm going to use this device here 
NL|what is this 
CD|well,what i've done here is i've taken copies of these OMITTED squares,alright 
CD|so here's square plus square plus squares plus squares 
CD|here's another squared plus squared plus squared plus squared,and in the middle i sort of mixed it up a little bit 
CD|i've taken the lower lefthand corner dot,which is red,and i've lined them up vertically here 
CD|i've taken the next,sort of three long OMITTED shape which i've drawn in blue here,and i've straightened them out and placed those three here 
CD|i've taken the two five long orange l's and straightened them out here,and then here at the top i've got one long brown OMITTED comprised of seven dots,and i've straightened that out right here at the top 
CD|so what's happened here 
CD|right,i have taken three copies of my sums of squares,right so i've got three copies of all these squares 
CD|one set is down here,one sets down here,and the other set is mixed in the middle 
CD|and now i can figure out how big a rectangle this is 
CD|well the bottom here this is a OMITTED by OMITTED square,k by OMITTED square and these are built out of the corners that are just dot 
CD|so there's a whole bottom side is made up of OMITTED plus dots,k plus plus OMITTED or OMITTED plus NUMBER what about along the other side 
CD|well along the other side,i've got one dot plus two dots plus three dots plus four dots and of course,this is just a specific picture 
CD|so in general,it will be plus plus plus until i get to k. so i have to figure out how tall this rectangle is,but i in fact know a formula for plus plus plus up through k,alright 
CD|we figured that out alreaOMITTED 
CD|it's OMITTED times OMITTED plus over NUMBER so i've taken three copies and built them into a rectangle who's base is NUMBER plus,and which is OMITTED times OMITTED plus over tall 
CD|so that means that this sum,which is what i'm trying to compute,must be 
CD|well its the,the height of this rectangle times the width of this rectangle divided by,since i used three copies of,of these squares to build the big rectangle 
CD|so i ended up dividing by NUMBER and this is in fact the formula that we had,right 
CD|the original formula was OMITTED times OMITTED times OMITTED plus times OMITTED plus all over NUMBER but that's just a rearranged version of this formula 
CD|there are other geometric arguments as well 
CD|other proofs by picture that you could give 
CD|and there are other geometric arguments too 
CD|here's another way to get at this sum of squares formula 
CD|i could right down my sum of squares as something built out of little tiny cubelets 
NL|right 
CD|here i've got one cube 
CD|underneath i've got squared cubes right,but this is a by by block 
CD|underneath i've got nine little cubes,right 
CD|it's a by by block 
CD|and underneath that i've got NUMBER cubes,a by by block,right 
CD|and i can imagine that this thing is OMITTED high 
CD|i take six copies of this pyramid 
CD|you know,fit them together 
CD|flip one over and so forth 
CD|until i end up with a OMITTED by OMITTED plus by NUMBER plus box 
NL|right 
CD|and that box must be comprise of OMITTED times OMITTED plus times NUMBER plus little tiny cubes 
CD|and since i used six copies of this thing 
CD|well that means the number of cubes in this thing 
CD|which is the sum of squared plus squared plus until i get to OMITTED squared 
NL|right 
CD|that sum must be OMITTED times OMITTED plus time NUMBER plus divided by NUMBER and here,we've given geometric arguments for this particular sum 
SM|but in the future we're also going to see some algebraic arguments 
NL|right 
CD|but we're going to wait on those a little bit 
SM|for the time being,this particular quality will be very helpful when we start doing some calculations of,riemann sum 
NL|music 
CM|we can cut a three dimensional object up into shapes beyond just slabs,disks,washers 
EX|specifically instead of building an object out of disks,instead of building it by stacking up disks of varying radii 
EX|we can build the object by wrapping it with these shells 
CM|this shell thing is supposed to be like a cardboard mailing tube 
CD|it's a cylinder sort of a thin wall 
CD|but how are shells different from washers 
CD|well there are some similarities 
CD|both shells and washers are things that you get by taking cylinders and drilling out other cylinders 
CD|but for washers,the thin dimension is its height 
CD|and for shells,the thin dimension is sort of the thickness of this wall 
AP|we need to write down a formula for the volume of a shell in terms of it's height,it's radius and that thin dr. let me label those parts on the diagram here 
CD|so the height of the shell 
CD|i'll call h,the thickness of the shell 
CD|i'll call that dr,and the radius of the shell i'll just call r. now,if i get out my scissors of mathematics here and cut the shell 
CD|you might imagine unrolling the shell,and then you just end up with a slab like this 
CM|how big is this slab 
CD|well,the slab's height is still h. the thickness of this slab is dr. and how long is this slab 
CD|well the slab's as long as the circumference of the circle,which is pi r. and multiplying these three dimensions will give me the volume of the slab 
CD|so you're guessing that the volume of the shell or the slab is pi rh dr. we can say something a bit more precise 
EX|well here's the shell again 
EX|but instead of calling this dr. let's think of this as a big cylinder,with a little cylinder drilled out 
CD|so both the cylinders have the same heighth,h. but let's say the big cylinder has a radius,r. and the little cylinder has a radius little r. let's write down the formula for the volume of the shell in between 
CD|so now the volume of the shell,right,is the volume of the big cylinder pi big OMITTED squared h. minus the volume of the little cylinder that i drilled out,pi little OMITTED squared h. in effect you'll recognize that this,this makes it look a lot like a washer 
CD|but here's the difference,little OMITTED is really close to big r. right,i'm thinking of their difference as dr. right,very thin walled cylinder 
CD|well lets rewrite this volume anyhow 
CD|i'm going to factor this out pi 
CD|big OMITTED squared,minus little OMITTED squared,h. now let's rewrite this 
CD|this is a difference of squares,so i can write that as pie,big OMITTED plus little r. big OMITTED minus little r,h. and thinking of the difference in these radii as being really small 
CD|so i'm going to rewrite this term as dr. so this is pi,big OMITTED plus little r,and i'll write OMITTED dr. now what do i do with big OMITTED plus little OMITTED 
CD|well this is the sum of these two radia 
CD|i mean,if you think about big OMITTED and little OMITTED as being really close together 
CD|i might as well just write this as little r. so i'll write this pi little r. that's little r's,if i'm imagining big OMITTED and little OMITTED to be close together,h dr. and you'll see this is the same as the formula that i got before for the volume of a shell 
CD|this formula,the formula for the volume of a shell,to write down an integral that calculates the volume of a solid of revolution 
EX|as an example,let's take this region 
EX|this is the graph OMITTED equals minus OMITTED squared 
CD|and i just want to consider OMITTED greater and equal to,so consider this region inside here 
CD|so let me write OMITTED less than or equal to minus x. so just to emphasize this,it's this region inside here,and let's take that,and let's rotate that region around the OMITTED axis 
CD|to give myself this solid of revolution,i'm going to calculate the volume of that solid 
CD|admittedly,we could do this problem without using shells,but using washers 
CD|in that case,i'd be chopping the region up into horizontal slices 
CD|and each of these horizontal slices,when i rotate it around the OMITTED axis would give me a disc 
CD|and then i just integrate the volumes of those discs to give me the volume of the solid of revolution 
EX|but let's try it with shells 
CD|in this case,i'll cut it up into vertical slices and i'll rotate these vertical slices around the OMITTED axes to produce shells 
CD|and i'll integrate the volumes of those shells 
CD|to give me the volume of the whole solid of revolution 
AP|now,we're going to use the formula,for the volume of a shell 
CD|let's just look at one of those shells 
CD|so,here's one of these thin rectangles,i imagine,rotating this thin rectangle,around 
CD|the the OMITTED axis to produce this shell 
CD|now,how how tall is this shell 
CD|well,the height of that shell is given right here 
CD|it's minus OMITTED squared 
CD|the radius of the shell is OMITTED and the thickness of that shell is OMITTED 
CD|so,i put all those pieces together 
CD|i can write down the volume of just that one,one shell 
CD|and it'll be pi,the radius of that shell 
CD|the height of that shell,the thickness of that shell 
AP|now i have to worry about the end points of integration 
CD|you might think that i'd be integrating from OMITTED equals minus to NUMBER but actually i only have to integrate from OMITTED equals to NUMBER because rotating a thin rectangle over here also accounts for stuff happening over here 
CD|so it's enough just to integrate from OMITTED goes from to NUMBER so i'll write that here,x goes from to this integral will calculate the volume of my solid of revolution 
AP|finally,it's just a matter of evaluating the integral with the fundamental theorem of calculus 
CD|and to do this integral 
CD|well i'll pull out these constants,pi,the integral from to of OMITTED minus OMITTED cubed,when i combine these two terms 
AP|now i just have to write down an antiderivative here 
CD|pi,antiderivative of OMITTED is OMITTED squared over,anti-derivative OMITTED cubed is OMITTED to the NUMBER over NUMBER and i'm evaluating this at OMITTED equals,, and OMITTED equals NUMBER and i'm subtracting,alright 
CM|that's the fundamental theorem of calculus 
CD|but when i plug in,i just get NUMBER so the answer is just whatever i get when i plug in NUMBER and,that's pi,a half minus a NUMBER,and a half minus a NUMBER is a NUMBER 
CD|so,pi times a NUMBER,and times a NUMBER is a half 
CD|so,pi over,is the volume of my solid of revolution 
NL|we did it 
SM|in this module,you'll be introduced to the concepts of file formats,compression,data normalization,and transformations
SM|by the end of the module,you'll understand why these are important 
SM|and you'll be able to make decisions about which approach to use when 
SM|you'll also be able to use the content featured in the module to help improve your research data management practice 
CM|so what is a file format 
CD|a file format is a way of encoding information within a computer file 
CD|a program or an application needs to recognize that file format in order to be able to access the content within the file 
EX|a web browser,for example,will recognize html,things in hypertext markup language,and will be able to open these files and display them as webpages 
CD|if a browser comes across a different type of file it might call on a special kind of plugin to be able to open and display those files 
CD|otherwise,if it doesn't recognize the file type,it may offer the option to download the file so you can open it with the relevant program 
CD|the file format is often indicated as part of the file name in an extension or suffix 
CD|conventionally,the extension follows a full stop in the file name,and has three or four letters that identify the format such as jpg for jpegs,or docx for a word document 
AP|files in proprietary formats usually have to be opened by the specific software in which they've been created 
AP|so this means that somebody without a license for that software can't always open those files 
CD|in contrast,open formats are ones in which the software company or the collective that's created that software,has made it openly available 
CD|and this usually means that a number of applications have been developed which can open those types of files 
EX|adobe pdf is good example of an open format 
AP|it can be opened by a number of applications,not just adobe products 
CD|file types are based on either text or binary encoding 
CD|text files are machine readable through character encoding standards,such as ascii and uni-code,whereas binary files are run by applicable software and may be proprietary 
AP|only binary formats can be executed 
EX|some file types include both binary and text,such as the rich text format 
AP|a big advantage of creating or saving your research data in a text format is that the file can be read in a plain text editor,like windows notepad,and is human-readable 
AP|they can be opened in any operating system and by a wide range of applications 
EX|some of the well-known file extensions of plain text files are.txt,.csv,.asc,.html,and.xml 
AP|most software packages allow export and exchange formats,so you can create a text file for import into another program 
EX|for example,in microsoft excel,you can save your spreadsheet as a csv file 
CD|file formats that are open,non-proprietary and in widespread use,stand the best chance of being readable well into the future 
CD|in contrast,proprietary formats,especially those that are non-standard,that require specific software applications or particular versions of that software,are likely to pose issues for future use 
CD|rapid changes in technology in the market mean that file formats can very quickly become obsolete 
CD|this obviously has negative connotations for long-term preservation and reuse 
AP|if you want your data to be accessible later,you're best to convert it to open standards 
CD|data formats that conform to agreed international standards are less likely to become obsolete,as there should be a range of software applications that can read them 
CD|there may well be trade-offs in terms of software functionality though,such as a loss of formatting or macros 
CD|sometimes there is a de facto standard that's used 
EX|pdf for example has become the de facto standard for publishing documents on the web in a way that retains the original layout,fonts,and text 
AP|at some point during your research,you may need to convert or migrate your data files from one format to another 
EX|this could be because you've upgraded your pc,you've got new software,you're sharing data with a collaborator who uses different software,you're using a shared platform,or simply because you want your data files to be readable in the future 
CM|a checksum algorithm tool can be used to compare the bits of a file when it's been moved from one medium to another 
CD|checksums are typically run by repositories to perform data integrity checks 
CD|these won't work however,if the file format has changed or if you're comparing files across different computing platforms 
AP|at some point during your research you may choose to compress your files 
EX|this could be to fit them onto a particular storage device or for transmission or transportation 
CM|compression is also known as bit-rate reduction 
CD|it involves encoding the information in fewer bits than the original representation 
EX|zip is a de facto standard compression format that's used on windows,macs,linux,and unix platforms 
CM|zip is a lossless type of compression,which means the file should be identical to the original once you unzip it 
CD|there are also lossy types of compression associated with some multimedia file formats 
CD|these may result in some kind of distortion or loss of quality fidelity when played 
EX|tar,tape archive files,are commonly used in unix or linux to bundle a set of files into one 
AP|tar files may also be zipped to reduce the file size 
EX|lossiness can be one trade off of compression 
EX|another is the amount of processing time it takes to compress and decompress the files before or during use 
CD|the amount of computing resource needed can also be an issue,particularly in the case of very large files or shared servers  
SM|music in this lesson,we're going to further examine some of the data sharing challenges that we have briefly touched upon and discuss some strategies for overcoming these challenges 
SM|by the end of this lesson,we'll understand what is confidential information,be aware of strategies for anonymizing data,understand how data ownership can affect data sharing,be aware of the types of access restrictions that may be placed on data,and know how to apply a standard license to data,to encourage sharing and reuse 
CM|when collecting data that deal with human subjects,researchers have an ethical requirement to protect the privacy of study participants 
CD|this involves protecting an individual's identity during the collection,handling,storage,and sharing of data 
CD|often these ethical considerations are outlined in a researcher's application to their institutional review board,or irb 
CD|there can be serious consequences of confidentiality is accidentally breached 
CD|these consequences can negatively effect a researcher's career 
EX|negatively impact a research's institution,and may include hefty fines or even legal sanctions 
CD|today,the news is full of horror stories of data breaches that may arise from careless data management practices 
AP|in order to avoid these situations a researcher needs to think carefully during the data management planning phase about what confidential information they may collect 
CD|if the data will be de-identified and how or if they will share the data at the conclusion of the research project 
CM|so what are the types of information that need to be protected 
CM|first there is personally identifiable information,or pii 
CD|pii is defined as any representation of information that permits the identity of an individual to whom the information applies to be reasonably inferred by either direct or indirect means 
CD|note the reference to either direct or indirect means 
NL|we will come back to this idea in a moment 
CM|next,we have protected health information or phi 
CD|phi is individually identifiable health information transmitted or maintained,in any form or medium,by a covered entity 
CM|and finally there is sensitive information 
CD|which is information,that if disclosed there is a significant likelihood of psychological,social,emotional,physical or reputational harm 
CD|these definitions show the breadth of information that researchers need to actively protect when managing and potentially sharing data 
CM|now let's look at three type of identifiers 
CD|as we mentioned above,there are both direct and indirect ways a person can be identified 
CM|direct identifiers are those variables or information included within data that explicitly point to an individual or unit 
EX|these include,social security numbers,phone numbers,and names,and are often the easy ones to spot 
CM|the identifiers that can become more problematic are the indirect identifiers 
EX|these are variables that may make unique cases visible,particularly when combined with other individual attributes,such as race or income 
CM|finally,we have geographic identifiers 
EX|which may include indirect identifiers such as a zip code or direct identifiers such as a complete mailing address 
EX|consider an example data set in which direct identifiers have been removed 
CD|the data set represents the population of us citizens,who have earned doctoral degrees in NUMBER variables include the major field of study,race,sex and geographic region of the academic institution in which the degree was earned 
CD|without direct identifiers such as name,phone number,mailing address,social security number,and other information that link directly to the identity of the individual it would seem that it would be impossible to distinguish any given individual represented in this data set which includes over NUMBER people 
EX|let's take a closer look at these data 
EX|if we were to take just the people who earned their doctoral degrees in the science and engineering fields,we are left with just over NUMBER individuals 
EX|of those individuals,NUMBER received their degrees in the physical sciences NUMBER of which are male 
EX|of that group,only NUMBER reported their race as black 
EX|having quickly gone from over NUMBER people to just NUMBER,how easy do you think it would be to figure out who those NUMBER people are 
EX|well,only eight of them were astronomy majors it wouldn't take much more information to identify at least one of these individuals 
EX|if we knew where those degrees were granted,say in new york,we would likely know who that person is 
SM|this example demonstrates that protecting confidentiality requires careful consideration and special handling of not only direct identifiers,but also indirect identifiers 
NL|music 
SM|music to begin this course,we need to first discuss some basics 
CM|the most fundamental question for us is what are data 
CM|while this may seem like a straightforward question,numerous organizations have tackled it resulting in a range of definitions 
CD|it's important to note that data are different for various disciplines and different context 
SM|by the end of this lesson,you will be introduced to multiple types of data in an array of contexts 
CD|data come in many forms from numeric and textual data to biological samples and physical collections 
SM|you will also be able to make the distinction between research data and other associated researcher materials 
SM|some of which may be required alongside the data to understand the data themselves 
SM|and finally,and this is probably one of the most important concepts in the entire course 
SM|you will understand data in the context of the research data life cycle 
CD|to understand data management,is to understand data in all of its constructs 
CM|from project planning,through the collection of data to archiving that data as a research output after the project period has ended 
CM|first,let's take a look at how others have defined data 
AP|in addition to storing your data securely,you should also make sure that you backup regularly 
CD|keeping backups is probably the single most important data management task 
CD|there's a real risk of loss through hard drive failure or accidental deletion 
CD|the basic NUMBER principle of backup is that you have three copies of your files on at least two different media with one offsite 
AP|you should also test your backups regularly to make sure that you could restore from them if needed 
CM|there's a long list of questions you should ask when considering your backup strategy 
CM|how will you back up your data 
CM|how regularly will backups be made 
CM|will all the data be backed up,or just that which has been changed 
CD|a backup of changed data is known as an incremental backup 
CD|while a backup of all data is known as a full backup 
CM|how often will full and incremental backups be made 
CM|how long will your backups be stored 
CM|how much drive space or how many cds or dvds will be required to maintain this backup schedule 
CM|and how can you keep track of different versions of data,especially when backing up to multiple devices 
AP|once you understand what you require in terms of backup,check what services are available to meet these needs 
CD|it's also important to ascertain the backup schedule and retention policies of any centralized backup services you may use 
EX|for example,under the grandfather,father,son,rotation scheme,files may only be available for two to three months before the storage space is overwritten 
CD|there are various cloud services that you can use to backup your data 
CD|these typically allow you to store and synchronize your files online and between computers 
CD|most offer a limited amount of space for free and will charge you for additional storage or premium services 
EX|common service providers are dropbox,google drive and onedrive 
AP|you can take a look at wikipedia,which has a through comparison 
CD|there are some obvious advantages to using cloud services for backup 
EX|no user intervention is required,so you don't need to change tapes,label cd's or perform other manual tasks 
EX|they provide a remote offsite backup copy 
EX|most provide encryption and versioning,and they're multi-platform 
CD|there are,however,significant risks to using cloud services 
EX|some providers may store data outside of the european economic area,so you may be in breach of the european data protection directive,or your research funder's policy 
EX|restoration of the data may be slow depending on your bandwidth 
EX|the stored data may not be entirely private if it's unencrypted,and the service provider may go out of business 
CM|music at the foundation of many archival standards is iso NUMBER,reference model for an open archival information system,or oais 
CD|this reference model presents a high-level framework for understanding archival concepts,defines elements processes within digital repositories,and establishes a set of responsibilities for the long-term preservation of digital information 
CD|repositories that consider themselves to be oais archives are presumed to have mechanisms and workflows in place to properly safeguard digital materials 
CD|these mechanisms and workflows serve the specific archiving needs of the designated community,which oais defines as an identified group of potential consumers who should be able to understand a particular set of information 
CD|while the definition of designated community might change over time,the archive accepts responsibility for the long-term preservation and availability of information for that designated community 
CM|the oais model has six functional entities 
CD|ingest,archival storage,data management,administration,preservation and access,and illustrate the data curation and archiving workflows that takes place from the time a researcher submits his or her data to when a third-party user accesses the data 
CD|when a repository receives data files,also known as the submission information package or sip,from the data producer,the ingest function performs several tasks to establish evidence of authenticity and to ensure that files are in proper formats and include necessary documentation 
CD|standard ingest procedures include normalization of files to formats that are optimal for long-term preservation 
CD|optimal formats are determined based on careful consideration of sustainability and use factors that can affect the feasibility and cost of long-term file preservation 
EX|for instance,if a researcher submits an spss.sav data file to a repository,the repository may normalize the data file into a tab-delimited preservation format 
CD|spss is a proprietary statistical analysis software program owned by ibm,a private company 
CD|spss has had its share of new versions over the years,leaving old files unable to be rendered properly by the latest versions 
CD|such old files are externally dependent on a computer running certain versions of the software,and only if the computer's operating system supports that software 
CD|even for those skilled enough to hack software code,many proprietary formats are not transparent,making it impossible to access,much less modify or update the code 
CD|during ingest,the repository will convert the spss file into a tab delimited format,which is widely adopted,non-proprietary or open source,and free from external dependencies 
CD|preservation optimization also presumes that the stamp includes supplementary documentation that enables appropriate interpretation and use of the data 
CD|the ingest functional entity ensures that sips have all the necessary components that make data preservation,access,and reuse possible 
CD|during ingest,the repository also performs the initial checksum or hashsum on sip files 
CD|a checksum is produced using an algorithm that generates a unique string combination that is specific to the arrangement of bits contained in the data files 
CD|this unique string combination can be used to detect any changes to files resulting from corruption that may occur inadvertently over time,which is essential to demonstrating a file's integrity 
CD|because data are digital objects with specific attributes,data repositories may perform additional tasks during ingest,including checks for confidential information and data quality reviews 
CD|once ingest tasks have been completed,the sip is considered to be an archival information package,or aip 
CD|the archival storage function oversees storage,maintenance and retrieval of the aip 
CD|once the aip is moved into permanent storage,the archival storage function manages storage hierarchy,performs routine error checking,refreshes storage media,and recovers files in the event of a disaster 
CD|meanwhile,the data management function provides functionality for generating,maintaining,and accessing descriptive information,ie metadata,to document the files housed in archival storage 
CD|it also administers archival database functions to include database management,updates,and queries 
CD|once the aip files are placed in permanent storage,the customer can request access and retrieve data files 
CD|this service and functionality is provided by the access function,which coordinates these requests and assembles and delivers the final dissemination information package or dip to users 
NL|music 
CM|music data could be repurposed in different ways,so it could be reused for entirely different things 
CM|and we're finding things like youtube videos can be used to determine whether somebody has parkinson's 
CM|so that was not looking at speech patterns in video,was not envisioned at collection,you can find that out 
CD|now,that can be a two edge sword 
CD|so one of the problems with data sharing especially when you're sharing data about people,is that you might violate privacy and confidentiality 
CD|it can be very difficult to allow serendipitous discovery of stuff,especially with rich sources like video or social networks,and also guarantee that no one will ever learn anything about an individual from that data source 
CD|besides confidentiality,another issue that somebody could prove that you did something wrong 
NL|or stupid 
NL|and that's an individual disincentive 
NL|i think in general that's a social incentive for data sharing 
CD|in that it helps with error correction 
CD|but it makes,from an individual point of view,if the norm is not to share,that may disincent you from sharing,because you could be proved to make a mistake 
CD|and a third is that,it's like everything else,it takes time,effort 
EX|for a lot of data,especially things in the social sciences,traditional surveys and stuff,the amount of bits,the size of the bits is so small that storage costs are not really the issue 
EX|but for some new forms of data,videos,social networks,storage costs can be high 
AP|and for anything,what you have to do to document instrument etc 
AP|so that not only you and your research group understands it,but everybody else who's in a particular domain can understand it without talking to you,is going to be more 
AP|that's capturing that tacit knowledge and documenting it 
AP|now peculiarly that's also maybe a good thing from a scientific practice point of view,but it's an additional cost 
CD|the drawbacks of sharing data,i guess i would think of them more as considerations in sharing data 
CD|because i think that,really,we should be sharing data 
CD|we may have to delay 
CD|and there could be valid reasons for delays 
CD|that could be that reasonably the researchers who spend a whole lot of their time and effort in creativity and getting the data have the window of opportunity to publish about it,and i think that's valid 
CD|one of the things we did at icpsi was have a delayed release,so you deposit it right away,there is a three year window in which the researchers can do what they need to do 
CD|and at that point its agreed upon,and then it will be shared 
CD|if you wait until the research project gets to that point,very often the data preservation can be less easy 
CD|more costly 
CD|well i don't know if there are drawbacks to sharing data,but there are certainly challenges to sharing data 
CD|particularly in the social sciences 
CD|much of our data is about people and those people have rights to privacy and rights to have their own being protected by us as researchers 
CD|often subjects exchange their data with the assurance that they will be protected in some way 
CD|and so we have an obligation to do no harm as we're doing our research 
CD|there are some challenges i think particularly for young scholars that spend a lot of time and energy collecting their data 
CD|they want to have an opportunity to do their research,publish out of their data before they have to expose it to the rest of the research community 
CD|so there are challenges like that in the process of sharing data,but i don't think those are reasons not to share data 
CD|i think those are just issues that have to be managed as we try to be more open about the science that we're conducting 
SM|music now that we know what data management is,and who the people involved are,we will now show you where specific data management practices fall within the research lifecycle 
CM|to do this,we're going to use the research lifecycle from the data documentation initiative,or ddi 
AP|during the initial phase of the research lifecycle,that is the discovery and planning phase,researchers will need to determine what type and format of data they are going to collect 
EX|this may involve collecting new data,combining existing data sets or analyzing existing data 
AP|if the project involves human subjects,the researches will need to consider privacy,confidentiality,and other ethical issues 
AP|in addition,researchers should consider what types of documentation they will create and the metadata standards they will use to describe their data 
AP|these are some of the details that should be included in the data management plan 
AP|further,researchers will need to identify the potential reusers of the project data 
CM|who will use this data 
CM|what might they use it for 
CM|will the data,once stripped of any potentially identifying information,be useful for secondary reuse 
CM|what access restrictions will be placed on the data 
AP|these are all questions that the researchers need to answer before the project even begins 
AP|contacting an information professional early in the research life cycle can assist researchers in answering these questions 
AP|as well as identifying appropriate data repository,to archive their data 
AP|finally,during this phase,it is important for researchers to determine the possible costs surrounding data management 
EX|this will involve documenting the data,formatting them,storing them,cleaning and anonymizing them,and finally archiving them 
AP|during the data collection phase,primary researchers make certain that the research team follows data management best practices 
EX|at this point,this can include file organization,backup and storage strategies,as well as quality assurance protocols 
AP|deciding on file organization schemes including naming conventions and file versioning policies at the very beginning will help make the data collection process run smoothly 
CD|this will decrease the likelihood of duplicate or out-of-sync versions of the data 
AP|you will also make locating specific documents and files at the end of the project much easier and decrease the risk of losing content 
CD|backup and storage strategies will be implemented through the data collection process 
CM|as we know,technology is not always a NUMBER reliable 
AD|if a researcher has appropriate backup and storage strategies in place,this will help protect against data loss from the beginning of the project 
AP|it is best to discuss options for secure backup and storage with the institution's it department 
CD|quality assurance protocols outline and document the steps and processes necessary for checking and reviewing the data during and after it is collected 
CD|these protocols vary across disciplines and it is the responsibility of the primary researcher and the project team to implement these protocols based on disciplinary standards 
AP|it is also a good idea to consider access controls and data security during this phase of the lifecycle 
AP|while working with the it department,make sure to inform them of any security concerns or needs 
AP|if the data is sensitive then the appropriate steps will need to be taken to ensure that they are safely stored and only accessible to authorized individuals 
CM|next is the preparation and data analysis phase 
CD|after collecting data,it may not be in a form that can be readily analyzed 
AP|researchers may need to clean,manipulate or process the raw data 
AP|what is important at this point is documenting the changes to the raw data and creating a master version to be analyzed and eventually archived 
AP|a common tip here is to make the final version of the data read-only 
AP|so it can't be inadvertently altered 
CD|once the master version of the data has been prepared,data analysis can begin 
CD|data analysis can take many forms across disciplines 
AP|the most important thing to consider in this phase is making sure to document analysis procedures such as additional modifications to the data,the model used,the code used to run the analysis,and hardware and software specifications 
CD|having this detailed information will help researchers write a better paper and do better science 
AP|during the publication and sharing phase,a researcher will prepare their data files and other research materials necessary to interpret and reuse the data in the future 
AP|data management best practices dictate that data be stored and made available to share in a trustworthy data repository 
CD|this phase is an opportunity to consult with information professionals or data repository staff 
CD|who can provide guidance as you prepare data for sharing 
AP|researchers should make sure that their data management meets all of the needs and requirements of the repository 
AP|this means that the data should be in the appropriate file format,should be cleaned to the specifications of the repository,and to comply with applicable privacy laws and requirements 
AP|additionally,all documentation should be reviewed to ensure that the data can be reused and standard metadata should be applied 
AP|by working with a data repository,researchers can ensure that data will be properly preserved 
AP|discoverable,and usable in the future 
NL|the end of the project can seem like a bit of a blur and a time crunch 
AP|but by following data management best practices throughout the research life cycle,you can rest assured that your data will be available for the long term 
CD|at this point your data are safely stored in a data repository 
AP|and you can begin planning for your next project 
CD|some key repository functions got ensure the long term management of data include ensuring the integrity of the data 
CD|protecting against data loss 
CD|and providing access to data 
SM|these and other functions performed by trusted repositories will be discussed in more depth later in this course 
SM|we covered a lot of data management topics in this module,but what is most important to take away is that effective data management takes places in all phases of the research lifecycle 
SM|from planning a project,to collecting your data,to comparing and analyzing your data,and then finally publishing and sharing your data in a repository that will see to their long-term management and preservation 
NL|music 
CM|music in all of these three data management policies,dmp should describe in detail all major aspects of data management throughout the research life cycle 
SM|here is a checklist for a data management plan from the digital curation center that list questions that should be addressed in the dmp 
CM|what data will you collect or create 
AP|to answer this question,you should provide a description of the data,including the type,format,and volume,with a justification of the format choice 
CD|if there are any storage implications due to the format or volume of the data 
AP|you should include these as well 
CM|how will the data be collected or created 
AP|describe the data collection methods to be used,including the standards that dictate these methods 
AP|you should also discuss your plans for organizing data files and applying version control,as well as how quality assurance protocols will be implemented during and after data collection 
CM|what documentation of metadata will accompany the data 
AP|it is important to determine what information will be required to ensure that the data be understandable to secondary users of the data,or for you and your team in the future 
AP|in other words,you should describe the type of documentation that will be needed to accompany the data in order to interpret and use them 
EX|these documents might include a description of the methodologies,a codebook that provides variable and value definitions,questionnaires or instruments,or analysis procedures 
CM|how will you manage any ethical issues 
AP|the dmp should demonstrate that you have considered critical issues related to laws and guidelines 
AP|regarding the protection of human subjects 
AP|if your project will conduct research involving human participants,you need to describe provisions for protecting their confidentiality 
AP|this should include strategies for handling and storing sensitive data,restricting access to sensitive data,and preparing de-indentified datasets for sharing 
CM|how will you manage copyright and intellectual property rights issues 
AP|this is where legal issues of data ownership need to be addressed 
AP|you need to identify the owner of the data and their conditions for using the data 
EX|if you are reusing third-party data particularly property data 
AP|you should discuss permissions with the data producer 
CM|how will the data be stored and backed up during research 
AP|to answer this question,you should describe provisions for storage 
AP|and the degree to which they are adequate for the type and size of your data 
AP|provisions for storage should include plans for systematic back ups of the data files 
CM|how will you manage access and security 
EX|if the data are sensitive or should otherwise be restricted 
EX|to authorize project personnel 
AP|you should describe in detail security measures that will be in place to protect the data 
AP|you also need to describe the standards with which those security measures comply 
AP|which data should be retained,shared,and/or preserved 
AP|in thinking about how the data will be used by others or by your team in the future,you should make note of the potential value of the data and the effort that will be required to prepare the datasets for preservation and access 
CM|what is the long-term preservation plan for the dataset 
AP|answering this question requires you to identify the repository you will use to archive the data and your plans to prepare and document the data to ensure that they will be preserved and usable into the foreseeable future 
CM|how will you share the data 
AP|here you should identify the mechanism you will use to share your data 
AP|describe how others might find your data and how data files will be delivered 
AP|you should also specify how you would like others to acknowledge or sight your data 
CM|are any restrictions on data sharing required 
AP|again,if privacy concerns affect your ability to share project data,you will need to discuss them and how you will overcome these concerns to enable data sharing whether by providing anonymized versions of the data 
AP|requiring a data use agreement or other mechanisms 
AP|you may also choose to place an embargo on the data,to ensure you have exclusive use of the data for a period of time 
AP|if this is the case,you should explain why this is necessary 
CM|who will be responsible for data management 
AP|quite simply,you need to identify,by name if possible,who will oversee the implementation of the data management plan 
CM|what resources will you require to implement your plan 
AP|for some projects with complex data,whether due to type,size,or the fact that project activities are geographically distributed among different institutions,data management might require specialized expertise or special equipment 
AP|you may also consider costs associated with performing ongoing data management tasks,as well as the resources required for long-term preservation of the data in a repository 
NL|music 
CM|how does good data development add value to research 
AP|one of the key issues when you plan,or design in your research project is to have a data management plan 
EX|students usually forget,they get so obsessed with methodology that they forget how they're supposed to collect data,and how to record it and keep it 
AP|one of the good things is,when you apply for ethics,you have to think about it,which is quite helpful,but one of the things that i always tell my students which i think is helpful is to think about 
CM|what is your for your data management plan 
CM|how your auditing that this actually works because like anything else in research or even in clinical practice if you give an intervention 
AP|if you don't know if it works,you actually might have more harm than goods 
AP|so if we data management plan,we have a plan how you're auditing that the data is collected as you think it is collected,and the quality of data is good,and you will be surprised as sometimes that even the easiest data collection,if you don't have an audit 
AP|behind you,you might end up with errors in it that could be later in the project 
AP|it's helpful to prevent it early on 
CM|as a patient i have two views on good data management 
CD|the first view is that good data management is keeping it safe,not giving it to people who shouldn't have it,not leaving it around lying on trains because that's what the newspapers tells me happens to it 
CD|it's sold to insurance companies and goodness knows what else 
CD|so on the one hand,that's good data management 
CD|keeping it safe,keeping my anonymity preserved,but on the other hand,as a patient who's had some serious illnesses,including cancer 
EX|good data management is actually making sure its curated in the right way to be shared with other researchers,especially for rare cancers,or common cancers with a rare offshoot 
CD|the only way you find out about these illnesses,the only way we really know know what treatments are actually going to work,is by sharing data across patients,across countries,and making sure it is comparable and free to everybody to use it,for legitimate research purposes 
CD|so good data management's absolutely crucial,it's an ethical responsibility that,researchers have to honor the data they've been provided with and put it to best use 
CD|it's also efficient,not just ethical 
CD|it minimizes the wastage of money that's been invested in the research,and not only is it ethical and efficient,it's obligatory 
CD|inaudible sharing your data is really important for transparency 
AP|so if you have your data there and it's available and it's in a usable format,then it means other people can,not just interrogate it and kind of look at your work more closely,but they can also build upon it,so they can incorporate it into their future research,or it can become part of a bigger project or a master analysis or anything inaudible 
AP|it's really important to think about how you're going to share your data with other people and plan ahead for that 
NL|sound 
NL|hi,welcome to lesson of creative programming for digital media and mobile apps 
NL|i'm mick,and this is matt and marco 
SM|and we're going to take you through six individual lessons starting with this week,which is all about the basics of drawing and the basics of sound 
SM|so,first of all,we need to know how to manipulate graphics and draw them to the screen and we also need to know how images are represented on the screen 
SM|marco is going to take you through that,and he's also going to give you a introduction on how to use processing for making desktop applications 
SM|matt's going to take you through how to control sound and how to find and play back sounds from the internet 
SM|he's also going to talk a little bit about manipulating sound,and how sound is represented in the computer 
SM|in addition,he's going to show you a little about how to run applications that we develop on android phones 
SM|and then,i'm going to take you through the basics of using apple devices 
SM|and after that,i'm going to show you how to make a basic app with simple interactions,like mouse and touch interaction 
SM|that plays back different sounds in different ways 
SM|and also changes the way that certain types of images are drawn 
SM|so,that's really what this lesson is about 
SM|it's kind of easing you in to the whole idea of making creative applications 
NL|and if you've got any questions,you can check the forums 
NL|we'll be looking out for any of you who have particular issues 
SM|it's always a bit difficult getting started running software for the first time 
SM|so,we've got a whole load of examples that you can download from the coursera website 
SM|we're going to be referring to them throughout the next six weeks starting this week 
SM|so,make sure that before you ask questions,you have a look on the documentation that we've put on the website 
NL|there's a lot there 
NL|there are also people who are going to be on the forums,expecting you to ask good,relevant questions 
NL|and hopefully,if you are stuck,then we'll be able to sort that out 
NL|so i think we're going to start off with marco 
NL|i think he's going to do some graphics,and then move on to matt,and then i'll be seeing you later on 
NL|music 
SM|welcome to my last additional video,which is about doing things many,many times 
SM|this is something called a loop 
SM|before we get to loops,let's talk about why we want to do things many,many times 
EX|simplest reason is that we might want to draw lots of things that are very similar 
EX|a bunch of concentric circles,a set of lines forming a grid,these are the examples i'm going to use 
EX|but also,things get much,much more complex than that 
EX|i mean,you might have a game with lots of enemies you want to draw 
EX|or in the case of this week's example,we're creating complex shapes made out of many similar simple shapes 
EX|and,in a sense,a grid or concentric circles is a good starting point 
EX|here,this is a sketch that gives us,draws a bunch of lines across the screen 
CM|how does it work 
CM|well,every time we call a draw we're calling the line command 
CD|but we're using a variable here which is changing every frame,so if you watch,let's draw gets called every time a draw gets called,another online gets to have it 
CD|i'll actually set the frameworks,so this command sets how often draw is called essentially 
CD|just typed in ten times a second,slow it down a little bit so that you can see it drawing very gradually 
CD|and that's kind of what we want to do 
CD|we want to draw one line after another,after another,after another 
CD|and we'll see how that works 
CD|so this is the code i just showed to you 
CD|and i will go into quite a lot of detail how it works 
CD|first we create and set up a variable for the position of the line starting at zero 
CD|we've seen variables last week 
CD|we know how they work 
CD|it's a number 
CD|its value is zero 
CD|then we use the current values of OMITTED to draw a line,when we start off at zero 
CD|so we're drawing a line at zero,and the next one is always zero,then zero,then height 
CD|so we make use of the variable here inside the blank 
CD|the reason we're using pos twice is because,we want both the start OMITTED position and end OMITTED position of the line to be zero,because we want a vertical line 
CD|we don't want the line to be at all horizontal,so the starting OMITTED and the end OMITTED position 
CD|but all that's important here is that we're using this variable to do something,in this case draw a line 
CD|but the really important bit is this next one 
CD|we're changing,we're updating the value of the variable 
CD|so once we've drawn the line,we add NUMBER to it 
CD|so the next time we draw a line,it's going to be in a different position 
CD|and the reason that works is because once we've done all that,it repeats 
CD|and it repeats because draw is called many,many times 
CD|it's called one time after another,each rate that's drawn 
CD|let's go back through that,because it's really important 
CD|we need to understand this to understand what's happening next 
CD|we setup a variable 
CD|that variable is going to control our drawing 
CD|we use the value of the variable,we update the value of the variable so that the next time we use it,it's different,and we repeat 
CD|while we're repeating,we're doing exactly the same thing we just did,but with a different value the variables so the effect is going to be different 
CD|we're going just do that and then times 
CD|okay,one small but important point next,before we get to the next bit is that OMITTED never stops 
CD|it's going to carry on going,even though we're off the screen 
CD|we kind of like,probably doesn't make a difference if we don't see stuff going off the screen,but to my mind anyway,it seems a little bit inelegant to carry on drawing when we no longer see stuff 
CD|so we want to stop when we reach the end of the screen 
CD|and this is how we do it 
CD|again,we setup the variable,but before we do anything we use an if statement to check the value of the variable 
CD|so we check is the position,is pos less than the width 
CD|if it's less than the width,we'll have to carry on drawing,because we haven't reached the end of the screen 
CD|if it's more than the width,we stop so only if we less than the width do we do the drawing,the updating and the repeating 
CD|if we've reached the end,if it was more than the width,we'd stop updating,we'd stop drawing 
CD|we finish doing what we're doing,then we finish that drawing 
CD|so,small thing not vital in this particular example,but actually very important with say knowing when to stop,and in this case we are doing with an if statement,but the important thing is if we go back to the beginning 
CD|we're doing this statement that compares our variable to some end condition,to some of the end condition 
CD|so we know that we end when position reaches width 
CD|so as long as the position is less than the width,we carry on going 
CD|so let's briefly see that to check it works 
CD|so i'm putting in an if statement,we're checking the value of the position 
CD|you won't really see if it works because we can't tell the difference between big widths or not but we can if say,we only want drawn to the halfway across the screen,and there it stopped 
CD|so,we can make it stop 
CD|not only can we carry on doing stuff,but we can also have it stopped 
CD|so are we done yet 
CD|no,because what if we want to do everything at the same time 
CD|if we run this together,what that does is it gradually draws a set of lines across the screen,one after the other 
CD|what if we just want a set of lines on our screen 
CD|how do we do that 
CD|in order to do things,many things all at once,we need something called a loop 
CD|if we get to live up,we cut this code because it's essentially the same ideas 
CD|what it does,sets up a variable,checks the value of that variable 
CD|values still okay,since we haven't reached the end 
CD|we use the current value available 
CD|we update the value,and we repeat 
CD|this is what's called a for loop 
CD|it does exactly the same thing,but it does it one after the other until it finishes 
CD|sets up a variable,checks the value of the variable,uses the current value of the variable 
CD|updates it and repeats 
CD|but the important thing is,it repeats inside draw 
CD|so it's not repeating once per draw,it's doing all the repetitions every time you call draw 
CD|so that to you,to the viewer,it looks like it's all done,all at once,and what you get is a much lines 
CD|and the important thing is it's this four structure 
CD|let's look at that in a lot more 
CD|once more i'm going to repeat 
CD|we set up a variable,we check the value of the variable 
CD|but instead of having these all separate,they're all inside these brackets for this command for 
CD|it's a little bit like an if statement 
CD|in an if statement you have if brackets inside there,you have the condition 
CD|but rather than just having a condition,we actually have,we have all the things we're doing with this there 
CD|we're having,setting it up,comparing it and updating it 
CD|and the for loop does the repeating for us 
CD|so let's look at that again 
CD|a for loop has three things 
CD|an initial condition,a test that checks the variable 
CD|so the initial value of the variable,the NUMBER check on the variable,the increment,so increasing the value of the variable 
CD|here i'm just adding one or NUMBER that's very,very common 
CD|just add one at a time 
CD|the previous one was a little unusual in that we were making 
CD|and we've got a body,where we're actually using our variable 
CD|and that repeats 
CD|the initial condition test and increment are all inside brackets and they're separated by semicolons 
CD|it's a little bit surprising 
CD|other times when you've got a function call,we expect to see brackets,and inside them commas 
CD|here it's semi-colons,this is how you know it's something a bit different from a function call 
CD|here they're semi-colons,you just have to know that that's how it works 
CD|just like the end of each line has a semicolon,each bit of the for loop has a semicolon 
CD|just have to know that,put it in,it's part of the punctuation and grammar that,as i've said before,is very important to programming 
CD|if you get that right,it will inaudible work 
CD|okay,now i want to look at another use of loops and a very useful one 
CD|let's recap,what is an array 
CD|an array is like a variable but,while a variable has one value,an array has many values 
CD|an array variable is what we see here 
CD|posx is a little box that points to another whole load of other boxes in memory,each of which can be thought of as its own variable 
CD|so it's pointing to a large block of memory 
CD|so when we've got a single variable,like an int variable we just create,how we create it,is you create a box in memory,give it a name,posx,and put a value in it,zero 
CD|there it goes 
CD|when you create an array,it's a little bit,creating a memory box,sure 
CD|give it a name,sure 
CD|create an array 
CD|and put that away in a box,or rather,put a reference to that away 
CD|so make that box point to an array 
CD|i won't go into detail on that 
CD|it's not sampled right now 
CD|reportedly now we've got a whole bunch of empty boxes because we haven't put stuff in the boxes 
CD|so we need put values in each of these array boxes one after the other 
CD|so i put one value in after another,after another,after another 
CD|how do we do that kind of thing 
CD|how do we do one thing after another,after another 
CD|it's what we've just seen,it's a. and this is how we might go about doing it 
CD|first create a memory box 
CD|give it a name 
CD|so creating an array then 
CD|create your array itself 
CD|so now we've got NUMBER boxes in memory 
CD|put a pointer,so make that posx variable point to that memory 
CD|then we need to go through and put a value in each array box 
CD|that's what we're doing with a link 
CD|let's look at that in more detail 
CD|what we need to do is start at the first element in the array 
CD|as we said last week the first time through is not one,it's zero 
CD|so we start off at int i=0,set up our variable i stands for our position in the array 
CD|set it to zero 
CD|we need to test to check the variable from what we need to make sure is it is not more than the length 
CD|it hasn't gone over the way 
CD|so as long as i is less than the length of the array,you're okay 
CD|as to be less than,less than and equal because it starts at zero,the value of the array length is on the entity length 
CD|this is very like what we saw last week in the animation,then we went to stop and loop the animation 
CD|but,again,this time around we're doing it many times 
CD|rather than doing it every frame,we're doing it all at the same time 
CD|so we're going until we've reached the end of the array 
CD|go one by one,add one 
CD|++,if you remember,means add one 
CD|each frame 
CD|and then we put the value into array on the top 
CD|so we're kind of stepping through each element from zero,one,two,three to the length of the array,cutting up value 
CD|in this case a random value 
CD|into that inaudible 
CD|sound recap,set up,start,start position,first element through a always NUMBER until the last element,always less than or equal to the length of the array 
CD|we get that with a reigning.length 
CD|that's how you get the length of the array 
CD|go one by one,always add one to put something in 
CD|whenever you're dealing with arrays,it's really useful to do this all over the place 
CD|this is a really,really common thing 
CD|you've got an array,do a loop through,and the array,the loop always looks the same 
CD|always starts at zero,goes the length of the array as one doesn't 
CD|in fact,as well as putting stuff into the array,you can do stuff to the array 
CD|this is an example of how you might draw a point based on the positions in the array 
CD|we've got two arrays 
CD|and the array of OMITTED positions,and the array of OMITTED position will be drawing a point each of those 
CD|this assumes that the size,the position of OMITTED is exactly the same as the position of x. and it's exactly the same 
CD|so the first element starts at zero until the last element,array.length 
CD|go one by one,plus plus,add one,and use element i. and you can use this to draw elements in the array,to create elements in the array,to do various updates 
CD|i could be adding something to the position of each array 
CD|i could do whatever i want,just like any other variable 
CD|except this time,because i've got lots of them in an array,rather than just using one line of code,i'm using a loop to do that one line of code many,many times in one time for each array 
CD|it's a very,very common pattern that whenever you're working with arrays you use 
CD|it was very,very unusual that last week 
SM|okay,so that's the end of this additional programming lecture 
SM|and that's our last additional programming lecture for this course 
SM|so i think i've covered all the programming topics you're going to need for the rest of the course you can't learn to program just by watching a few of my lectures 
SM|you have to go and do it,and i recommend you do it by trying the exercises,looking at the examples we've shown you in the rest of the course 
SM|go and look at the documentation,just try to write programs 
SM|that's the way to learn 
SM|there's a kind of myth that's,to be a programmer you've got to have some special aptitude and some people can do it,some people can't 
SM|they did a load of research about what 
SM|which people were able to succeed at programming in the university and not do that properly,and who didn't 
SM|the only thing that made a difference is how much time people spent programming 
SM|you've really got to do it,and the best way to do it is find something you're passionate about 
SM|i think anyone in this course are creative people,do something creative with your code,and use that to motivate yourself to go out and do it 
SM|if you do spend loads of time programming and practicing and practicing and practicing,you will do it 
SM|the best way to practice is to do something that you're really into,you're really passionate about 
SM|something creative,something interesting 
SM|i hope we have provided in the course a bunch of examples,a bunch of exercises which will make you able to do that 
NL|okay,thank you very much,enjoy the rest of your course and good luck learning to program 
SM|welcome to the second lecture on introductory programming for those of you doing the course we need for programming 
SM|so in this session i'd like to talk about variables,but before we start let's have an example 
EX|so let's write a simple processing program,correct the size of the screen,set as background,which i might if you haven't looked at our main videos yet,you'll find out why number NUMBER is right in there 
EX|and let's draw points,let's set stroke rate say see the point and then draw,draw a point,position NUMBER,NUMBER say 
EX|that's a fairly basic processing program 
EX|and now we gave,it's just a point 
EX|where ever you want to draw a point in the middle of the screen 
EX|well,we can do something like this 
EX|the middle of the screen is half the width and half the height,and we can do width divided by,height divided by NUMBER and there we go to the point in the middle of the screen 
EX|now,what exactly have i done there 
CM|so we're quite used to,where the last session we saw,we saw how we could call a command like point,using numbers 
CM|but now we've used that's something different we've called point with width divided by height divided by NUMBER and so what is width 
CD|it's a,it,behind the scenes,it's a number,a number that gives us the width of the screen 
CD|and in the case of the example,it was but here it's a name that stands for that number,and i can use that name in the program instead of using a number and i can do calculations with it i've divided by NUMBER that slash sign as we'll com to later is is division in the program,because we don't have an easy like divide symbol in the,in the in the keyboard 
CD|so that's a new element 
CD|and it's something that's called a variable 
CD|a variable is essentially a name that can stand for a number 
CD|it's called a variable because not only can it stand for a number,it can change the number it stands for 
CD|it can change 
CD|so what does that mean 
CD|and what if we want to create own own variable 
CD|and we'll see in future examples,it's very useful to have a,a name by which to refer to a particular number 
CD|so,this is how we create a variable,and i'll go through this in detail 
CD|if we're creating a known variable,it will look something like this 
CD|we're correcting a variable that is a number that starts off equal to NUMBER we first,we need to go back to our example of what a computer is,you can think about what really is happening 
CD|so this is our computer,it's got a processor and a memory,variables,astute memory 
CD|and what happens 
CD|what a variable is,is a little box in memory 
CD|and,inside that little box of memory you can put memory or different things 
CD|the first part of the of this command to,create a variable,int we'll come back to exactly what that means but it's basically saying this is a number 
CD|so create new box big enough to hold the number 
CD|next thing we do is give it a name 
CD|call is pos x,for example 
CD|that's just the name of the value 
CD|call it anything,alright 
CD|call it john,call it mark 
CD|in this example,i'm representing the OMITTED position of something 
CD|so i'm going to call it posx 
CD|and then we set it equal to a,to NUMBER that means we're putting in the number inside our little box,in memory inaudible 
CD|so what we do in a case of variable is,a variable is basically a box in memory 
CD|it has a name 
CD|and then can have values in 
CD|those values can be numbers they can be other things 
CD|so let's go back to what we were talking about in our 
CD|previous lecture about how memory is composed of a whole lot of NUMBER and NUMBER 
CD|and think about NUMBER and NUMBER,what we said is that we can create lots of different things after these NUMBER and NUMBER,interpret them in different ways 
CD|so we could have basically true,false,very simple one bit 
CD|there is inaudible one bit in reality but think of it as bit 
CD|you can have numbers as we saw we can have whole numbers,factional numbers,we can have text,we can have really complex things like images and audio wave forms 
CD|and each of these we can have variables to represent any of these things 
CD|but the key thing is that they take different amounts of memory 
CD|so a number,a whole number is actually inaudible different need from a fractional number 
CD|and both of those things need a lot less memory than text and certainly than an,than an image 
CD|so when we're creating that little box in memory for a variable,we need to know roughly how big it is and what kind of thing we're going to put in it 
CD|and for that reason,we give names to all these different types of data 
CD|and that this we call the different types,types and there's a tight boolean,which can be true or false,and that's it 
CD|a tight int,that means integer,which is a mathematical word for whole number 
CD|float,a floating point number 
CD|means a fractional number,sort of decimal number 
CD|the reason it's called flight is slightly complicated,but it's due to the representation of the number in the computer 
CD|string is a word for a text,so it's this little string of characters 
CD|and then there are complex types of pimage and audiobuffer that are specific to processing unknown not,not yet 
CD|come back to those in a minute 
CD|we've also got a special type void 
CD|which we will come back to in a fu,future lecture,which represents nothing 
CD|come back to why we might want trips in life 
CD|so that's,comes back to our little int in there 
CD|that int and that posx represents the fact that posx is a number 
CD|a whole number 
CD|so we can we know exactly what the computer knows,exactly what kind of thing you want to put in 
CD|that's why we can put zero in there,we can put a word like thread 
CD|we can in turn say float instead of int and that will give us a factual number or string if you want to put text in there 
CD|so,let's look at something else we might do with the variable,setting its value 
CD|so this is saying that our variable when setting in OMITTED position 
CD|becomes equal to a number NUMBER now,let's just go back 
CD|becomes equal to,that's an important thing 
CD|equal,those equal,that equal sign's,in programming is what's called an assignment operator 
CD|takes one value on the left side of it,and sets it to be the new value 
CD|so it changes the value of posx 
CD|it's not saying that they're equal to begin with,but once you've done posx equals NUMBER,after that posx is now NUMBER that equal sign is how you change the values 
CD|you can set a variable to equal to another variable 
CD|so pos OMITTED is now going to have be equal to the width of the screen 
CD|or a function,certain functions do calculations and 
CD|can give you back numbers,or other values 
CD|up to now,the functions we've seen just do stuff like drawing 
CD|but sometimes we have a function like random,a very useful function,which generates a random number 
CD|so this call is going to give us a random number between zero and NUMBER but he's going to set posx to be equal to that random number 
CD|so after that posx is a random value 
CD|and we'll see in the main lecture how we can use a number of these functions to do calculations and then give us back a value that we put in the variable 
CD|so we're giving numbers to,this random function,we're giving it zero and a NUMBER that controls how it works 
CD|basically,for say,and NUMBER,the random,it will give us a number between and NUMBER if i say and NUMBER,it'll give us a number between and NUMBER,and then it gives us back a number if you present posx to there 
CD|some functions return and return strings,texts,boolean variable values,images,it can return any kind of type,but something that we,can be put in a variable 
CD|we can also do calculations and put the results in a variable 
CD|so we can take a value,which in this case 
CD|it is another there 
CD|for mousex 
CD|mousex is a variable which represents the position of the mouse 
CD|the OMITTED position of the mouse 
CD|and we add something to it 
CD|we add NUMBER that gives us a new number 
CD|whatever mouse OMITTED is plus set for mouse x. it's NUMBER it's NUMBER if you can do basic math 
CD|and we take that value and put it in posx 
CD|and we can do something else 
CD|we can take the value and change it based on it's own old value 
CD|so we can take posx,make it equal to 
CD|itself but the old value of posx plus NUMBER so if posx is NUMBER,we add to NUMBER and set posx to that 
CD|that's a way of changing a variable as we use it 
CD|in in future lessons we'll see how we can use that to animate things 
CD|by every time changing the value of the variable,if that position,variable is a position or something similar,we can make things move around 
CD|this is such a common thing to do,there's this little shorthand for it 
CD|posx plus equals one means posx equals posx plus NUMBER it means exactly the same thing 
CD|it's a way of adding a value to itself 
CD|posx plus,plus is an even shorter shorthand when the,you know the value of adding is NUMBER posx plus,plus just means add one 
CD|posx 
CD|posx plus equals means add a number to it 
CD|all these three expressions are showing you,these three lines of code,are the exact same thing 
CD|but in the first two,i could change the value of and add instead 
CD|the last one is always been adding NUMBER so,let's look at some of the,things you can do with calculations 
CD|you can do some basic maths 
CD|we've seen how to add you use the plus sign 
CD|straightforwardly,to add two things you'd do plus equals 
CD|if you want to add something to a variable and plus,plus if you want to add one to a variable,could do exactly the same with subtract,minus signs,take two numbers and subtract them,minus equals subtract number from a variable,minus,minus,subtract one 
CD|star is asterisk,is used for multiplication,because there's no sort of multiply sign on the standard keyboard 
CD|and we can do star equals to multiply the value of err by something that no equivalent to plus,plus 
CD|the slash is the divide symbol,star's the multiply 
CD|so those are some basic math,there're more operations 
CD|that's it for now 
CD|another thing you need to think about in terms of calculations is brackets 
CD|if you want to do multiple calculations on one line and combine them together,you can put brackets'round them as you would in standard maths to constrain which happens first 
CD|so,this stuff in the inner brackets is done first 
CD|you calculate the first brackets,and then use the results of that calculation in the outer brackets 
CD|so you'll,what's happening here is you're multiplying OMITTED by and you're adding to the result 
CD|okay,so let's get back to various types 
CD|we've talked a lot about variables now and how we can have different types of boolean,int,float,string 
CD|it mostly talked about numbers because that's mostly what we're going to be using in graphics 
CD|in the future we will talk about boolean 
CD|but now i want to talk basically about things like pimage and audioplayer,because they're actually much more complex than something like a number 
CD|obviously a,a whole audio file is more complex than a number,but even the way the variable works is slightly different 
CD|so this week matthew's going to talk about audioplayer let's have a look at it 
CD|so just as we did int pause x,we get the type of the variable and the name 
CD|here we give the title variable audio player,and the name,is player 
CD|you can give it any name you like 
CD|if it's a high hat we can call it high hat,if it's a violin sound we can call it violin 
CD|we can call it anything we like 
CD|so that's essentially the same thing 
CD|and minim is another aud type we use in audio 
CD|matthew will talk about exactly what all that's used for,but here is how we create minim objects 
CD|so,just as we set the value 
CD|of our int variable to NUMBER you can set the value of an object,and so i didn't use the term,but these complex types are called objects 
CD|our object's called minim 
CD|now,we need an extra bit in here,because there's no easy way of saying right 
CD|we can just write three,if you want a new variable,a new number 
CD|but there's no quite so easy way of doing that 
CD|we need a new command called new,and what new does is create a new object 
CD|and it does it by calling a function 
CD|called a constructor 
CD|this is like a command but it has the same name as the type,as the object 
CD|and it's used to create any value of those objects 
CD|they're new in the constructor 
CD|by the name of the type combine together to create a new value of the objects 
CD|and you can inaudible pass parameters in just like any other command 
CD|matthew will explain this,but this essentially means,the,it's something that wraps into programming,you don't have to worry about it too much 
CD|but it's an example of passing something in,so that can be used in creating an object 
CD|so,in an audio file,you might pass in the file name 
CD|in an image,you might pass in how,the width and height of the image 
CD|there's lots of things you could pass 
CD|and then there's another important thing,big difference between types like numbers and objects 
CD|a number is just a number you can do some calculations on 
CD|in a,in an object,as well as having its value,you can call a function on that object 
CD|what that means is,if you're calling a function play,but that's not a generic function,that doesn't apply everywhere,you know,you can't just play 
CD|you're playing a particular audio file 
CD|'kay,meaning to play an audio file 
CD|and that's why we do this little bit of style of code where we're doing player.play 
CD|recalling play on a specific object 
CD|inaudible specific audio file,not general audio file just one particular item 
CD|and we're using this little dot 
CD|what a dot does is links the function you're calling to things have been called 
CD|so you do,player.play cause of function one specific object 
CD|a very useful capability 
SM|so this is something that mathew's going to use and that nick and i are going to use in the examples a bit later in this lesson 
SM|so that was a very brief introduction to variables 
SM|you'll see a lot of examples in the main lessons 
SM|and and hopefully that will help you understand these concepts that we build on programming 
SM|if you need some more help we've provided a bunch of links relating to programming on the main site 
NL|music 
SM|today we're going to talk a bit more about moving things around in graphics 
SM|so in the first week we talked about how to draw stuff and there we could position objects and then like rectangles,by giving the pixel positions.and for example the white command and the ellipse command 
SM|and,and that's fine,we can do that 
SM|and last week we talked about doing animation,but animation with image sequences where we're playing lots of different images all in the same position 
SM|today i'm going to talk about more powerful ways of moving objects around beyond what you can do simply by putting positions into the OMITTED OMITTED coordinates to say say,a rectangle 
CM|these techniques accord transforms,and there are three of them 
CM|the first transform is translate,which is a basic movement 
CD|not too different from what you could do by putting an x-y position into,the position of a rectangle,so 
CD|and that is a command for translate and you pass in an OMITTED and a OMITTED which is the position you're moving whatever object too and it's a separate command to whatever command drawing you're doing this 
CD|so you can apply single translate to multiple objects 
CD|and group objects together and move them around and i'll talk a little bit more in detail about how you do that 
CD|and the basic premise to translate an OMITTED and a OMITTED which gives you the position for which you'll translate 
CD|so very similar to what we've done before 
CM|the second one is a scale that's getting things bigger and smaller and that just basically takes a number that is how much of scaling apply 
CD|if that number's one you're not scaling it at all 
CD|if it's less than one it's getting smaller 
CD|if it's more than one it's getting bigger 
CD|one quite useful thing about scale is you can also give it two parameters which means you can scale separately about the OMITTED and the y. so,you can make something wider while making it sort of the same time,having high OMITTED scale and a small OMITTED scale 
CD|so the rotate command is used to spin objects around 
CD|and it takes an angle as its parameter 
CD|so that's how much you want to spin it by 
CD|the normal way we talk about angles is in degrees,NUMBER degrees 
CD|but in computer programming we often work with another way of dealing with angles called radians 
CD|now the units we shall explain in a minute and you have to pass in that value and radiance through a take command 
CD|if you don't want to get involved in radians,there's a very simple command radians,that takes an angle in degrees and converts it to radians 
CD|so i can just put radians NUMBER degrees,and it will do it all for me 
CD|but if you want to know what radians are,this is it 
CD|so radians work in terms of a circle 
CD|and we can think of an angle as cutting out a chunk of a circle 
CD|so,like a,a,a slice of the pie 
CD|now,if we make the circle of radius one 
CD|so,each of these two straight edges is linked one 
CD|then we can measure the angle by taking the length of the arc,along the way just to be certain,so that's how much of the edge of the circle is being cut out by my angle 
CD|and that is a perfectly good measure of,of,of angles,and that's what's called radians 
CD|a few things you need to know 
AP|it's useful to know particular angles in radians,if you ever use them 
CD|the,NUMBER degrees is the entire circumference of the circle,and if you remember from school maths and the circumference of a circle is two pi times the radius 
CD|because the radius is,the arc length of NUMBER degrees is two pi 
CD|NUMBER degrees is half that,pi 
CD|and NUMBER degrees is pi divided by two 
AP|so that,that's a useful way 
AP|thinking about,angles,you can use,put values in terms of pi directly into the rotate command 
AP|but if you're not,if you don't want to get involved in that,you can also the radians command i just showed you to convert that to degrees 
CD|so what are transforms doing 
NL|i said 
CD|that transforms can apply to multiple objects and they're independent of the objects 
CD|but how does a transform know to actually move an object,if it's a separate command from do,doing so,drawing a rectangle or an ellipse 
CD|well what a transform does is in a way not move just the object,but move the entire coordinate system 
CD|sort of 
NL|the,the screen 
CD|what does that mean 
CD|well i taught,told you a couple weeks ago about how we can represent any point on screen by an OMITTED and a y. how we do that is that we need to know which direction is OMITTED and which direction is OMITTED and that's normally horizontal and vertical 
CD|we can change that 
CD|but also,we need a starting point,we need to know where,x and OMITTED are and normally,that is top left of the screen 
CD|but what a translation does,is move that,so that anything after the translate 
CD|the zero-zero point 
CD|if i do translate NUMBER,i move my zero-zero point to NUMBER so,if i draw an ellipse at point say,NUMBER,if i've done a transform on that,then that's NUMBER,NUMBER,relative to the new zero,zero points 
CD|so if i've transformed my NUMBER NUMBER,it's NUMBER,NUMBER relative to NUMBER,NUMBER which is NUMBER plus NUMBER,NUMBER,NUMBER plus NUMBER,NUMBER,relative 
CD|to the top left of the screen 
CD|so i'm drawing,changing the way you draw everything 
CD|it changes the meaning of the numbers you're putting into your rect command and direct command.and what that means is that if you draw both an ellipse and a rectangle they're both affect the same way 
CD|so you can draw as many shapes as you like 
AP|you can draw really complicated drawings,and then put a translate in front of it,and they'll all move together 
CD|exactly the same thing with scale,but this time,rather than changing the NUMBER point,you're changing how much one unit of OMITTED or one unit of OMITTED means,so if you scale up by two,each one unit you leave in OMITTED counts for double 
CD|so each time you move one in x,you're moving two in the original screen used 
CD|and finally the rotation,what that does is it actually what takes the OMITTED and OMITTED axis 
CD|so,it changes the direction of OMITTED and the direction of y. so,they're pointing in different directions 
CD|so,if i've done this translation you're seeing on,rotation you're seeing on the screen then when i move across an OMITTED i'm no longer moving just horizontal and moving diagonal down the screen 
CD|so these transforms are very powerful because they give you new ways of deforming and changing shapes 
CD|but also because they can apply universally to multiple shapes 
NL|music 
NL|music 
NL|sound 
NL|music 
NL|hello 
SM|today in this lesson,i'm going to show you how to create some simple sound effects for,for a collision-based game that we're going to develop later in the lessons this week 
SM|and i'm then going to show you how to import those into your,your project quickly which,which is revision,you've already seen how to do that,but will just do it do the workflow again,just to show you that 
SM|i now want you to get really creative with these sound effects 
SM|you know collisions are great fun to make 
SM|i am just going to demonstrate some quick examples of how to do that but i want you to go for make your own sounds and once we got those collision sound effects into the application,what we going to do is figure out how to trigger them 
SM|but not just play them as they are,we want to play them with a bit more a bit of dynamic range on them 
SM|so what we'll do is,is parameterize the playback,so that depending on the number that comes in they might be played back in a different way 
CM|so let's make some sound effects 
CD|so i've already loaded up audacity which is a simple open-source 
CD|audio editor and i'm just going to record straight into this,and my laptop mic 
CD|of course you could record with much higher quality microphones if you like,and you'll get a better sound,but this will do just for demonstration purposes 
CD|so,i hit record,and then i'm going to make my sound effects 
CD|music okay so i've now recorded a few sound effects lets just listen to those they're not quite healthy on the wave form display 
CD|sound okay there fine 
NL|i quite like that 
NL|that's a good one 
NL|that's a quite nice one 
NL|and 
CD|sound there's one 
CD|so i'm going to take these uh,sound these three sounds and use these 
CD|okay,so,first of all,i'll do,i'll convert to mono 
CD|so,it's track,stereo track to mono 
CD|okay and then i will trim them down 
CD|so,it's good if you want to,if you want to,cause they're sound effects,you want them to trigger very accurately 
CD|so,it's best if you trim them right down 
CD|okay,so,let's get the whole thing 
CD|that'll do 
CD|copy that,paste it into a new one,then export and i'm going to put it into,i'm going to create a folder sound effects 
CD|and this one's going to be ping one dot wav 
NL|okay 
CD|sound close that 
CD|then i've got the next ping 
CD|zoom in 
CD|make sure we've got a nice trim on it so that it's right up against the start the sound 
CD|and you can even duck into the sound a bit because they're sound effects,they're a little bit of a click 
CD|it's not too much of a problem 
CD|so,edit,i can actually export directly from my selection 
NL|ping2.wav 
CD|sound then i'm going to get inaudible 
CD|what have i got here 
CD|i'm just going to use this rumble sound here noise 
CD|okay and export that file,export selection and rumble 
NL|don't laugh 
NL|okay 
CD|get rid of that 
CD|now i'm going to import these into my sketch 
CD|so my s-,i need to find the data folder for my sketch and it's called android sound effects 
CD|there's the data folder 
CD|i've put all these into this folder called fx,so i'll copy those 
CD|paste them into there 
CD|so i've got ping1,ping2 and rumble 
CD|you m-,yeah,remember that all the files that you put in the data folder will be included in your sketch 
CD|so you might want to just trim it down to just the ones that you need 
CD|so let's just get rid of the ones we don't need 
CD|alright so we just got ping1,ping2 and rumble 
CD|so we've got all our files they're all ready to go just need to import,need to load them up so i'm going to have three players 
CD|play,you might because they're sound effects you might want to call them call the players something more sensible like,that relates to the sound they might make 
CD|so i've got ping one ping two and rumble,okay 
CD|that,that will make it easier to read the codes,know which one you're triggering 
NL|okay 
CD|now,so then i load them in 
CD|ping one 
CD|ping,then rumble 
CD|i wouldn't unknown here these sounds playing on my phone 
CD|that's why i'm talking so fast 
CD|so rumble,ping ping NUMBER so what i'll do quickly is i'll just test them so i'll do 
CD|let's just do a quick test to,to listen to the sounds 
CD|so,if the mouse,when the mouse is pressed 
CD|if mousex sound is greater than uh,sound well,let's just trigger them,actually,one by one 
CD|so ping sound ping1.play,sound ping2.play,sound and rumble.play,just to make sure there's no problems there 
NL|okay 
CD|so we've got all,we've loaded up the sounds,and we are playing like that 
CD|now,because they're sound effects,i don't want them to loop 
CD|so i'm just going to tell them not to loop 
CD|ping one set looping,so that's false 
NL|okay 
CD|now do that to the other two as well 
CD|ping two set looping false 
CD|rumble 
NL|right 
CD|that's saved 
CD|now i'm ready to run it on the device,so let's just tap the screen to wake it up and we hit play 
CD|if i don't have any syntax errors they'll build that app and push it onto the phone and hopefully when i tap the mouse button i should hear all three sounds playing at the same time 
CD|sound there they are 
CD|that's my sounds 
NL|now 
CD|now,as i said earlier,i'm going to parametrize these sounds 
CD|so i don't want them to be the same sound every time i play them 
CD|so i won't at,to,to set up,a perimeter i see 
CD|so i'll create a new function,could play sound 
CD|and,so,the,it's going to take an integer which is what sound i want to play and,it's going to take another integer,which is that's where i float,which is going to be the speed 
CD|when in fact i can just randomly generate the speed 
CD|so if sound equals,ping dot play 
CD|then i'll do a random number 
CD|random between NUMBER and NUMBER so that will play sorry 
CD|speed and then ping dot play 
CD|okay,so it sets the speed to a random number between NUMBER and NUMBER and it triggers play 
CD|and so i'm just going to copy that block and,and activated for the other sound 
CD|so if they,if they pass it at number,then we play ping two 
CD|if we pass a number,we play rumble 
CD|rumble 
NL|all right 
CD|so now,i'm going to just say h,if the mouse is pressed,play sound 
CD|and i pass in,again i'm going to do it random,choose at random which sound i want to play 
CD|so,it's going to be in the range,one,two,three 
NL|okay 
CD|and i'm going to 
CD|cast that to an integer,because random normally gives you values which have floating points 
NL|right,so,what have i done 
CD|i've got my three sounds 
CD|they're not,they're not looping 
CD|and when i,that's what we call one shot,as well as loop,or one shot is when it plays once 
CD|call play sound when they press the mouse and choose a random sound 
CD|and then actually i'm going to put that up to four,so that it can potentially go up to three,because it will round it down 
CD|and then finally i'm going to trigger the sound and depending which id comes in i'll choose which sound 
CD|to play 
CD|and i'm setting the speed on the sound up to random 
CD|so every time i tap it should show a different sound rather than parameters 
CD|ok. so now,i'm now ready to run my code on the phone 
CD|now notice i had a little error there which i put an OMITTED instead of an i. so i'll just change that 
CD|so hopefully it should be ready to go 
CD|okay,so again,we get the same error,run again 
CD|that's pushing onto the phone now 
CD|sound there's more thing i might add to that,which is i'm going to cue the sound so that they go back to the start before playing 
CD|so,cue it back to,that rewind it 
CD|that's ready to play ping2.cue 
CD|sound to note and ping3.cue to p,sorry it's not called ping3,it's called rumble 
CD|rumble cue to note 
CD|so that rewind the sound before i trigger it 
CD|so let's just run that on,on the phone and that's our last step 
CD|blank_audio sound music 
SM|okay,so that's a little bit of musique concrete for you at the end there 
SM|have fun playing with this 
SM|you can obviously make all,all kinds of interesting sounds yourself 
SM|and you might think of other ways of maybe hooking,hooking interactivity into that function 
SM|so you might add another variable which controls the pitch so maybe it could be pitched in different ways depending on where the mouse is or the accelerometer data 
SM|and you can really make a fun little instrument which,you know,depending on what you're doing with the phone it can trigger all different samples with different dynamics 
SM|so do play around with that one and we need to make a music inaudible instrument with that 
SM|what we're going to do based on that is,is develop a,set of dynamic sound effect for a game 
NL|music 
NL|sound 
NL|okay 
NL|so as you know,we were just talking to martin,and he was telling us a bit about rjdj 
NL|we've heard from marko 
SM|marko's been telling us about how to use sliders 
SM|and we've also done some stuff last week on sliders and building them and stuff 
SM|and,you know,matt's been doing this stuff with you about,playing back sounds in rhythm to a sequence 
SM|so,what i'm doing is i'm going to show you an application that we developed,i just briefly touched upon with martin 
SM|i'm just going to i'm going to set it running again for you 
SM|but i want you to just kind of pay attention to the little things i do 
SM|as i'm doing them,i'm going to briefly explain what they are,then i'm going to go through the whole application in detail 
SM|explain how it works 
SM|then we're going to discuss it with me and marco and matt at the end just so that we can make sure we've got everything covered 
SM|this is like a fully fledged OMITTED application 
SM|it's sonically quite advanced 
SM|it's just bare minimum on the user interface,it just has the interaction,so you could use quite a lot of the techniques that are in this to make your own thing 
SM|but let's just see what it sounds like again and see where we,we are with it 
NL|OMITTED okay,here we are 
EX|so you can hear we've got a drum machine 
EX|let's just turn the two synths down,so we can hear these these,these drums here 
EX|we've got a bass drum,we got a snare drum and you can see,i'm pointing at a snare drum hit 
CD|OMITTED that one and that one 
CD|and there's a blue line that tracks across telling us where in a drum beat we are 
CD|the second line in the drum,in the drum machine is this 
NL|you hear that 
CD|that's the OMITTED the clap 
CD|so the claps going on the in between beats in between the base and the snares 
CD|you got a classic techno feel 
CD|and as matt was saying all of the sounds we're using come straight from your standard kind of NUMBER or NUMBER drum machine and thereof OMITTED so,what else can it do 
CD|well,we've got two synthesizers 
CD|we can play these OMITTED synthesizers individually,and we can vary a whole range of parameters for them 
CD|they're fully fledged synthesizers 
CD|we can write waveforms for them 
CD|if you're interested in synthesis and you know a little about it i think you'll find this one interesting 
CD|but if you don't,it's still really usable and i need you to get your head around it 
CD|we can write waveforms,we can add a filter,we can change the quality of the filter 
CD|now let's just have a listen to the filters,i'm want to turn one of them up 
CD|OMITTED so here's one of the synths 
CD|i'm going to change the filter 
CD|OMITTED OMITTED i've also got this resonance 
CD|and this filter out 
AP|we could also change the release and the attack 
CD|so we're giving it an envelope 
CD|and it creates that kind of acid techno feel 
CD|if i change the attack actually with something like this 
CD|OMITTED just makes it quieter 
CD|we can transpose any of the channels 
CD|so i'll change the key of the entire sequence 
CD|and then again 
CD|and then if i want OMITTED 
CD|you just go back to where you were,more or less 
CD|and also,i can add some delay 
CD|OMITTED and i've got a second one here as well 
CD|now,the beat that i'm altering at the moment is the actual OMITTED OMITTED sequence of notes that it plays 
CD|now,i can select a sequence of high notes,like this,or a sequence of low notes 
EX|and just like in the example that matt was showing you OMITTED OMITTED drum machine 
EX|there's NUMBER steps,so i can change two of the notes 
NL|there you go 
CD|i've got the fill trap as well and i'll do this stuff 
NL|that's quite pleasant 
CD|we have resonance 
CD|OMITTED that's distorting quite a lot 
CD|i don't really mind 
CD|i can add some more delay 
CD|OMITTED add a few claps 
CD|OMITTED and some more snares 
CD|maybe a cymbal 
CD|OMITTED you got ta take,so that's a basic OMITTED machine 
CD|OMITTED it's a common thing that you can easily sell on the upstart for,i don't know,actually OMITTED apps 
NL|let's talk about this for a minute 
CD|OMITTED apps go for quite a lot more money than other kind of apps 
CD|you can sell an app like this for much more than three quid on the OMITTED on the ios app store 
CD|you can probably sell it for five to six pounds or more 
CD|or if you're in america,that would be dollars 
CD|i imagine that like or out of OMITTED,what is,what are pounds and dollars anyway 
NL|who cares 
CD|anyway,they're much more expensive and they're much more specialist but they're still they're still really useful 
CD|and i think something like this,i mean as something really famous,well,there's a really famous unknown app which is built on,based on a and old-fashioned tv r3 synthesizer and a nice OMITTED drum machine in which still sells in it's droves 
CD|and all the people do is complain about how unusable it is 
CD|so i'm not that worried that ours is knocked out quite quickly 
AP|it is knocked out quite quickly,but it is powerful,and you can build on it to do more interesting things 
CD|and you could use some of the other stuff we've done to play some loops 
CD|by there are some complexities to this and i want to show that you know,what they are,so i'm going to quit this temporarily and just go back to the basic version before i continue with that 
CD|just see you can see in the most simple possible way what it is that we're doing 
CD|so you go all this stuff for free as i was describing before 
CD|as i've said every week,you know,you can just go to your lessons 
SM|but this time we're in week six 
SM|week six has got a bunch of small tests in it 
SM|it's got a small drum machine,and t's got this thing called synth test 
SM|so,we're going to have a quick look at this synth test 
CD|just because it's a easier code to look at 
CD|it's got the gooey code in it 
CD|it doesn't have the drum machine it just has one synthesizer 
NL|and yeah 
NL|there you go 
CD|it's just one of the synths 
CD|OMITTED OMITTED now,cough so you can see here it's the same,and it basically allows me to set the pitch,change the filter,change the resonance 
CD|same old same old 
NL|let's have a look at it 
CD|so we start off as we normally start off by declaring a maxim context 
NL|if i can just make this a little bigger so you can see 
CD|so this is what's happening on the audio 
CD|behind it,as,you know when martin was here we were talking about the web audio api 
CD|so,behind this is all web audio 
CD|and the maxim js,the maxim js file,which is here has got all of this stuff in the background 
AP|now,if you're interested in this sort of stuff,and you want to learn more about how we built max and js 
AP|you can always post questions on the forums 
CD|and the tas will manage those and any really important questions where we feel we've got some material we can really help you with we can point you towards a good answer 
AP|and also there are lots of other places like OMITTED dsp.com and other sites like that can help you understand what it is that's gone into building this 
CD|but you don't really need to if you just want to get started 
CD|we just have to have a context,and maxim provides the context 
CD|also,we've got an audio file player 
CD|actually,we're not using that here,so that's not going to matter 
CD|instead of using the audio file player,which is what we've been using most of the time,we're using a synth 
CD|so,maxim can have a synth and i've called this synth waveform 
CD|now,the thing about a synth that makes it different to an audio file player is you can write in an array of values between minus and NUMBER and that will define the texture of the sound which you're creating 
CD|now,most synthesizers have a number of different wave forms 
CD|and there's lot of different approaches to creating wave forms 
CD|and in one of the other examples that we've got in this folder there's a really easy way of gyrating wave forms but essentially,you're just writing numbers between minus and into an array which is of a particular length 
CD|so we'll be talking about how to do that in a moment 
CD|so we have our synth 
CM|it's called waveform,and we're writing a waveform into it,which is what makes the sound 
CD|we've got a play head 
CD|now,the play head,as matt was describing,is,it's literally the thing which tells us how many,how many frames there have been 
CD|and we use that to work out whether we should trigger a new beat 
NL|okay 
CM|so we've also got,this array called notes,which is an integer array 
CD|and it holds midi notes 
CD|if you know about OMITTED,then you'll know what midi is 
CD|if you don't really know about OMITTED and OMITTED technology,you've probably never heard of it 
CD|it's called OMITTED instrument digital interface 
CD|it's a specification 
CD|for a numbering system that relates to OMITTEDal notes and OMITTEDal information 
CD|so these midi notes normally what they represent are all the keys on the keyboard 
CD|they're NUMBER numbers,which means that they go for a range of to NUMBER there's NUMBER independent values,the lower,the number,the lower,the note 
CD|so,i'm right down the bottom end of the piano,as you can see 
CD|with all these numbers,zero,zero,zero 
CD|NUMBER,NUMBER,NUMBER,whatever 
NL|okay 
CD|so,then we've got some float variables 
CD|fc,which is filter cutoff,resonance,attack,and release 
CD|and these are variables which i'm using to control the filter cutoff resonance,attack and release of my synth 
CD|this is my wave table 
NL|excuse me 
NL|this is my wave table 
CD|its an array and of float variables 
CD|like i said its going to be between minus one and one and its got four five hundred and fourteen elements 
CM|now the reason its got NUMBER elements its kind of complicated but its because of something called interpolate 
AP|very briefly what we need to do when we create that way,when we create a waveform,is we need to make sure that that waveform can playback at various different frequencies 
AP|so its sound is made up of lots and lots of different frequencies and we measure those frequencies in repetitions per second 
AP|or cycles per second,and the measurement value we use for that is hertz 
EX|so for example,if i take a sound,a very small snippet of sound and i repeat it more than NUMBER times a second we actually hear it as a pitched note,because it's repeating so fast 
CD|and that's what we think of,we think of OMITTED 
CD|most people just think about pitched notes 
CD|so,in order to be able to have a,a wav form which can be played back at NUMBER hertz,or at the oth at the other end of the scale NUMBER hertz,which is about the highest,frequency that we can hear in fact,i can't hear NUMBER hertz 
NL|what who'm i tryin to kid 
CD|as you get older,you can't really hear up there 
CD|i probably can hear about NUMBER hertz or,if i'm on a good day,with a good wind 
CD|so,in order to be able to do that,to go between a very low frequency sound and a very high frequency sound,we need to interpolate 
CD|to make the interpolation work,i.e 
CD|to make up the numbers that we need 
CD|because that's what interpolation means 
CD|it means we're making up numbers that aren't there 
CD|what,because we changed the playback rate or the waveform,to make up those numbers,we need some spare numbers on the end 
CM|so it's,normally you have a NUMBER point buffer,it's called a NUMBER point buffer because it's,it's,that's the number of points that you run through to make the sound 
CD|but where you've got a couple of extra points on the end,and we're using those for interpolation 
CD|so that's the reason why it's NUMBER okay,so there are out setup options sorry,they're not our setup options,they,they are basically our declarations 
CD|we are declaring all the objects that we need in order to make this program work 
CD|and then what i'm doing is i'm going into the setup function 
CD|i'm just declaring a size 
CD|i'm creating a,i'm calling new on my maxim object,and that means i'm setting up my context 
CD|and then i've gone cough done,done the same thing to my wave form objects 
CD|i'm creating new synth 
CD|so the synth is got a,a waveform in it,which is waiting to be populated with something with numbers 
CD|and it's also got all the other stuff that we need delays,filters and that kind of malarkey 
CD|then we're setting up my sliders 
CD|this is the same as the way marko showed you to do his 
CD|i've got this,which is delayed time that's dt,dg,which is delayed amount or delayed game 
CD|a,which is attack 
CD|r,which is released 
CD|f,which is the filter cut off 
CD|and q,which is the filter q,which is the resonance,which is what makes it sound,sort of acidy 
CD|so,there are the sliders that we need 
CD|and then i have another multi-slider,which i'm using to enter the notes 
CD|so you can see here,mark has explained to you how the multi-slider works 
CD|seq is also,that's a sequence 
CD|basically it takes an array 
CD|it takes the array notes 
CD|and then it fills that array whenever i interact with the multislider 
NL|okay 
CD|so i then,i'm loading a file which i'm not using 
CD|so actually sound we don't need that 
CD|frame rate is NUMBER the frame rate is roughly the speed of the tick rate 
NL|just like matt explained 
EX|but instead of running through those ticks,and using them to trigger drum sounds,although we do that in the more advanced example 
EX|in this example,we're just going to use it to select a note from our note array and use it to set a frequency for our waveform generator 
NL|okay 
NL|so,before we do any of that,we're still in setup 
CD|and you see the section here that i'm highlighting 
CD|this is me generating a waveform 
CD|so we know that our buffer is NUMBER points long so 
AP|we want to fill the array,which is NUMBER elements long with a bunch of numbers between minus one and one 
CD|cough now,i'm going for a sorptive wave here so,i actually want the waveform to be NUMBER points,as i've explained,but with a couple of extra points for good measure 
CD|so,what i'm doing is i'm taking the value,i,and i'm dividing it by NUMBER to make a value between zero and one 
CD|and then i'm subtracting NUMBER to make a value between negative NUMBER and NUMBER now what actually happens when i do that is i,i make a ramp,you know,it's as if,if you imagine that's my array,the ramp goes up like this,so it's kind of an inverted sawtooth wave 
CD|and as it repeats,it drops down,goes back to the beginning,goes up again,and this produces a nice harmonic spectrum that we can filter 
CD|it's a very simple waveform,but it creates all these harmonics and,it pretty much creates every harmonic that we need 
CD|and then,we filter those harmonics out,and add the resonance for that acid sound 
CD|but the values,the actual amplitude is only for minus,naught.5 to NUMBER that's absolutely fine 
CD|it's absolutely fine 
CD|we could double it,but then we'd get more distortion 
CD|and you can hear that you know i'd have to do more work balancing this out so it's just to keep the sound within a reaonable range 
CD|so then i make the,the waveform and then i add it to my synth which is called ironically enough or confusingly enough waveform 
CD|so i can set the wave table size i could set it to any amount i like that we've already discussed it's going to be NUMBER and then i load my wave table 
NL|in 
CD|wave form load wave table wave table 
CD|and then it's wave form dot play 
CD|so,that means i've initialized my synthesiser 
CD|i've loaded a wave form 
CD|i can change that at any time,any way that i like 
CD|so you could have NUMBER different wave forms 
CD|you could have really long wave forms 
AP|you could take a picture of your face,analyze all the pixels,and then use that as a the waveform it's entirely up to you it's just an array of numbers 
CD|so you know be creative and then i'm pressing play what that really means is it's on 
NL|so ready to rock 
CD|in the door method we're doing the same stuff that marco explained 
CD|we are cough setting up our sliders then we get our slider information in the draw method 
CD|so,if OMITTED get,basically if we get something from the frequency slider,we set the filter that belongs to the wave form object 
CD|and if we get delay time,then we set the delay time 
CD|yes unless i'm munging i'm dividing it by fifty just to get it into a decent range 
CD|the same thing to delay gang get and to the huge get 
CD|a get and OMITTED get 
CD|lots of good gets 
CD|because we are in the draw method that's a good place to set the display 
CD|so we display everything 
CD|and then we do the business end,which is ticking through the array,which has the notes in,and using that to set the frequencies 
CD|so,playhead,every time we enter the draw loop,we iterate the playhead 
CD|so the tick rate is different to the rate of actual playback 
CD|the tick rate is quite fast,it's NUMBER frames a second 
CD|we could have NUMBER or NUMBER it can be quite fast 
CD|and a tick rate's normally much much higher than the rate of the rhythm 
CD|so what i've done is i've just said,okay 
CD|well,every four ticks 
CD|we'll say that's a semi quaver,which is a. small chunk of a beat,it's a quarter of a beat,so OMITTED play had modular four equals equals zero just the same way matthews already showed you 
CD|wave form.ramp,we ramped a cough knot.5 which is going to be our volume given the attack time... yet 
CD|and what that does is it means that,if the attack time's long,it'll be a slow ramp 
CD|and if the attack time,attack time is fast,it will be a short ramp 
CD|and then,following a ramp,we set the frequency 
CD|wave form set frequency 
CD|now,we're using this thing,OMITTED 
CD|now what this does is it takes midi notes and turns it into frequency information 
CD|and this is just looking up an array,which is a maxim OMITTED OMITTED here 
CD|so it's saying okay,if i get a,a number zero,that's going to be a midi note of zero 
CD|if i get a number one,a midi note of one,that's going to be a frequency of NUMBER,which we'll never hear 
CD|but i generated this with an algorithm 
CD|and i just pasted it in,because it saves you having to worry about it 
NL|okay 
CD|then we access notes 
CD|we get the play head modulo NUMBER sorry,play head divided by,modulo NUMBER that's basically saying,okay 
CD|we've had ticks,that's fine 
CD|but this is the note we actually want 
CD|and then we're adding NUMBER,which is a constant,which is just,so if it was zero,then it would actually be NUMBER so finally what we do is the next ti,tick we release 
CD|so immediately we release before we then retriever 
CD|so if player head module OMITTED equals equals one we trigger the release,and then we're off 
CD|there are better ways of doing this,but not using processing 
CD|okay,so as you can see,we've triggered our sound,we've set the note for this particular tick and we've released it 
CD|for the following notes,the following tig 
CD|so the next thing to do is to sort out the interaction 
CD|when mouse pressed,what we do is,we just get the user interface stuff,and that handles all our mouse pressed gui 
CD|dt mouse pressed,dt mouse pressed,blah 
CD|same thing in mouse drags so that's useful for mouse devices 
CD|and in mouse release we we just check one thing 
CD|we check to see if the notes have changed in the array that holds all the notes 
CD|and if they have,then we just populate the sequence sorry,we populate the notes array with the new sequence that's in our sequence similty slider 
CD|and that's what this does,so notes i,which is the current note from to NUMBER,so there's NUMBER different steps,we flaw this value basically 
CD|so we get the sequencing value 
CD|and then there's a bit of unknown to make sure that it's the right value and we stick it in there,make,we basically convert it from the slider value to a mini value 
AP|we could have used the map function to do that,which would have been easier to read 
AP|but instead of using map,i'm just doing it with standard mathematical operators 
NL|right 
CD|now that actually is that,is that first test 
NL|so let's just go back and have a look 
NL|yeah,that's nice 
CD|and here's the delay time again 
CD|sound i wanted to just talk briefly about the filter because the filter is quite is,i don't know,it's nice to think about what the filter actually does 
CD|i've already explained that we have a wave form and it goes at a certain rate 
CD|it give us lots of harmonics 
CM|and then we use the filter to block them 
CD|but how that process occurs is kind of interesting 
CD|basically what the filter does sound is it,it lets everything through sound 
CD|let's just get a single note sound 
CD|it lets everything through when it's wide open 
CD|OMITTED and as we drop it,what it's actually doing OMITTED is this preventing the weight form from moving very quickly 
CD|the filter basically is averaging smoothing out the weight form/g 
CD|the weight form remember is like that 
CD|and it's going really really fast 
CD|lets say it's going a thousand times a second 
CD|and it's producing all of these harmonics which are 
CD|two thousand,three thousand,four thousand,five thousand,six thousand,seven thousand,eight thousand,et cetera,times per second,with an altitude drop-off 
CD|and that's making a very bright sound 
CD|that's making that buzz,that nice,buzzing sound that we,we like 
CD|well,i'm assuming you like that 
CD|if you don't like that OMITTED 
CD|that then tough,'cuz that's the sound it makes 
CD|but the thing is that when we repeat it over and over and over again.,we're,actually,when we get to the end of the route,and we drop down again 
CD|that's actually quite a fast move 
CD|and that's what creates all the harmonics 
CD|if we smooth that,it prevents the harmonics from being generated,and it smoothes filters out that sound,so what we're actually doing is we're averaging the signal as it goes up,kind of 
CD|and that's fine because it's a slow increase,but then when we get that sudden drop,we smooth it in the same way we might blur an image 
CD|and that's more or less how we turn high frequencies down 
CD|so,it's really simple and if you're interested in that process 
CD|there's a number of filters that come bundled with the course air package that we've put together for you 
CD|and they run nicely on android as well,so you want to have a look at those,they're in the android package and there's or of them 
CD|and you can actually see the algorithms if you're interested,you can have a look at them 
CD|alright,so that's how the synthesiser works 
EX|now,finally,what i want to do is go back to our,a more complex example that combines all the bits together and just talk about how that tinal thing wor,works 
CD|just a few little things that make it a bit more useable 
EX|so i'm going to go back to our OMITTED machine example which is here and i'm going to run it and what's going to happen is 
CD|OMITTED it started up straight away cough and it's distorting beautifully really not bad 
CD|there's very little i have to do now all of it OMITTED make OMITTED 
CD|let's have some bass drums 
CD|i do like a bit of bass drum,can you hear the bass drum 
CD|you can just about,let me knock this one out 
NL|okay,that's good 
CD|it's quite hard to use that 
CD|you could have a nicer keyboard setting or something like that 
CD|OMITTED so let's have a look at what we've done to put the main application together 
CD|so,we've got two synthesizers 
CD|now there's a clever way to do this and there's a stupid way of doing this and just to make your life easier,i've done it the stupid way 
CD|instead of creating an object or a class which is a synth although i've already done that behind the scenes anyway 
CD|but instead of doing that,just so it's clear and you can see how it's done,i've just duplicated all of the codes 
CD|there was actually two sets 
CD|a brighter,cleverer,more engineering savvy method is to make another class that encapsulates all of the sliders 
CD|and then just to create one of those objects and to say where you want where to put it,so that's something we should have a look at 
EX|there's a good example in all of the current examples that we've given you,there are good examples of classes,and you should have a look at that those 
CD|but i didn't want to do that and find that some of you didn't really understand that whole process 
CD|so i've just gone through and i've duplicated all of that code 
CD|so basic stuff is i thought well i want it to look slightly better than it currently looks so i've created a brushed metal background 
CD|i've positioned all the sliders on the screen and then i've created this brushed metal background and you see that this is a good tip 
CD|if you can avoid havong to draw non-animated information 
CD|via algorithmic methods,i.e 
CD|if you can avoid having to apply the interface graphics,do avoid it 
CD|make a photoshop image that has your interface 
CD|so i've got a slightly embossed area here and here which these are the panels that hold the information and if i spent more time on that i can make them look really nice and i've fake knobs and switches that i copied and pasted of the internet 
CD|or i could photograph my something from my set connection and then put those on them instead 
CD|but i guess what i'm trying to say is you can do an awful lot by preparing your images in photoshop just like we did last week with the instaspan for the overlay 
NL|it's the same sort of thing 
CD|put the effort in there if it's not going to animate 
CD|put the effort in in photoshop,make it look sweet,and then draw it 
CD|i must admit i've not really put the effort in here,but there's a back,there's a basic starting point 
CD|you can see where the panels are they're sort of lined up 
CD|another thing you can do is you can put your interactive graphic elements onto your screen so that you do that problematically then you screenshot it the right size and move that into your photoshop application and then you can draw on top of it 
CD|i guess it's what i'm saying is do the work in photoshop is you're not going to have to animate it make it look nice there 
CD|we did exactly did the same thing with angry droids as well we just do a bit of support work there 
CD|so that's the basic idea,and you can get away with a lot there 
CD|also it's nice to add custom graphics to your sliders,and you can do that too 
NL|so,we've done that 
CD|and then we've loaded it in here 
CD|and then we've done the same thing,exact same thing that matt did for the drum track 
CD|we created four boolean arrays 
CD|track and NUMBER these are for our four drum sounds that were in our drum machine,which is a kick,a snare,a handclap,and a cymbal 
CD|ideally,i'd have a hi hat 
CD|there is a hi hat knocking around in one of the,folders on the coursera pack that you've got 
CD|and you can see here,exactly as i said,i just duplicated everything 
CD|so there's the floats that you've already seen 
CD|except we've added another function,filter attack,which is what gives it that sort of tb NUMBER baseline sound 
NL|laugh allegedly 
CD|and then we've got,some transpose functions as well,which allows us to move it around 
CD|we've got a second wave table for the second object 
CD|you can see we've got two syns waveform and waveform two 
CD|and now these are all basically everything that has a two after it is for the second waveform 
CD|we create a bunch of secondary slide and sliders and multi-sliders to hold all the separate information and then we load in some samples 
CD|and then we set up a sliders,so we have twice as many sliders 
CD|but they have slightly different numbers in to re,to represent the fact that they're going to be drawn somewhere else 
CD|now as i said,you would draw them,screen shot it,import it into photoshop,do your background,and then just load the background 
CD|now so we load the background where do i load the background 
NL|into the bottom of this 
EX|that's the wavetable,exactly the same way as i described in the first example 
CD|okay the background is loaded,there it is,brushed metal,that's my brushed metal background 
CD|and then here,what i do is i set up the drum tracks in the same way that matt's already explained 
CD|i just create these boolean arrays,they're either true or false 
CD|and i set them all to false,so they're all off 
CD|okay,and then we get all the information in exactly the same way,as we did before 
CD|and then we use the same playhead information to get the frequency content for both synthesizers 
CD|and then we use another variable,current b,so we could use playhead if we're using current OMITTED too 
CD|it doesn't really matter,it's the same 
AP|to find out whether it's if it's true basically,then what we do is cough we play that drum sound back 
CD|the mass press stuff is exactly the same,if you click there it sets it and,you've set it to play 
CD|in both mouse press and mouse drags 
EX|and other than that,it's exactly the same as the two examples you've seen 
EX|the basic synth example,and the drum example 
SM|and that's how you end up with this
CD|OMITTED okay,so we've heard marco explain in more detail how you access lots of different images and arrange them and put them on the screen 
CD|and we've heard OMITTED tell you a lot more detail about how sound is organized,how to get sounds,and how to do things with them 
EX|we've got an example that we've prepared for you,for you to munge around with and play with called dj tube and it's like a really basic example djvj app that you can expand on and develop yourself 
CD|now to start with,before you can really make interesting audio visual apps,you have to have some good graphics 
CD|you can make these yourself,and i'm sure many of you will 
CD|but a lot of you might just want to get started without having to have all that hassle and just be able to drop something in 
EX|you'll find in the example,the dj tube example,there's a sample movie which marco will show you some frames of just a tube train,i want to show you where i got that from and how you prepare it for use in this app 
CD|so normally if i'm bored,i'm looking for images and i don't want to have to pay huge amounts of royalties,i go to the internet archive 
CD|if you've never been to the internet archive,have you ever been on the internet 
CD|i don't know if that is probably the best or one of the best sites on the internet and one of the longest standing 
CD|you can do some cool things on the internet archive 
CD|you can look up websites and see the way they were in NUMBER i don't know if that interests you or not 
CD|i guess it's of limited interest,but you can also get access to a huge array of copyright-free video 
CD|and that's great,so we're going to start there 
CD|the first thing i want to do is i'm going to type vj loops,which is about as easy as it gets 
CD|you'll see there i've got vj loops,quickly followed by vj loops george bush,although there aren't any george bush vj loops so you'll have to upload your own 
CD|that's the thing about the internet archive,if you do make some cool video,you can always upload it there and it's a nice place for it to be stored and it's a nice way of giving back 
CD|but you should be able to use most of this stuff and you'll see that there are loads and loads and loads of vj loops for you to use 
EX|so for example,here's a bunch of video stuff,and this is mainly,i think people dancing in a club,put through a red filter 
CD|now you could probably do that yourself,or if you're at home and don't happen to be in a club,you can just go to the archive 
CD|because there's shed loads of stuff there that you can try and use 
CD|once you've got a video,you can manipulate it,you can treat it using imovie,or adobe premier,or any other kind of editing software that you like 
CD|a lot of people use final cut pro 
CD|we're not going to show you any of that stuff today 
NL|it's up to you 
AP|what you really need to be able to do before you can make it work inside a mobile app is you need to be able to cut it into individual frames 
CD|why,why is that 
NL|well,i'll tell you why 
CD|that's because most mobile devices,when they play back video,that's fine,they've got no problem playing back video 
CD|the problem they have is in allowing you to manipulate that video effectively,i.e.,change the speed of playback or skip from one frame to another 
CD|these are the sorts of things that when you're making any kind of multimedia app,you want to be able to do with video 
CD|it's not enough just to be able to play a video file back 
CD|that's really simple 
CD|what we want to show you how to do is how to make something which you can edit in real time,in time to OMITTED,that's what our dj tube app does 
CD|so we need to split it into individual frames 
CD|and we've written a piece of software for you to allow you to do that 
CD|so you download a video and then when you've downloaded the video,you can run a piece of software that we've prepared for you 
CD|i'm going to just locate it now 
CD|it will be in your lesson document,so go to your lesson documents 
NL|i'm just going there now 
CD|bear with me while i look slightly mad 
NL|here we are 
CD|it's in coursera lessons lesson2 week2 and it's called imagesaver 
CD|now,imagesaver you might find it's actually got a bunch of frames in it 
CD|so i'm going to remove those frames,and i'm going to launch it,and it's a processing sketch 
CD|it asks you for a quicktime movie 
CD|and it creates a series of individual frames,so,i've got here a movie which is,i think we recorded straight from the internet 
NL|let me just see if i can find it 
NL|oh yeah,here we go 
CD|so here it is,this one's from the internet archive 
CD|and it runs through the video and makes it into a series of individual frames,like so 
CD|when that's done,click stop and go to the data directory 
CD|actually,you just go to the directory where your imagesaver application is,the one i just showed you about,and you'll see we've got movie0,movie1,movie2,movie3,movie4,movie5 
CD|now,all film is made up of individual frames as you probably know 
CD|and each frame contains the same scene often,but with some elements of the scene moved 
CD|so by stringing these frames together,we can control that motion 
CD|now,i'm going to copy this stuff into my directory here 
CD|i've got djtube,here it is,my data folder animation_data,and i'm going to paste it in 
CD|there it is,neatly pasted in 
CD|and when i run this,let's close the imagesaver,you'll see,i've got exactly the same code that marco has been telling us about 
CD|animation_data,movie is the name of the actual movie,and then we've got a number 
CD|we know there's a NUMBER images because i know that's the biggest number on any of those images 
CD|let's just check that's true 
CD|yeah,NUMBER,so that's the last image in the sequence,and we load it in 
CD|now,if we run that,you can see it here 
CD|i'm just going to show you how that works on the ipad because i think i have it prepared 
NL|here we go 
CD|let's have some audio and when i start,it plays it back 
CD|OMITTED and i can also change it 
CD|OMITTED and you'll notice that when i change the speed of the app,it's not just the image that slows down,it's the audio that slows down 
CD|so it'll synchronizes all those image frames with the audio frames 
CD|and i can also get two loops at once 
CD|OMITTED that's all right 
CD|OMITTED and scratch them 
CD|OMITTED so let's have a look at how that works 
CD|so,actually,before we go on to see how that works,you'll notice there's also this black record 
CD|this record is spinning round and changing speed based on how fast it's playing back 
NL|now i've cheated 
CD|i could do it in two ways 
CD|i could do it by getting one image and rotating it,or i could use the same technique that marco introduced to you,which we've just gone through with our video 
CD|we can make a series of frames of a record deck rotating,and we can just animate them in as a sequence 
CD|so that's what we've done in this case 
CD|if i show you in the data folder,you'll see we've got black-record.png,and you'll notice it's a png 
CD|the main reason it's a png is that we can have a transparency which means that we don't see a square image with a round thing inside it 
CD|it's a png file,a png file,and that means it can have a transparent background 
CD|actually,png files can have transparent insides as well,so you can have holes in them 
EX|we have an example of that just here,i'll show you 
EX|we have a tv 
CD|if i show you the tv image,it's actually transparent on the inside 
CD|so we have the tv in our application,and we place the video behind it,and the tv sits on top of it 
CD|but the black record,we've got a different position 
CD|if i cycle through all of these images,we got a different position for each of the different rotations and we rotate around,and that's how we create the illusion of it moving 
CD|and we update this image based on the speed of playback 
CD|so let's quickly have a look at how we do that 
CD|you can see here,we load those images in,we've loaded all the images from the movie 
CD|we've loaded in the black-record as a sequence of images 
CD|we've loaded in the tv 
CD|they're the only images that we have 
CD|we've loaded in our sounds in the same way that we did with last week's session 
CD|and then we're doing exactly what marcos described to position all the elements on the screen 
CD|and then you'll see that we can change the frame,the current frame,based on the speed,okay 
CD|so every time we go through the draw loop we can add to the currentframe number and multiply by the current speed 
CD|and what that does is it just tries to go from one part of the image sequence to the next part of the image sequence 
CD|but because it's multiplied by the given speed,it can slow it down or speed it up 
CD|i'll look again at that in a bit more detail,but this value currentframe tells us what the current frame should be 
CD|and we use that to access the current record 
CD|okay,so moving on,how do we know when we've actually selected a specific record 
CD|what we want to happen is we want to touch the middle of the record or anywhere around the record and we want it to start playing when we do that 
CD|and then when we touch it again,we want it to stop 
CD|so here's a bit of code that does that 
CD|basically,it's the dist method again and we get the distance from the current mouse position to the center of the record 
CD|and if that's less than the width of the record player,then we basically say it's a hit and we play back the sound 
CD|now there's two of these methods,one for each record deck,and that means that we can independently know whether the user has touched one record or the other and play back the appropriate sound 
CD|and it's all about getting the distance and checking whether it's less than the width 
CD|so what we're basically saying is if the mousex and mousey position are within the range of the entire graphic,then that means the user's pressed the record 
CD|and we have one of these methods for both records as i've said 
CD|i've also got another mouse interaction which is a drag interaction,and this changes the speed adjustment 
CD|so how do we synchronize the two loops 
CD|OMITTED now,they're not actually the same speed 
CD|what they are,are two loops trimmed in the same way that matt was showing you 
CD|so that they have the same number of pauses,the same number of actual pauses,but that doesn't mean they're the same length in time 
CD|they could be entirely different speeds 
CD|so,there's an easy way of synchronizing these two loops together 
CD|one loop acts as the master,and the other acts as the slave 
CD|if we know the length of each loop,we can synchronize the master loop to the slave loop 
CD|so,the speed of the second record player is basically a ratio 
CD|so if it was a one,it would be,the speed ration of one,which means the current speed 
CD|if it's naught NUMBER,it would be a speed ratio of one half,so it's half the speed 
CD|if it's two,it's a speed ratio of twice the speed 
CD|now if we get the length of the second player in milliseconds and we divide it by the length of the first player in milliseconds 
CD|so we take the first loop,we get the length in milliseconds,and we divide it by the length 
CD|sorry,we get the second loop,we get the length of the second loop in milliseconds,and we divide it by the length of the first loop 
CD|then that gives us a ratio,which tells us how fast the second record player should go 
CD|and that's what this is doing here 
CD|player2.speed is player2.getlengthms divided by player1.getlengthms 
CD|and that gives us our actual speed ratio 
CD|so player2's speed is found by dividing it's length by the length of the master loop 
CD|and in this case,player1 is the master loop 
CD|but as i've already described,we can change the speed using the speedadjust variable 
CD|and basically,the mouse and touch interaction changes the multiplier,and you can see there's a bit of code here that handles that 
CD|player1.speed is always going to be equal to the same speed adjustment 
CD|so if i've got my mouse over here,that's the master loop and that's the speed for it 
CD|OMITTED player2's speed is as i've just described,it's the length of player2 divided by the length of player1 multiplied by the speed adjustment 
CD|and then the current frame,which is the frame of the video,is current frame plus one times the speed adjustment and that's what gives us this nice interaction 
CD|OMITTED so they're both really fast and then they're both really slow and the video stays in synch 
CD|OMITTED i think i like it when it's like this the best 
CD|OMITTED out of time and really slow 
NL|sound 
SM|okay,so one of the first things we have to learn how to do is to run applications on mobile devices 
SM|now OMITTED will have already shown you how to run stuff on android,and OMITTED will have shown you how to run stuff off the desktop 
SM|i'm going to show you how you can run the same application,using our code that we've prepared for you,in the download pack which is off,which is from coursera 
SM|so that you can do exactly the same code,write the same code,and have it run on all three devices,specifically on,on ios device 
SM|now,crucially,the way we're doing this as part of this program,is we're running all of the ios-specific code as javascript 
SM|so,when you finish making your application,you press go and it builds a webpage specifically for our ios mobile device 
SM|there's a couple of little tricky things that we need to get right the first time we do it,and i'm going to talk you through those right now 
SM|but firstly,we start with a straightforward sketch 
CM|now,i'm going to use a sketch that we're,we're going to talk about later on in lesson one,called sonic painter 
CD|and this is just a basic i'll sketch 
CD|it also runs on the desktop,and it also runs on android in exactly the same way 
CD|so,i'm going to start by creating a running version on my desktop,so you can see 
CD|just to give you a reminder of how that works 
CD|but we're using javascript 
CD|so,i'm just hovering over with the mouse,over the little bit that says javascript 
CD|when you click in the top right,right-hand corner of the processing ide,you can see it says java,andriod,javascript,experimental 
CD|i don't really know what experimental means 
CD|we're not going to try it out today 
CD|but we're going to try the javascript version 
CD|when you run it,when you press this play icon as mark already shown you,it launches your web browser 
AP|and i think we're recommending you use google chrome for this 
CD|now,you should be able to hear,sound 
CD|and see the app 
CD|and that's the app we're going to look at later on in more detail 
CD|but crucially,what we need to know is what the web address is 
AP|now,before you start,you need to make sure that you're on the same wireless network as your desktop on your ios device 
CD|most people do this all the time 
CD|when you're in your house,you've got one wireless network 
AP|and you connect your computer to that wireless network and you also connect all your devices to the same network 
AP|but you really need to do that,because if you don't do that,development can be a bit tricky to get started with 
NL|okay 
AP|so,i recommend you do that first 
AP|if you haven't done that,do it now 
AP|so,the next thing we need to know is,what the ip address of this desktop is,because the desktop is actually serving the app at the moment 
SM|later on in the course,you'll be serving the app from a web server,and even storing it locally on your device 
CD|i'll show you how to do that in a moment,but for now,we really need to know the ip address 
CD|now,on a windows machine you can do this by going to the command line terminal and typing ip config,and it will give you the ip address of your advice 
CD|on a macintosh device,we can do the same thing 
CD|we can go to a terminal 
CD|if i type ifconfig,it gives me a list,and you should be able to see that now,it gives me a list of what looks like ridiculous numbers 
CD|but there's a number here,inet NUMBER,that's the ip address of this machine on this network 
CD|i've got an ipad here 
CD|i'm going to launch safari 
CD|and i'm going to go to the ip address  
CD|now,that's not enough,we also need a colon,and the port number 
CD|the port number here is NUMBER,i know this all seems like crazy garbage,but it,i promise you,is nearly over 
CD|here you go,and it's gone straight to the solid painter app 
CD|and once it's loaded in,sound,there you go 
CD|it's running on my ios device 
NL|simple as that 
CD|it's running over the network 
NL|really simple 
CD|and now,i can continue to edit that app live and just refresh this page 
CD|so,i can change an aspect of it,go back to the code type something else in,and then refresh the page and it will then come up 
CD|one final thing though which is useful to know,if you want to embed this on your home screen whilest you're developing,you can hit this little sharing icon and choose add to home screen 
CD|and if you do that,it'll actually make it a proper bundled app 
CD|we'll be talking more about that later on towards the end of the course 
CD|but that,more or less,is how you get it running on your ios device 
CD|and i just want to point out that our template,which we've prepared for you,is downloadable from the coursera site 
CD|and that should look identical on a ios device whether it's an ipad,an iphone or an iphone 
NL|sound 
SM|okay,so we've had OMITTED explain to you about rotation and translation and other types of methods for changing the display of certain types of graphics and characteristics of graphics on the screen 
SM|and we've had matt explaining to you,explaining really how we analyze audio among other things 
SM|now what we going to do is we're going to try and combine those two things together 
SM|we're going to do a little bit of what we call graphical synthesis to create algorithmic graphics 
SM|and we're going to do a little bit of audio analysis and combine that to make an audio visualizer 
CD|audio visualizers are really popular and you find them all over the place remarkably so in pretty much every media player and every major console 
EX|so for example in the xbox jeff minter's audio visualizer is the main visualizer when you see when you put a cd in 
CD|although other visual artist like i think it's flight NUMBER,their visualizer used for itunes,so there is a whole range of people who just make computer graphics,abstract computer graphics 
CD|and their work is a major part of everybody's listening experience 
CD|the audo analysis aspect of doing audio-visualization is quite good to understand and is quite nice to know how to do some of those tricks 
CD|i'm going to take you through basic analysis and how we use it to change graphic parameters 
CD|and i'm also going to give you a really quick introduction to beat detection 
NL|so let's start at the beginning 
CM|building an audio visualiser 
CM|so,the first thing we need to learn is how to do algorithmic drawings 
CD|there are so many different ways to doing this and so many different methods and different algorithms you can apply 
CD|i'm going to teach you how to do some really simple stuff that uses rotation and translation,and we're going to start with rotation 
CD|now,fundamentally the key to almost all algorithmic drawing is a for loop 
CD|and OMITTED will explain that to you if you're not sure what for loops are you should go back and check the programming lectures that OMITTED supplied for you in case you're a little rusty 
CD|it's actually really,really easy to understand the for loop and i'm sure you'll be fine with it 
CD|but all you really need to know is this is a method for drawing lots and lots of things in different ways on the screen 
EX|let me give you an example 
EX|here's a basic rotation sketch which we can look at 
EX|you can see this would run fine on an ipad or an iphone 
CD|we've got a bunch of rectangles and they're all spinning round 
CD|you'll notice that when they spin round,they seem to,line up at certain points 
CD|like just then 
CD|also you'll notice if you're looking,that you get four,a group of four,then a group of five,then a group of three,and then it spins out into one long arm and goes all the way around 
CD|now the reason this works is because every individual shape i'm drawing is spinning 
CD|based on its position in a system of a certain number of object 
CD|so if i want,if i had NUMBER objects and i was spinning them all,and i was spinning an object in the middle,i,i would be spinning it NUMBER times slower than the object on the object on the edge 
CD|and when you do that,you get this interesting symmetrical pattern 
CD|this has been used by lots of artists over the years and it's an interesting way of getting feedback type effects that are really symmetrical 
CD|let's have a quick look at how it works 
CD|so it doesn't use any trigonometry although we are going to look at some basic trig real soon 
CD|but what we do have is a so it doesn't use any trigonometry,but what we do have is a simple rotation 
CD|and i'm going to show you how that works 
CD|this is the sketch 
CD|so ther's no sine,there's no cosine,there's no tangents or stuff,and there's no pi 
CD|we'll be looking at pi a little bit later 
NL|young blah etc 
CD|but it has a similar effect,i'll just used a variable called time 
CD|this variable is initialized at zero at the top of the sketch 
CD|let's have a quick look at what's going on underneath here if we go back 
CD|so we have time and time is this value where we're incrementing bit by bit 
CD|every,every time that we ask the computer to draw a frame that increments 
CD|and then what we do is we say okay,here's a for loop 
CD|basically i want to do this NUMBER times times,and it uses this variable i,which is an integer,to do it NUMBER times 
CD|we're going to rotate given the current time so as time progresses and as time is incremented by this value of NUMBER,it's going to change the rotation 
CD|and then what we're going to do is we're going to draw a rectangle based on its position,i,it's position in the system,whichever one it is 
CD|and then we're also going to change the signs based on their position 
CD|and that's what we have here and that's what gives us this spinning set of squares 
CD|so you can see here the normal sort processing stuff size and frame rate,we set the background to white 
CD|we translated everything to the middle of the screen so that zero and zero the NUMBER and NUMBER is right in the center 
CD|this is useful,and for all the sketches i'm doing today,that why,that's how i'm working 
CD|i've turned the fill of and then here's the bit we just looked at 
CD|i'm incrementing time 
CD|i've got NUMBER of these and then i'm just spinning them around 
CD|each one is being spun around differently based on what the time is 
CD|and then i'm drawing it but the join functions been parameterized with the number i. the number i represents the number in the system,so remember what i said before 
CD|so if i'm spinning the one in the center around,i was spinning it NUMBER times slower than the one on the edge 
CD|so as i count each one out rectangle here,rectangle here,rectangle here this one spins like this and this one spins like this 
CD|so this one for every single rotation this one does this one does NUMBER rotations,the one on the other end 
CD|okay,so that's the basic idea 
CD|let's try something a bit more complicated 
EX|let's do a for loop with rotation and a bit of trigonometry 
EX|it's a really,really simple algorithmic process 
EX|this one,i always use,i always used this example when i'm explaining about algorithmic drawing because it's a really good algorithm to start with because it's one of the earliest computer graphics algorithms we're creating 
CD|animations and it was used by john whitney,sr to produce a range of really famous abstract animated pieces 
CD|he also used a similar technique for generating what's called lissajous figures for doing the title sequence to vertigo 
CD|which i think there's just been a,in fact the day we're recording this there's a google doodle which gives you an indication of when we're recording this 
CD|there's a google doodle which celebrates the work of saul bass and on that there's quite a lot of stuff about john whitney because saul bass went with john whitney to do the vertigo type of sequence using exactly this algorithm 
CD|and it's one of the earliest pieces of computer graphics that whitney did on a computer that he built himself,in fact 
CD|so get this to work,we need to use some trigonometry,and we need some elements 
CD|we've got some variables and some elements 
CD|the elements is the number of objects that we want to draw and the variables are the way we want to draw them 
CD|and we change these all inside the loop 
CD|so we have a variable float spacing a variable called rotation a variable called radius and a variable called magnify 
CD|and the we have int the number of elements 
CD|so in the for loop we say 
CD|as many elements as we've got,we keep looping around until we've drawn them all 
CD|that's what it says int i equals,i less than element i plus plus 
CD|and then we're using pushmatrix and popmatrix,which OMITTED will have explained to you about already 
CD|now what we do is instead of rotating given our time value,we rotate given spacing,i and rotation 
CD|so there are three numbers that we use to calculate what the current rotation's going to be 
CD|so we have the spacing,which is the distance between all the objects 
CD|we have i,which is the number of the object in the system 
CD|and we have rotation,which is how much rotation there currently is,how much we're rotating into our system 
CD|and then what we do is we're translating it as well at the same time 
CD|so that's the main difference 
CD|although we're parametrizing rotate differently,we're still just rotating it 
CD|the key thing is here we're translating at the same time 
CD|which means it doesn't just spin round,it goes in and out 
CD|and we are using sine to do this which is a trigonometric function which squeezes all the,all the shapes in and out 
CD|now,let's have a quick look 
CD|basically,we're drawing an ellipse every time we do this 
CD|i'm going to show you what that looks like 
CD|so this is the basic rotation with sine 
EX|now,as always with these examples,they're accessible in week three,lesson three of the coursera documents that you should have 
NL|and here we have it 
EX|so this is this is the algorithm that i was just talking about 
CD|it's useful for all sorts of things 
CD|and,it's neat so i'll pair,i'll parametrize it with mousex and mousey so you can see i'm just exploring with the mouse at the moment 
CD|you'll notice that while i'm just traveling down the diagonal,we'll always have it well it always gives us circles 
CD|but if i move in the OMITTED dimension,it rotates and if i move in the OMITTED dimension,it translates 
CD|and you see we get these interesting symmetries 
CD|let's have a kind of closer look at that 
CD|i'm going to go back to here 
CD|so how are we doing that 
CD|well,we're mapping the radius and the rotation,given mousex and mousey,exactly as i'm showing you on this slide 
CD|so,we're going,okay 
CD|well,we'll take the mousex as input 
CD|and we presume that's from zero,which is the leftmost side of the screen,to the width of the screen 
CD|and then we're mapping that to values between and NUMBER and we're doing the same for the rotation 
CD|so,because of the way we've organized these elements to be drawn,radius and rotation are in the same range 
CD|the other thing,the other variable which we introduced in the last slide which we're using to make this whitney algorithm,is,spacing 
CD|now spacing is how far apart,as i've said,how far apart the different elements are drawn 
CD|and this is really about how far around a circle it is 
CD|so in this case,we're getting two_pi 
CD|now two_pi is basically how we measure around a circle 
CD|so we start here zero pi and we measure around and we get to,two_pi 
NL|okay 
CD|so OMITTED will have explained a little bit about pi 
CD|we're using pi divided by elements to figure out how we get,say we have NUMBER elements 
CD|we're dividing two_pi by NUMBER and we're saying that's how far apart all the,all the different elements are 
CD|so it's a bit like saying,well,you know,i've got a box which is one meter long 
CD|and i want to get ten sandwiches in it 
CD|so i'm going to stick each one in at a tenth of a meter,apart 
CD|that's basically what we're doing 
CD|although they're not sandwiches 
NL|there's no box 
CD|it's just a circle and some graphics 
CD|so radius and rotation,they're the two variables which are how far around it's going,and how far away from the center it is,and spacing is how far apart we are around the circle 
CD|so quickly let's have a look at this 
NL|so here they are 
CD|we're in the draw loop 
CD|we set the background to black 
CD|we've mapped mousex to ray x. we've mapped mousey to rotation 
CD|we've created spacing which is two_pi elements 
CD|we translated the center of the screen which is what we're doing for all these sketches 
NL|i've explained that to you before 
CD|we turn fill off and then what we do is we say for every element pick a color 
CD|i'll be talking about a color in a minute 
CD|pushmatrix just like OMITTED said we needed to 
CD|now rotate based on how far apart they're supposed to be,which element and system they are and what the rotation currently is 
CD|and then translate but when we translating we're getting the sine of the spacing which is how far apart they are 
CD|the i which is the number which particular element it is and the radius which is how far from the center it is 
CD|so we get the sine of that and then we magnify it 
CD|now this is what creates that squeezing,cause the,what sine produces is this waveform like this 
CD|and because we're running those values into a sine wave and then magnifying them out,then we're basically not just going around the circle,we're going through the circle as well 
CD|as we are squeezing the radius to and from the centerfold 
CD|and that's how it works 
CD|then we draw our circles 
CD|now,you'll see,if i show you the sketch,all the circles are the same size 
CD|i can do some interesting things quite fast just by times-ing them by i. let's try again 
CD|and you'll notice that immediately i've got a very very different sketch with,which looks a lot more interesting 
CD|you see,i've got,i think they're far too big so i should probably change the size 
CD|let's just make them,i just,i'll say i times NUMBER instead of NUMBER,cause they're a bit off the screen 
EX|let's try that again 
NL|yeah,that's a bit more like it 
CD|so you can see i've got a lot more control,and you get this weird sort of pseudo NUMBER effect 
CD|and it's worrying as all the different circles interact,exactly like they did in the first sketch 
CD|you get this kind of weird mesh 
CD|now,when i'm all the way over here,it looks a bit messy 
CD|but really when both the values are quite near to zero,you get some quite nice effects,nice NUMBER effects 
CD|also what we can do is we can change the number of circles 
CD|so if i change the number of elements to something a bit ridiculous,like NUMBER is a lot 
CD|let's try NUMBER,just double them,i wonder if it can handle that 
CD|yeah,there you go,well that's NUMBER and you see that immediately 
CD|it's starting to look a lot more interesting,and all we've done is taken a few of the variables and parameterized them okay 
EX|so we're going to use this,in a bit to show you the final example 
NL|but lets move on 
CD|i want to talk a bit about hue and rotation and then i'm going to talk about how we organize,so we do color and then i'm going to talk about how we organize sound and beat detection 
CD|so instead of using red,green,and blue colors like we normally do i'm using hue saturation and brightness,hsb 
CM|sometimes called hsv color where the OMITTED stands for value instead of brightness 
CM|sometimes called hsl,where it stands for luminance 
CD|so basically,hue is the color tone 
CD|rather than having a mixture of red,green and blue,we can say,well,i want the color tone,whether it's red,blue or yellow to be one number 
CD|and that's normally expressed between zero and NUMBER degrees 
CD|and it's,it's as if it was going around a circle 
CD|saturation is the color depth which is how strong the color is 
CD|and brightness is self explanatory,it's how bright it is 
CD|so bright it is if so if saturation is zero 
CD|the color is,is either you know,is a shade of gray 
CD|and if brightness is zero,it's black 
CD|and you can see by this triangle,how it works 
CD|now so what we do here in processing,in order to make this work is we change the color mode to hsb 
CD|and then we can control what we would normally like the fill command,or the stroke command to set the hue saturation and brightness 
EX|and in that example i was showing you,you saw that the color was going through a range of different colors from one circle to the other 
CD|because in my stroke command in my fit,yeah,it was the stroke command 
CD|in that stroke command i was setting it based on the number of the elements in the system 
CD|so it went around the hue circle,you can see the hue circle here,which is on the top of this,on the bottom of this cone 
CD|it went round and round and round that cone,based on which number in the graphical system we were drawing 
CD|so,if we use that hue saturation and brightness,and then we do some analysis,we can create some interesting visuals 
EX|i'm going to start with a really simple visualizer,based on analyzing sound 
NL|exactly what matt said 
EX|we get,we analyze the audio by getting a float value called power in this example 
CD|and that's that's done by using the audio method,get average power 
CD|so,we go float power equals plat pow float power equals player.getaveragepower and then we use the variable power to change the animation 
EX|i've got an example that i want to show you 
EX|which is really,really simple 
EX|what it does is,it's,uses hsv,as i've already said,and it produces 
EX|the form,it produces it,you load the sound,you analyze the sound,and then we just change the color 
CD|you can see i'm changing the color here,before it draws this circle 
CD|and it looks like this 
CD|and we should get some OMITTED and just to prove that i'm actually analyzing it if i change the speed you see that a hue rotation changes speed too 
CD|so,i'm clicking and dragging,sound clicking and dragging to change the speed and you got ta be a bit careful with this cause if you stare at it to long it can give you a funny feeling 
NL|i guess i better move on 
CD|so,if i show you a bit of that code,it's really simple 
CD|we have another for loop with a number of elements which is exactly the same as before 
CD|i'm literally just drawing NUMBER circles,and those NUMBER circles are spaced in the screen from the outside in,just as if i was laying sugar paper circles one on top of the other 
CD|and then,what i'm doing,is i'm using the hue and i'm rotating the hue based on the power,and also the also then the number of the element that we're currently in 
CD|so,the outer circle is a different hue to the inner circle 
CD|which is why it seems to cycle from the outside to in 
CM|that's basic color cycling 
CD|okay 
CD|so,we're just to go through that again,we're changing the color of the elements depending on the power 
CD|we get the float value power from the getaveragepower method 
CM|we also have another float called go which 
CD|go is basically how much energy we have 
CD|so we keep adding the extra power and i've got a multiplier plus NUMBER which you can change 
CD|have a mess with that 
CD|see how it effects how fast it moves 
CD|so go is a value which we use to keep cycling through,through all the different color values 
CD|so,it's the,it's the additive power as we keep going 
CD|and it's kind of a number that keeps getting bigger and bigger 
CD|now,i'm using modulo here to make sure that whatever that value is,it's constrained to between and NUMBER and we go,basically we have a fill command,i plus go,modulo NUMBER and that's the hue,power times NUMBER,that's the saturation,and NUMBER is the brightness,so it's always very bright 
CD|and then we draw our ellipses,and the size of the ellipse is dependent on which circle we're actually drawing 
CD|so the circle go from the outside in 
CD|so that's the most simple kind of audio visualiser 
CD|let's take another look at it because it's good for the eyes OMITTED 
CD|really simple and really effective 
EX|now let's say you want to do something more complicated,we can control the visualizer with sound through beat detection 
EX|beat detection is something which is useful when you're doing visualizers 
EX|and i've got a simple example here 
EX|let me show you the example 
CD|i'll tell you how it works 
CD|as i've said before,all of these can be found in the materials which you should have week three 
CD|so OMITTED we've got the same track here and you'll notice we've got circle in the middle,which is showing us the average power 
CD|and then there's a square appearing whenever it,it detects a beat,and the square is appearing in the top left hand corner 
CD|let me show you how i did that 
CD|so how did i do that 
CD|basically,what i'm doing is i'm getting the average power,i'm running a beat detector 
CD|let me talk you through how the beat detector works 
CD|so quickly,what we do is we need to have two variables for beat detector 
CD|in addition to power,we need to have threshold,and we need to have wait 
CD|so the threshold is what the power needs to be for us to detect that there's been a beat 
CD|it's basically a level that we set and if it goes over that level,we call it a beat 
CD|and then wait,tells us to wait a certain amount of time before we go looking for more beats 
CD|now,so we have a little method here,in each statement 
CD|power,if the power is greater than the threshold,and also weight is less than zero so if we finished waiting and the power is over the threshold then we can do something to change the animation 
CD|so in the case that i just showed you we're just drawing a rectangle on the screen but we could also do something else 
EX|we could get this value go or our other value,we'll call it amplitude for example and we can add the power to that amplitude to create a running graph of the current amplitude 
EX|and then what we do is we add ten to the wait value 
EX|so we wait for another ten frames before we detect another beat 
EX|and then immediately we close that bracket we do wait minus minus which starts the countdown 
CD|so every drawing frame we count down and we're counting down until wait is less than zero again and then we go okay we can look for another beat 
CD|and that's basically how it works 
CD|let me just show it working again so you can see 
CD|OMITTED and you can see that OMITTED you should actually be able to see the numbers flashing on as it detects a beat here 
CD|you've got the average here and the square is being drawn when we get a beat 
CD|noise so that's really simple 
EX|okay so this is the last example i'm showing you,it's just a way of showing you how we put all those things together 
EX|it's not a fully in a worked example you cold do a lot 
EX|so for example,i'm,i'm not really using the color cycling 
CD|and also i've only done a little bit to change the animation 
CD|i just made it look slightly nice 
CD|but i'm drawing lines instead of drawing circles 
CD|also i'm not changing the visualizer through out 
CD|you could have a number of different drawing methods and change them based on 
CD|how many beats are being detected or any number of different ideas 
CD|so let me just show you a bit what that looks like and then you should take this away as a starting point with all of the other examples and try and build your own 
CD|so this is what it ends up looking like 
CD|OMITTED you can see that we've got the position of the lines changes based on OMITTED the beat's being protected,but they're also rotating based on the energy,so they're really closely linked to the OMITTED 
CD|also,because the lines are all being rotated 
CD|they're being rotated twice,once around the origin and then again given a separate value,and you'll see sometimes we get nice symmetries,and sometimes we get more noisy output 
CD|OMITTED i'm also using a hue to rotate all of the different colors,and so that's it 
SM|so in summary,what we've done is we're created a simple visualizer,a really basic one 
SM|we could do a lot more by using alpha blending,by doing more color cycling 
SM|but essentially we are taking some algorithmic approaches to drawing 
SM|we are parameterizing them so that we can control them in various ways 
SM|we're analyzing the audio and we're taking the output of the audio analysis and plugging it into the sound,into the graphics parameters 
SM|so the sounds being plugged straight into the graphics as if we were taking a jack plug out of a guitar and sticking it in 
SM|in fact it's more complex than that because we're doing spectral analysis and we're doing weighted average spectral analysis 
SM|so this is a really good way a good method of generating visual material and generating interesting visual applications OMITTED 
NL|sound hello and welcome back to the course 
SM|in this video,we're going to talk about how to get data into the processing element as well as how to transfer the data from the processing element 
CM|a processing element is a digital device,which makes computations 
CD|the computations are performed on some data,which is stored in memory within the processing element 
CD|however,initially the memory is empty,so where to get the data from 
CD|i would like to introduce here two concepts,input and output 
CD|as you may guess,the input comprises the whole set of devices or units through which the data can be delivered to make computations on 
CD|on the other hand an output is a device or unit that help to transfer processed data from a processing element to other devices 
CD|input/output devices share some characteristics 
CM|however,let's talk about the inputs first 
CD|input devices are meant for delivering data to the processing element 
CD|in some cases,the microcontrollers have different peripheral units that play the role of inputs,for example,communication units such as uart or spi 
CD|an analog to digital converter can also be considered as an input device 
CD|these peripheral units might be located inside of the microcontroller and exposed to the user through external pins 
CD|by the way,general purpose input/output pins,as you might guess from their name,can also be used as an input,regardless of any peripheral unit being attached to them 
CD|there are many ways to classify a microcontroller's inputs 
CD|however,among all of them,i would like to mention the one which separates inputs into two categories,serial and parallel 
EX|as an example you can think of serial peripheral interface and gpios 
CD|inputs can also be classified according to the type of signal they handle 
CD|this way an input may be digital,for example spi interface,or analog,such as an analog to digital converter 
CM|the next question i would like to cover is how to actually read the data from those inputs 
CD|the details of how to do that may be quite different depending on the input unit you want to use 
CD|let's consider an spi interface and an adc,which are clearly very different kinds of units 
CD|the first one is meant to communication,whereas the second one converts analog signals into a digital form 
CD|because of their fundamental differences,we can expect their operation details to differ very much as well as the methods for reading data from them 
CD|however,from a higher abstraction level,we can distinguish two ways for doing this 
CD|the first one is to read the input every once in a while,let's say once every NUMBER milliseconds interval 
CD|in this case,the read operation is initiated by the software 
CD|therefore,we need write a piece of code that gets the data from the input unit at the chosen interval 
CD|in our case,the interval is NUMBER milliseconds,but it can be adjusted 
CM|now,let's think about the following case 
CD|what if we are interested in knowing the time when an event happens 
EX|for example,we need to know when the voltage level on some pin rises from logic zero to logic one 
CD|what time interval do we choose in order to catch such event 
CD|you can make an assumption that the shorter the interval,the more frequently we check the input,and therefore the less the probability that we will miss the event 
CD|this is of course true 
CD|however,if we think of the amount of time the processing element will spend on checking if the event has occurred,we will conclude that such approach is not efficient since a lot of computational power will be wasted 
CD|luckily,there is another way of catching fast events 
CD|if the first method was software initiated,the second way is hardware initiated 
CD|it is based on interrupts 
CD|when an event occurs,it causes an interrupt,which in turn breaks the flow of the main program and reads the input 
CD|the second method is more reliable in the sense that it is less likely to miss the event 
CD|to make sense of the received data,the communications unit used as input must be compatible with the sender 
CD|this compatibility should be at the protocol level 
CD|this means that signals used follow the same rules 
EX|for example,if spi communication protocol is used,the sender and the receiver should work according to this protocol 
CD|it is also important to consider voltage compatibility 
CD|the signals should be preferably used the same voltage,let's say either NUMBER volts or volts 
CD|with outputs,the picture is pretty much the same 
CD|peripheral units can be used as output 
CD|the interaction with the outer world is done via external pins 
CD|the classification is also similar,serial,parallel,analog,digital 
EX|an example of an analog output is a digital to analog converter,which converts a number to a voltage signal 
EX|communication units,such as uart or spi,are examples of digital outputs 
EX|sending and receiving data can be software or hardware-initiated 
EX|let's make an example of hardware-initiated transfer 
EX|for example,we need to build an analog signal using a microcontroller 
AP|in this case,we will need a digital-to-analog converter 
EX|the shape of the required signal should be,for example,sinusoidal 
AP|for that we will keep samples,which are just numbers,of one of the periods of the sinusoidal in memory 
AP|what we need to do is to read those samples at the right intervals to send them to the dac 
AP|the right intervals of time are measured using a timer 
AP|now,if we want to keep the shape of a signal stable,we need to rely on hardware 
AP|it can be done in the following way 
CD|a timer marks the right moment and instructs the direct memory access unit to transfer one sample from the memory to the dac 
CD|after the dac converts the sample to voltage,everything is set to be done without the influence of software 
CD|as for inputs,output units should be compatible with the receiver regarding their protocol and voltage level used 
SM|so in this video we discussed the ways on how an embedded system can exchange the data with outer world,and what are the requirements that should be expected to make such exchange correct 
NL|sound 
NL|music hello,i'm good to see you back in our course 
SM|before we start with this video,let me remind you what has been covered in earlier videos 
SM|by now,you should have an idea of what an embedded processor is and how it works 
SM|you should also be familiar with the features of an embedded processor 
SM|i must remind you again,that in this course we make emphasis on microcontrollers 
SM|therefore,the large field of embedded processors is now reduced to only microcontrollers 
SM|after you learn about microcontrollers,the next step would be to somehow put your hands on them and start actually working with them 
SM|one way to do so is to buy a microcontroller breadboard,set of resistors,capacitors,wires,and whatever else is necessary to build proper electrical circuits and assemble all the circuits by yourself on the breadboard 
SM|well,it doesn't sound cool because it's a long process 
SM|and you know there is always one resistor that you need that is missing,and in the end there will be little motivation to continue playing with microcontrollers 
SM|luckily,there is another option to buy a ready made platform with a mounted microcontroller and to start working with it immediately 
SM|and in this video we're going to talk about these platforms 
CM|let's start with arduino 
CD|arduino is a widely known platform for fast prototyping 
CD|the platform uses atmel microcontrollers at its core 
CD|overall there are about NUMBER boards available 
AP|on the website,you can find them organized according to application areas,such as internet of things,wearable,and others 
CD|besides the boards,there are many shields built specifically for our arduino devices 
CD|the functionality of these shields vary a lot 
EX|for example,with an mp3 shield you can build your own mp3 player if you need one 
EX|a wi-fi shield is a great tool to build applications let's say in the domain of internet of things 
EX|and a joystick shield is suitable for control purposes 
AP|so if you want to extend the functionality of the board and your application,you can plug in a shield 
AP|luckily it can easily be done thanks to the sockets installed in arduino 
AP|arduino also provides its own integrated development environment for software development,which is easy to use and really speeds up the development process 
CM|the second platform that i would like to mention is the stm nucleo platform 
CD|at its core there are stx complex cortex OMITTED microcontrollers from m0 to m4 
CD|so we can choose here between speed and energy consumption 
CD|the boards also have extension connectors,and the connectors are compatible with arduino shields which is very convenient 
CD|and also there is the so-called morpho connector for other kind of shields 
CD|a very convenient feature of this platform is that the programmer/debugger is mounted on the board 
CD|there in an online id available for this platform as well as a whole set of tools including operating system,tools,and developer ecosystem for building internet of things solutions 
CD|offline ides are also available 
CD|they are more complex than arduino's one,but they give you more freedom to the developer 
CD|i would say that this platform is for more experienced users 
SM|here i mentioned two kinds of general purpose platforms that can be extended with the help of shields to target some specific areas 
SM|there are,of course,more platforms available on the market 
SM|some of them target one specific area and might not be extensible 
SM|so there is a legit question you might have 
CM|how do i select a certain platform from this diversity 
CD|first of all,the choice obviously should be application-oriented 
EX|for example,if you want to do some digital signal processing,you might want to use microcontroller that supports some dsp operations 
EX|if you need high computational power,then cortex m4 or cortex m3 microcontrollers would suit you well since they have the highest clock frequency among the previous mentioned mcus 
EX|therefore your choice would be either arduino due or stm nuclear cortex m4 m3 
EX|if the small size is crucial for you and there is no need of high performance,then you probably want to check arduino micro 
AP|it is also important to consider that platforms are interchangeable in the sense that the same application can be implemented on two different platforms 
AP|something i would like to emphasize is that a community is crucial when it comes to choosing a platform 
AP|the bigger the community is,the more likely the problems you might face have already been solved by someone else,in which case you can probably find the answer in the internet 
CM|now i would like to show you a real project that was implemented using microcontrollers 
CM|it is a metering system 
CD|imagine that we have a tube,and there is some liquid flowing through that tube 
CD|the goal of the system is to measure the liquid's flow speed 
CD|since we know the size of the tube,we need to calculate the volume of the liquid during that time interval 
CD|and finally,we need to store those measurements in a memory 
CD|what is more,the device should have user interface,like a keyboard and a small screen 
NL|so,where to start 
CD|well,we start by dividing the tasks in two components,the metering unit and the control unit 
CD|the next thing to do would be to decide how to measure liquid flow speed 
CD|this can be done using ultrasound 
CD|we need to emit an ultrasonic sound,receive it back,and do some spectral analysis to estimate the liquid flow speed 
CD|don't worry if you don't understand what a spectral analysis is 
CD|here what i want to show you is the approach 
CD|so we need to do some digital signal processing to get the liquid flow speed 
CD|after we get those measurements,we do some simple averaging,and finally we store those processed measurements 
CD|okay,so we have a set of tasks,signal processing,averaging,storing,and the user interface 
CD|it would make sense to map the set of tasks onto two microcontrollers 
CD|let's say signal processing will be done on mcu,and we will call this part the metering unit 
CD|the other tasks will run on the control unit,which will be implemented on mcu2 
CD|both parts will be connected together using a uart interface 
CD|since mcu1 does spectral analysis,cortex m4 microcontroller would suit well,since it has dsp extensions 
CD|and we will also need an adc to sample the ultrasonic signal 
CD|on the other hand,mcu2 does not need to support dsp operations 
CD|but it need to be fast enough to communicate with a screen and a keyboard while doing the averaging at the same time 
CD|it should have enough pins to work with a keyboard and at least two uart units to work with the screen and to communicate with the metering unit 
CD|cortex m3 would fit well 
CD|it is useful to leave some room for expansion 
CD|this means you might want to have some extra functionality to the device in the future 
CD|therefore,the selected microcontrollers should have enough resources in terms of performance and memory 
CD|finally,it is important to notice that the system can be implemented in many other ways 
SM|in this video we discussed the ways on how to actually start working with microcontrollers using platforms 
SM|hopefully,now you have an idea of how to pick an appropriate platform for your application 
NL|good luck 
NL|sound 
NL|music welcome 
NL|it is good to see you back for this lesson 
SM|previously,we explored contiki as a hybrid system 
SM|now we will look into more details of the operating system to discover other characteristics in depth 
SM|at the end of this lesson,you will be able to understand what benefits and challenges contiki presents when developing iot applications 
CM|first of all,let's discuss the main components of contiki 
CD|a contiki system includes the kernel,libraries and applications or services,of which applications and services are implemented as modules 
CD|they are only loaded when an application requires them 
CD|as discussed before,this is one of the main positive characteristics of contiki 
AP|if you do not remember details about this,i recommend you go back to other videos,we let it to modular kernel design and contiki 
CD|in contiki,it is possible to dynamically replace all processes at run-time,thus helping to save resources 
CD|processes in this case can be either services or application programs 
CM|so far in our discussion,we haven't addressed what applications and services are and their differences 
CD|from the point of view of contiki,they are all modules which are loaded when needed 
CD|however,from the point of view of a programmer,a service is implemented to provide a functionality which is used work for one or more application processes 
CD|all communication between processes are done through the kernel 
CD|we mentioned in the previous lesson that there is no hardware obstruction layer in contiki 
CD|as a result of this,device drivers and applications communicate directly with the hardware 
AP|if you don't know or remember why contiki does not provide a hardware abstraction layer,i suggest you to go back to the previews lesson titled contiki,a hybrid system 
CD|all processes share the same address and space and all run in the same protection domain 
CD|this enables contiki to run in memory constrained devices 
SM|in order to give you a deeper understanding of this idea,we will have a lesson threads and multi-threading 
SM|in that lesson,you will get an idea of why and how contiki achieves it 
SM|but let's now examine how a process is created and treated in contiki 
CD|a process is a piece of program code which is executed by contiki's system 
CD|a process is started in two ways 
CD|the first is when contiki starts,and the second when the module loaded 
CD|a process runs when an event related to the process occurs,such as a timer event or an external one 
EX|for example,consider an application that prints hello world to the terminal every second 
CD|this application process runs whenever a timer event is triggered at every second 
CD|it means that a counter of the timer will count down every second,and when it reaches zero,the event is triggered 
CD|countdown frequency is based on the particular type of timer event used 
CD|in order to have a closer view of a timer event,i recommend that you stay with me for the upcoming videos 
CD|in those videos,different types of time or events,and other types of events will be deeply discussed 
CD|there are two types of execution modes in contiki 
CD|these are cooperative and preemptive modes 
CD|cooperative process code runs sequentially in a queue 
CD|this means that the first process has the right to use the cpu,while other processors wait for their right to access the cpu 
CD|after the process which occupied the cpu is finished,then the next waiting process in the queue gets the right to use the cpu 
CM|in contrast,preemptive mode handles process differently 
CD|in the preemptive context,a running process can be stopped by an interrupt,and the higher priority test immediately takes over the right to use the cpu 
CD|after finishing its job,it returns the right to access the cpu to the interrupted process 
CD|a process is defined by an event handler function and an optional poll handler function 
CM|in order to give you a better view of a process,and how it is defining contiki,we're going to look at the internal structure of a contiki process 
CD|the contiki process is a combination of two different parts 
CD|these are process control block and the process threat 
SM|in this lesson,we only focus on contiki system and contiki processes 
CD|therefore a process thread will be discussed in following videos 
CD|the process control blog is composed of information about each process such as the state of the process,the pointer to the next process,name of the process,a pointer to a process thread,the state of the proto thread and internal flags 
CD|the slide shows a structure of a process in contiki 
CD|the structure is written in a standard OMITTED language 
CD|the process,control block,is only used by the kernel 
CD|therefore,users do not have any right to access the control block directly 
CD|this helps the system protect the process and avoid unexpected mistakes or bugs caused by programmers 
CD|actually,the kernel only keeps a pointer to the process of state which is health in the process private memory 
CD|this means that every process has its own state,and the state can not be accessed by other processes 
CD|as you can see in this slide,the process control block's structure is quite simple,and it does not contain complex information 
CD|therefore,it is lightweight,and it just occupies a few bytes of memory 
CD|in contiki,a process control block can not be declared or defined directly 
CD|the block is defined via the process macro 
CD|in order to give you a better view of this macro,i am going to take an example of hello world processing 
CD|as you can see,the process macro has two parameters,the name of the process control block and the textural description 
CD|the variable name of the process control block is used for accessing the process,while the description text of the process is used by programmers for debugging 
CD|as mentioned in previous videos,contiki uses posting events for interprocess communication 
CD|this mechanism is also similar to the messaging mechanism in microkernel described before 
CD|contiki's system is partitioned in two parts 
CD|the first part is the core,and the second is the loaded program section 
CD|the partitioning is made at compiled time,and it's specific to the deployment in which contiki is used 
CD|typically,the core consists of contiki kernel,the program loader,most commonly used parts of the language run-time,support libraries,and a communication stack with device drivers for the communication hardware 
CD|the core is compiled into a single binary image that is stored in the deploy devices 
CD|it is generally not modified after deployment 
CD|although it is possible to overwrite or patch the core by a special boot loader 
CD|programs are loaded into the system by the program loader 
CD|which gets the program binaries by using directly attached storage,or using the communications tech 
CD|typically,programs to be loaded into the system are first stored in the eeprom before they are moved into the code memory 
SM|this is all for this lesson on contiki system and contiki processes 
SM|i hope that you have now a better understanding of contiki system's structure and how it works 
SM|i hope to see you in the next videos,which will explain many other advanced features of contiki,such as contiki's kernel architecture and threats 
NL|sound 
NL|music hello,it is good to see you back for this lesson 
SM|previously,we explored with an eagle's eye what linux kernel is and why it is important 
SM|now,we will look into another type of kernel to discover it's detailed characteristics and advantages 
SM|at the end of the lesson,you should understand the differences between all three types of kernel and their features 
SM|as a result,you will be able to utilize a specific kernel type for a particular application requirements 
CM|let's begin describing what the modular kernel is 
CD|a modular kernel it's a sort of hybrid between a monolithic kernel and a microkernel 
CD|it aims to get the best features of both types of architectures 
CD|so in concrete,a modular kernel can perform tasks as good as a monolithic kernel while the stability is similar as a microkernel 
CD|as a result,we obtain a kernel with very efficient memory utilization and good overall performance at the same time 
CD|a modular kernel comprises a multitude of modules,each one dedicated to a specific system task 
CD|a key feature of these systems is that modules are loaded only when the functionality is needed 
EX|for example,a particular device driver is loaded only if there is a process that needs access to that device 
CD|loading a module does not take a large amount of time 
CD|however,this strategy could generate a severe overhead if multiple modules are constantly loaded and unloaded 
CD|the system would have spent most of the time managing the modules instead of executing actual work,and thus yielding very poor performance 
CD|to address this issue,once a module is loaded it will remain in the kernel until it is explicitly removed 
CD|in most cases,a module is required by only one particular process 
CD|however,it is possible that several processes require the same module 
CD|in which case,the colonel creates multiple copies of it 
CD|the main reason for doing this is to prevent the overhead cost by constantly loading and unloading modules 
CD|in other kernel architectures when new functionality is added,the kernel must be revealed 
CD|however,this is not the case for modular kernels,where new models can be easily added without recompiling thus saving time 
CD|filing and fixing bugs in a monolithic kernel is a very hard task 
CD|it is time consuming and demands a lot of effort 
EX|for example,a bug in a device driver which is bound to the kernel may prevent the system from booting 
CD|in this situation,it is hard to say what part of the kernel is causing the problem 
CD|this situation can easily be avoided when a device driver is a loadable module 
CD|since the kernel must boot before loading any module 
CD|in case the system does not perform correctly after the kernel is successfully booted,it's simple to find the fault module 
CD|as we discussed before,the kernel loads modules only when necessary 
CD|therefore,the system's memory can be efficiently managed 
CD|due to these advantages of modular kernels,we can conclude that with the modular kernel,the overall system performance increases and the kernel size is not large 
CD|although a modular system provides a multitude of advantages,it still has some drawbacks 
CD|as mentioned before,the modular kernel inherits stability from microkernel 
CD|however,this stability can not be warranted in cases of fragmentation 
CD|another disadvantage is that security may be vulnerable when many interspaces are passed through 
CD|finally,it is not easy to maintain a large number of modules when they are created by several third parties 
SM|this is the end of our lesson today 
SM|hopefully by now,you have a better idea of what a modular kernel is,what makes it different from other kernels and what it's advantages are 
SM|in the next video,we will discuss how a modular kernel is implemented 
NL|thank you for watching and see you again 
NL|music 
NL|music welcome 
SM|in our previous videos,we examine the many structure of contiki core and other features 
SM|now,we are going to discuss one of the most important features of contiki that is contiki protothreads 
CM|in order to provide sequential flow of control,contiki provides protothreads instead of using complex state machines or full multi-threading 
CD|protothreads are lightweight and stand as stackless threads with only two bytes of memory per thread 
CD|one of the benefits of using contiki's protothreads is that systems overhead can be small compared to other kernels 
CD|this comes as a result of sharing the stack by old protothreads 
CD|this has the additional benefit that context switching can be done easily by stack rewinding 
CD|it is more efficient to implement contiki protothreads than applying traditional ways of multithreading on wireless sensor network applications 
CD|contiki's protothreads are extremely lightweight 
CD|similar to other modules and processes in contiki,protothreads are completely written in standard c. this avoids any extra requirement for using and compiling protothreads 
CM|now you have some idea of the structure of protothreads,you may wonder how they really work 
CD|a protothread basically works within a single function and can not span over other functions 
CD|it is possible for a protothread to call another function,however it can not plug the flow inside the called function 
CD|some of the popular applications using protothreads are memory constraint systems,event driven protocol stacks,deeply embedded systems and sensor network nodes 
CD|in order to give you a complete view of contiki protothreads,we are going to discuss how they are implemented 
CD|protothreads are implemented using local continuations,which are used to present the current execution state of a program at the specific places 
CD|a local continuation can be implemented using one of the following three ways 
CD|these are machine specific assembler code,standard OMITTED constructs,or compiler extensions 
CD|the first way can be done by saving and restoring the processor state,except for the stack pointers 
CD|as a result,each proto-thread uses around NUMBER to NUMBER bytes of memory 
CD|the second way of using a standard OMITTED for implementation requires only bytes of state information per protothread 
CD|although this approach has slower memory overhead it still has some challenges and restrictions 
CD|the last method is to use certain OMITTED compilers which have a specific OMITTED extensions for implementing protothreads 
EX|for example,a gcc version supporting label pointers can be a good candidate to perform this 
CD|as a result,only four bytes of ram per protothread are required 
CM|now,i will show you an example of sealed code of protothreads in this slide 
AP|please take your time and look at the construct in detail 
CD|we are now going to explore another important concept supported in contiki,that is preemptive multi-threading 
CD|instead of implementing multi-threading in the core,kontiki implements multi-threading as a library on the top of the event based kernel 
CD|this gives the advantage that the library is only linked with applications built with the need for multi-threading support 
CD|multi-threading is implemented by using timer interrupts 
CD|the implementation is divided in two parts 
CD|a platform specific part and a platform independent part 
CD|unlike a conventional contiki processes discussed previously,each thread in multi-threading requires a separate stack 
CD|they run in separate threads until they yield explicitly or get preempted 
CD|the multi-threading library provides a set of api's for easy interaction 
CD|some example methods of multi-threading api are shown in this slide 
CM|have you ever heard of over-the-air programming 
CD|over-the-air programming is a simple contiki protocol to program the entire network of sensors 
CD|basically,the protocol sends a single program binary to a destination node or concentrate node via point-to-point communication 
CD|their received binary is stored in first 
CD|when the whole program is completely received,the protocol continues to propagate the binary program to other neighboring nodes 
CD|in cases of packet loss,negative acknowledgment is sent to the concentrate node 
CD|then the node starts to repair data packets 
CD|it is convenient to use the protocol to upgrade the whole network of sensors quickly 
CM|let's start to analyze the code size of contiki 
CD|to see how large it is and to do code size comparisons between contiki and other embedded oss,there are some strict requirements for an operating system of embedded wireless sensor network devices 
CD|these requirements arise due to resource constraints 
CD|memory,which is one of the most precious resources of embedded devices,must be considered when choosing a suitable os 
CM|let's examine the minimum ram and rom required to run a simple wireless sensor network application 
CD|note that ram and rom usage vary depending on the actual application 
EX|for instance,a simple wireless sensor network application takes less than kilobytes and NUMBER kilobytes respectively 
AP|please take your time to see this slide which shows detailed compile code size and ram usage of a contiki always compile for two architectures 
AP|the texas instruments msp430 and the atmel avr 
SM|so this brings us to the end of the video 
SM|i hope that you got a good understanding of contiki protothreads and multi-threading 
NL|thank you for participating and i hope to see you in upcoming videos 
NL|sound 
SM|okay,our next topic is desktop icons 
SM|and what we will introduce here is called bubble clusters 
CM|so the topic we discuss here,is a management of desktop icons 
CD|so,suppose you have a desktop and the one possible way,the organized desktop is viewed special aggregation or special clusters 
CD|so,you put system icons here and shortcuts here and some documents here and documents on other topic here 
CD|so,this way people can manage,various information in limited space 
CD|however,a program is at this kind of visual cluster 
CD|is not comprehensible from a computer 
CD|so they're just icons for a computer's point of view 
CD|so,whenever you have,you walk on this kind of a layout,you have to explicitly select group of objects 
CD|so,that's one problem 
CD|another problem is that you have to,if you put too many icons in a same location,it can cause a cluster 
CD|and if you want to grab one icon hidden,behind these icons,you have to move other icons away 
CD|so that's a problem we want to address 
CD|let me describe the program 
CD|so here,you be,clearly see four groups here 
AP|however,system does not understand these kind of clusters 
AP|so,you have to manually select and move around and then you should get a new group 
AP|then you again,you have to manually select 
CD|though,this can be very tedious 
CD|also,if you have,a big cluster,like this and there you have to pick up,icon hidden it 
CD|hidden behind it 
CD|you have to manually move out and then pick one object 
CD|so,this is very tedious 
CM|so,what we propose is,bubble clusters 
CD|so,bubble clusters is automatic grouping of nearby icons 
CD|and then visualization of them as in a bubble 
CD|and also,additionally,we introduce automatic spreading of cluster to pick up on hidden icon 
EX|so let me go back to the demonstration 
EX|so here,you have three grids,and if you enable bubble clusters,you will see the three bubbles,and then if you grab a bubble,you can drag them around by,just by grabbing a bubble,without manually selecting a group 
CD|sound and bubble,is automatically computed,as soon as you place these two icons nearby 
CD|and there's a little bit very small details but interesting details 
CD|here,these two and these two,are in the same distance,however you know,if these two icons are previously separated 
CD|they will resist to be merged fast 
CD|but as soon as they are merged,then they start to resist to be splitted 
CD|so,this is,kind of history resist and it is very useful 
CD|and then you can,you know,move around and pick up many icons 
CD|and then,if you have a hidden icon,like this 
CD|then you can double click here,and then you would temporarily spread icons and then you grab icon and the system go back to the original state 
CD|so,this is a bubble causal technique 
CD|and a bubble clusters technique,and then same idea can be applicable to this kind of digital ink 
CD|so,if we were walking on digital ink system 
CD|you know,you probably do not want to manipulate individual strokes 
CD|rather than that,each cluster has a meaning grouping 
CD|and then,whenever you draw strokes,the system automatically groups nearby strokes together 
CD|and you can move around these strokes,by grabbing blue area 
CD|and if you connect together,it'll be one object,and then you can draw line and you will split them,so this is very useful for a discussion or a discussion on whiteboard or digital inks because that's a demonstration 
CD|let me briefly describe the essence of implementation 
CD|so,we,i will first describe clustering algorithm 
CD|so,we use very,very simple pair-wise distance threshold 
CD|so,for all objects on the screen,first we assign each object to one cluster 
CD|so,cluster of object is like this 
CD|and then,for all object pairs,oi on the oj 
CD|if the distance is smaller than threshold 
CD|then they will merge to object 
CD|here's a view 
SM|so for each paper,each pair,we check the distance,against the one threshold 
SM|and if it is smaller,we merge them 
CD|and interesting part is here,the threshold 
CD|so,if the,if previously,in the previous frame,if the object in the different cluster,then the threshold becomes very small 
CD|so,difficult to merge together 
CD|and then,if the two objects are from the same cluster,in the previous step,then it becomes larger,which means very easier to merge together 
CD|and after having a cluster,we regenerate a visualization of the bubble 
CD|and here,what technology we use here,is NUMBER implicit surface 
CD|so,implicit surface,is,to compute potential field 
CD|field around each element,and then place iso-surface over the field 
EX|so,suppose you have one,two,three,four,five object and then we generate this kind of potential field around it,kind of height field 
CD|and then we aggregate them together and then compute iso-surface 
EX|and here is a visualization 
CD|sound so,if you have this kind of icons 
CD|and then this will,this one showings potential field 
CD|as you see,if you aggregate more and more object it becomes brighter which means high potential field 
CD|and after that,we just trace 
CD|lines,with the same height,heights 
CD|and,however,it's very time-consuming,to process individual pixels 
CD|so,we compute potential field values at grid cells,like this 
CD|and after computing potential fields at the grid cells,then we,out of,we,extract iso-surface by a technique called marching cubes 
SM|so,here's a summary of this video 
SM|so,the program we discuss here,is a management of spatially organized mini-icons on desktop 
SM|and then solution here 
SM|what we propose here,is automatic clustering of nearby icons as a bubble 
SM|and here's a pointers for further learning 
AP|so,original paper was published as a bubble cluster,clusters an interface for manipulating spacial aggregation of graphical objects 
SM|and the technique we use here,is called implicit surfaces 
SM|and implicit surfaces are very popular technique in computer graphics,to represent liquids and OMITTED object 
SM|and the first publication was at siggraph NUMBER by jim blinn 
SM|and then also,iso-surface extraction technique,called marching cubes was published at and this is a very basic literature,and i recommend that,to take a look at them 
NL|thank you 
SM|our next topic is pen and ink restorations and pen and ink textures and the work we introduce here is titled vignette 
SM|the problem we want to address here is it is tedious to draw detailed patterns,manually 
CM|so if you want to draw these kind of patterns using your pen,you have to do every details which is very tedious 
CD|and one possible approach is to copy and paste,to repeat,generally repeated pattern but the repetition is visible and looks too unnatural 
EX|so our approach is to use example based texture synthesis technic published in NUMBER so using this technique and combining interaction technique,you can draw this kind of repeated pattern very quickly and efficiently 
EX|let me show you a video demo 
EX|so,if you pick a standard pen 
CD|this is just a standard inking system 
CD|however you can also generate patterns like this way,so you suppose you can draw this kind of,pattern 
CD|and then after you get this,you can extend it this way 
CD|and also this way,so after i,identify pattern you can draw many instances just by drawing 
EX|OMITTED and another example is this one,so you specify a region first,and then you draw patterns 
CD|OMITTED then after having a pattern,you can repeat it like this way and then you would just get pattern automatically 
CD|and another interesting feature is like this,so you select a region 
CD|and then you paint and use your elements,like this 
CD|suppose you have bricks in this way 
CD|OMITTED maybe enough 
CD|and then you can get 
CD|patterns like this way,and after that,you can tilt it,like this kind of NUMBER effect 
CD|so this is,i,operation only happens inside this region 
CD|but in this way,you can get,kind of three di,three dimensional effect,within the region 
CM|another possible operation is hatching 
CD|so,you first select a region 
EX|and then you draw example strokes like this way,this way and this way,and so on 
CD|and then you,select these two 
CD|and then you get this kind of,matching part of it 
CD|and then you can also draw in different directions and then you'll get this kind of hatching pattern very easy 
EX|so let me show you a video 
EX|so here,so you draw example sketches and then you draw a line 
CD|and the system will automatically synthesize it,so it's same pattern 
CD|and you can repeat it many times 
EX|and again,you paint an example,and then system requests the desired path,and the system synthesizes the same stroke 
CD|so in this way,i use and can paint many,many strokes,without drawing individual strokes 
EX|and the most important part here is the seamless integration of example generation,and then synthesis spot 
EX|OMITTED and here's another example 
EX|so you,draw a few example,and the system synthesizes a list 
CD|and after the synthesis,you can go back,to the picture that i made 
CD|you can get,you can add more details and these are automatically applied to the synthesis result 
CD|and you can also change the density,and also you can change the curve shape later 
EX|OMITTED the next part example is flood fill synthesis 
EX|again,you draw a very few elements,an example,and then system automatically synthesize,the same texture to fill the region 
CD|and after that,if you want,you can change the flow orientation,just by drawing the strokes,and then picture will be modified to flo,flow,to flow direction 
EX|and again,you can change the details later OMITTED and here's an example of hatching 
EX|you draw a few e,e,examples,and then system predicts it 
CD|and after that,it will auto provide three dimensional effect,you can use a tilting tool,tilting tool,and then take,given the two dimensional drawing you can add,kind of,perspective effect,for individual regions 
EX|and here is a couple of example operations,so you paint this 
CD|and then you can get many,many hairs,just by sketching 
CD|and the auto-fill can be useful for the background 
CD|OMITTED and,here is the result 
EX|here's another example 
EX|see,you draw examples and then,fill the region 
CM|and then,you can use a perspective tilting to give a more,like,a three dimensional effect 
CD|and then background can be painted using the picture synthesis 
CD|OMITTED now,here is the result 
CD|so that's our video 
CD|and here's a couple of results painted by test users 
CD|so you can get this kind of eh,sketches with many,many repetitions using this kind of automatic texture synthesis 
EX|so this is one example and this is another 
CD|you can get detail,very detailed hairs and very detailed background and hatching,so on 
CD|and you can also get this 
CD|so i think NUMBER effect is used here and here 
CD|and the technique we did,use here is called discrete element texture synthesis 
EX|and so their technique takes input layout,example layout 
CD|and then it automatically senses a new,larger layout 
NL|automatically 
CD|without explicit repetitions 
CD|and what they do,is basically,iter,iteratively refine it 
CD|let's start with just simple repetitions 
CD|patch on the copy,repeated patterns 
CD|but gradually improves it 
CD|and then you finally get a very beautiful result 
CD|and for each step we do this 
CD|so,each step we repeat this 
CD|so first,for each element in the synthesized image 
CD|for each element in the synthesized image 
CD|we look for the element in the source image with similar neighbor fill or similar context 
CD|so,suppose you have an element here,and you have,you know,circle and bro,circle and box in this arrangement 
CD|you try to find the most similar arrangement 
CD|so that a matching phase 
CD|after identifying a match,then you compare the context 
CD|so this a synthesized context and this is original context 
CD|and then you compare these two and then try to find ideal position for the,surrounding object 
EX|for example,this box should be more to the left to be similar to the source 
CD|so in this way,you compute ideal,ideal positions,or target positions for individual element 
CD|for each pot,match 
CD|and individual element belongs to multiple matches 
AP|we simply take average of all the related ideal or target positions 
CD|and then move the object to the target position 
CD|so by repeating them,then you will get this kind of a result 
CD|so starting from simple multi-copies 
CD|and then you'll get seamless patches 
CM|okay so that's a brief description of the system called vignette 
SM|our original paper was published as a interactive texture designed migration with freeform gestures for pen-an-ink illustration 
CM|and the technique we used is called element texture synthesis 
SM|and,it was introduced in siggraph of thank you 
SM|our next topic is shape control by curves 
CM|and what we introduce here is called fibermesh 
SM|and what we propose is an extension of the previous technique,which called sketch NUMBER modeling 
SM|the difference is that original sketch stays and works as a handle 
CD|so here,the input is very similar 
CD|you draw something and you get NUMBER shape 
CD|however,unlike previous system,this curve stays on the surface,and then you can graph them and move them around and then they form the shape 
EX|let me show you a demo 
CD|so again,input is very similar 
CD|here's a just draw a line,and the system inflates it 
CD|however,as you see,your input stroke stays there and this serves as a handle 
CD|so you can grab them,and move upwards 
CD|and then,soft continuously changes 
CD|you can see it from the top,and then you can pull it sideways to see the shape 
CD|in this way,you can get more control,and you can get more smooth shapes,which was not possible in the polygon based system 
CD|and you can also add more contour curves in this way 
CD|and then you can grab this thing,to change the shape 
CD|and then like previously same you can also add an arm 
CD|and from the sideways,you can pull it down to change the shape 
CD|and here,as you see,we have two kinds of curves 
CD|the blue curves is a kind of smooth constraint,and the red curve is,as you see,a sharp constraint 
CD|and of course,you can change the categories 
EX|for example,if you change them to a blue,you know,as you see 
CD|you will get a smooth rendition and,if you want you can also erase them to remove any constraint 
CD|and you will get a very smooth shape 
EX|as an example is here 
CD|you draw a shape here,and then you draw a shape here 
CD|and here this is to literally to motion 
CD|and if you want,you can make them sharp,and then you're going to get this kind of shape 
CD|all right 
EX|let me show you a couple more examples 
CD|here you get this shape,and then you cut it here like this way 
CD|and then you get the shops,shapes 
CD|and then if you erase these parts,you can get shape 
CD|so here,you know,smooth shape,discontinuity here,but so this part is going around 
CD|and then again,you meet at a sharp crease 
CD|this is not easy to do compared to other approaches 
AP|you can use OMITTED it's always smooth,if you use this they are continuous boundaries and this is not easy 
AP|and after combining these operations,you can get these and other good shapes like these 
AP|you can make this kind of mask or a human body 
AP|or arms and so on 
CD|and the point here is that,traditional methods require the user to design 
CD|is models by manipulating individual control body,but here i use a control over a curves 
CD|and then we hope that this is a more intuitive and more efficient 
CD|and let me describe the algorithm behind the scene 
CD|so basic idea behind it is a user controls a curve 
CD|and the curves define the boundary,and the system automatically generates the smooth surface based on the curves by running a continuous optimization,trying to make a smooth surface as defined by the curves 
CD|so that's the basic idea 
CD|now let me describe the details 
CD|so curve deformation takes handle position as the input,and then generates curve geometry,updated curve geometry 
CD|and the surface optimization takes curve geometry as the input,and then generates a smooth surface 
CD|and let me describe the curve deformation first 
CD|so curve deformation works like this way 
CD|so you have this shape 
CD|input save,and then each segment has three dimensional coordinate frames 
CD|then,if you pull one point upwards,and then an assistant will define the entire curve 
CD|then,as you pull upwards,all coordinate frames also rotate together 
CD|what we do is simultaneously updates its position,its rings,and also quotation coordinate frame for individual segments,curve segments 
SM|this is a quick overview 
AP|please refer to paper for the details 
CD|minimize these functional,right,moving around quadrics positions and digital rotations 
CD|so we try to find very good more smooth quadric position and edgy digital rotations and minimize this 
CD|and what we minimizes here,is that difference 
EX|so this is this is a small laplacian which means,difference observed current position from the surrounding position,and then the current difference is rotated and it is compared to the current updated laplacian 
EX|and this preserves the local details 
EX|and this one tries to minimize the difference between neighboring rotations 
EX|so this tries to achieve smoother rotations 
EX|and then this one is tries to minimize difference between current position and the position of this line positions,the nearby positions 
CD|so,each one is a smooth position 
CD|this,try to minimize the difference between original position and updated position 
CD|similarly,this one tries to minimize previous current rotation and updated rotation 
CD|so by solving this system,system tries to find a smooth deformation 
CM|next one is surface optimization 
CD|and surface optimization takes as input a curve geometry and a mesh topology 
CD|and this is the input 
CD|and then system will automatically generate smooth surface 
CD|to do so system basically tries to minimize variation of curvature 
CD|you know,curvature is how curved the surface is 
CD|and then by minimizing the variation of curvature,system tries to generate a smooth surface 
CD|in a mathematical representation,it looks like this 
CD|so,kn is a curvature,and then kn derivative in both OMITTED axis and second axis,and then this represents curvature,and then curvature variations,and then we try to minimize this 
CD|and now fortunately this is no linear program 
CD|it's not easy to,or efficient to compute 
CD|so we approximate this by couple stepwise linear computations like this 
CD|a little bit complicated,but luckily we have two parts 
CD|two passes 
CD|so one is cover up,so left flow computes curvatures 
CD|so we first computer curvatures which is a scale of values,and then by blending or smoothing out we get target curvatures 
SM|so as you see,originally curvature has many variations 
SM|but by smoothing out,you get a more uniform target curvature values 
SM|so we tried to obtain these curvature values 
SM|and from these curvature values,multiplied by a surface normal,you get target laplacian vertices,vectors 
SM|so we try to obtain this lapracian vectors 
SM|in parallel,we also compute edge lengths 
SM|so free for us to compute current edge lengths 
SM|and then we compute target edge lengths,by blending or smoothing out 
SM|and then,multiply this target edge lengths with current edge vectors,you get target edge vectors 
SM|and by combining these target laplacian vectors and target edge vectors,we solve earliest square problem and you updated geometry 
SM|and the way you repeat multiple times,and then you get optimized smooth shape 
SM|so original paper was called fibermesh designing free-form surfaces with NUMBER curves 
SM|and similar technique that he's trying to gradually changing the safe considering local details was originally a presented at sketched based interface for detail-preserving mesh editing 
SM|and also our technique is kind of also learning surface fairing continuously 
SM|and it was inspired by work by geometric fairing or or irregular meshes for three,for free-from surface design 
AP|and we recommend to take a look at these works
CM|next topic we discuss is,spatial key framing for character animation 
CD|and,the work we introduce here was published spatial key framing for performance-driven animation 
CD|so the motivation here is,creation of character animation is tedious and difficult 
EX|so here's a list of,popular techniques,so key framing,motion capture,physics and scripting 
CM|keyframe is by the way the most popular technique 
CD|so you set key bodies of each time frame 
CD|so,as a program we want to address here is the creation of character animation is tedious and difficult 
CM|here are a list of current popular techniques of key framing,motion capture,physics,and scripting 
CM|so by ways the most popular technique is key framing 
CD|so you get a character and for each time you place a pose like time zero,this pose,time one,this pose,time two,this pose 
CD|so individual key framing 
CD|but however,this is very difficult to do 
CD|especially,for now we use to get a smooth animation using this key framing 
CD|if you do it poorly,it's like a robotic motion 
CD|and the another popular technique is motion capture 
CD|you can directly record body motion using the tracking systems 
CD|however this one requires special device,special space,and also scale,skilled actors which is difficult 
CD|the physics simulation is also used for but not good for designing character animation 
CD|and scripting is also used for a robotic motion,like change angle this to change this angle 
CD|however,this is not good for expressive character animation 
CD|so what we want to do is easily sketch or create,you know dynamic form motions or character 
CD|so the basic idea is very simple 
AP|we believe that the best,easiest way is to directly manipulate a character in front of the camera 
AP|and then press record,and then manipulate,and then stop and play back and do the same thing 
CD|so direct recording of performers should be the best way to do it 
CD|one problem here is that the typical input device is very limited degree of freedom 
EX|so for example,if you use a mouse,you only have OMITTED and OMITTED inputs,two dimensional inputs 
CD|however,character usually has a high degree of freedom 
CD|so each joint has three degrees of rotation freedom,and you have many many joints 
CD|so you have to control many joints with single mouse,which can be very difficult for a performance-based recording 
CD|so our proposal is to use spatial key-framing,so user or designer first specifies or prepares key poses in the NUMBER space and then blend them,depending on the control handle 
EX|so let me show you a demo 
EX|so,here is a character in the NUMBER space and then we make an animation of this character 
CD|and as i said,difficult project is key framing 
CD|you know,this time,this pose,next time,this pose,next time,this pose and so on 
CD|and it's very,very tedious to do this for a long animation sequence 
CD|so,our process is to directly record a motion 
CD|particularly,if but,if you use one by one,it's very tedious 
CD|in this you can only head,arm,or leg,but you can not manipulate all of them together 
CM|so our approach is to use a predefined key frame 
CD|so you say,this pose is associated with this position,and then next pause is associated with this position 
CD|and then,so you have two key frames 
CD|so,standard key frames associate with timeline 
CD|but here,key frames are associated with spatial locations 
CD|and by clicking you can jump to the key frames and by dragging you can plan these too 
CD|so now,you can only control three joints by a single mass 
CD|an interesting point here,is that you can add more,and more key poses very easily 
CD|so,you know have three key poses 
CD|and they blend together,and then you get a reasonably interesting motion already 
CD|and you can add more,and more operation of key poses,like a kick and kick and so on 
EX|all right,let me show you a couple more examples 
EX|so,so here,again,individual poses are not so complicated 
CD|however,if you hide,and then start moving around the ball,now you can make this teddy bear doing the juggling,just by using a two-dimensional mouse 
EX|and then another example is this one 
CD|so again,each individual coordinates are not so expressive 
CD|however,as you start moving them around,you can make him dance like this way 
CD|so here you know,your hand motion is directly appears in the character motion,so that the resulting motion is very expressive 
CD|so of course,you can let go of this motion you know,one,two,one,two,mm 
CD|so now you can get this animation and then now you get a motion 
CD|so you can see it from many different locations 
NL|okay 
EX|now let me show you a couple more examples 
EX|so here is a kicking motion 
CD|so you have many,many couple of key poses 
CD|and then by dragging this lead ball you can make the teddy bear make a high kick,as well as a low kick 
CD|and this is a mushroom,jumping,so you have five or six key bodies and then by directly manipulating that ball you can make this animation 
CD|OMITTED and this is a teddy bear in trouble,i think six key poses 
CD|and then,you know,he says no first,and they get idea,and be happy 
CD|so,you can make this kind of expressive emotion by using your hand motion integrated into the final 
CD|OMITTED here this eyeballs also have a separate joint so you can control their rotation 
CD|OMITTED okay,so let me briefly describe the algorithm to do this 
CD|so input to this system is handle coordinates 
CD|so,you have NUMBER mouse,and then you control the lead ball position using a mouse 
CD|and the output is the orientation of each joint 
CD|so,you have many in rotation angles 
CD|so,the question here is how to represent orientation angle,rotation joint angle 
CM|and there are a couple ways to represent joint angles like euler angles or quaternions but here we use a rotation matrix,so nine elements 
CD|like this way,so each joint has a three by three matrix for these represents also on our axis for each joint 
CD|and then what we need to control these nine parameters for each joint depending on the user input 
CD|so let's take this joint 
CD|so,this joint has suppose we have three special key frames,and then each key frame has this nine parameters for each joint 
CD|and then as user specifies the new handle position and then we need to compute three by three matrix for this position for this joint 
CD|to do this we basically blend these nearby three key poses 
CD|so you won't have to do this 
CD|let's take,we compute interpretation for individual elements or individual entry of these three by three matrix 
CD|so this is just a simple skeletal body interpolation and here we use a technique called radial basis function interpolation 
CD|so this is a scattered data interpolation using radial basis functions 
CD|this is a kind of stand out technique and you can use as a possible interpolation techniques 
CD|this is very easy to implement,very easy to use 
CD|the idea is very simple 
EX|so for a supposed example you have three skeletal bodies with special location 
CM|and then for each location,we have a kernel function 
CD|kernel function,and then we eh,compute most appropriate waiting or coefficients for each kernels 
CD|and then just by adding them together,you will get a very smooth,interpolating function 
CD|and if you want to know more,you can,i recommend you to take out paper by turk in so after computing this up line,this skeletal body interpolation for individual elements,you have nine elements in a three by three matrix 
CD|but unfortunately,if you apply our interpolation independently to these entries in resulting matrix,is not necessarily orthonormal,you know 
CD|rotation matrix needs to be,orthonormal 
CD|and also perpendicular to each other and also the directions should be equal to one 
CM|so after that we apply orthonomalization operation to these three by three matrix to get this one 
CD|i always skip details of this orthonormalization but there's a standard approach 
SM|okay,so here's a summary 
SM|so we introduce spatial key-framing for creating character animation quickly and easily 
SM|as a user defines key poses in the screen space,and then the system automatically blends nearby key poses 
SM|in order to do so,we use rotation matrix and then we use radial basis function interpolation for each element in the matrix 
SM|so to learn more,original paper was published as spatial keyframing for performance-driven animation,and if you want to learn more about interpolation by radial basis functions 
SM|there's a paper titled modeling with implicit surfaces that interpolate 
EX|here's an example 
EX|so use a space prior positions in NUMBER space 
CD|and then this technique generates a very beautiful smooth surface interpolating these points 
CD|and interpolation of NUMBER angles is popular topic discussion in graphics community 
CD|and the popular technique used is quaternion interpretation 
AP|and then i recommend you take a lot of original paper published in siggraph NUMBER thank you 
SM|our next topic is chair design 
CM|and the work we introduce here is called sketchchair 
CD|so the problem to address here is that design and construction of original chair 
EX|suppose you want to design your own chair,instead of buying something from the store 
CD|and there're so many issues to consider,you know 
CD|you know that to work as a functional chair you need to be physically valid 
CD|it should be stable and it should not break if you sit down 
CD|and also it should be easy to manually construct 
CD|so we present our design system specialized for chairs 
CD|so the design can be done by easy sketching and the system automatically checks its balance,or stability 
CD|and also system automatically generates a construction plan 
EX|so let me show you a demo 
EX|so,yeah,here's the system 
EX|and then you design your own chair 
EX|for example,you have a chair like this with a long back,and we have a leg like this 
CD|so,i just draw three strokes,and now you already have a NUMBER chair moving like this one,and then by pushing a print button that you will get two dimensional pattern 
CD|so after that,you can just print this into,send this data to a laser cutter,and then the cutter automatically cuts physical wood material and then you can get a physical chair 
CD|so after having this designed,you can also learn its physical validity 
CD|so,we also have some additional features 
CD|so if you press play button here,system tries to push this guy on this chair 
NL|so here,it's fine 
CD|you know,you can put down on a character on this chair 
CD|however,if you,you create unstable chair 
EX|so let me show you intentionally unstable chair 
EX|for example,if you have a chair like this and then if you put leg in appropriate positions,if you press play,and then you know,this is not very good,and then you,you see that this is problematic 
CD|so this is very simplistic,this is just a starting point but you see that physical validity checking is possible,and then can be useful 
EX|and let me show you a video 
NL|so yeah 
CD|i already showed a simple video,a demonstration already,but user draws a sketch,and then draw a leg,and then you will get the NUMBER shape 
CD|and then you can also additionally edit the shape profile by dragging to adjust the shape 
CD|and we can also adjust the leg 
CD|so if you spend more time,you're going to get more control 
CD|you can also,you know,edit individual layer to get more three dimensional shape 
CD|so then you can progressively move on to a more detailed design if you want 
CD|yeah as we see we also provide the polygon tool and also tool and also you can change the spacing between the layers 
CD|so,yeah,as i said the simulation,so you can take the stability of the chair,and also you gain stability of the chair,rocking chair 
CD|yeah,as we see,you can change the design while running a physical summation if you want 
CD|now we also implemented a couple of features to assist molding 
CD|so this one is using of this kind of accessory object 
CD|so you can see this kind of object has a difference to design,here 
CD|so use as designing a piano chair,so you can see the size 
CD|and it's not shown here,but it's,you can also change the proportion of the human figure if you want 
CD|so this feature allows a user to test many variations 
CD|so after designing this one,it's a previous one was hibernated 
CD|so you can temporarily pan off on the,you can test different one,and then go back and forth between different designs 
CD|okay,after our finish design,then you can get this profile and then you can send this to a printer 
CD|so fast easiest way is to use a cutting program with a paper cutter 
CD|so you can send this to a paper cutter,and then you can cut the paper 
CD|and then you can get the paper chairs 
CD|and this is cheapest way,so you can generate many designs 
CD|you can do many designs studies using this paper chair first 
NL|yeah 
CD|after having a paper chair,you can actually generate a big one by using a laser cutter 
CM|laser cutter is very handy too 
CD|so it's exactly like a printing machine 
CD|you just send two dimensional data 
CD|but then you will get this kind of wood material cut by according to the diagram and you get this 
CD|and by putting cushions around the surface,and then you'll get a more realistic chair 
EX|so here is some results 
EX|so these are the variation of paper chairs 
EX|a rocking chair we just saw 
EX|and then full sized chairs,like these 
EX|and this is a piano chairs 
NL|yep,so,that's it 
EX|here's a couple of examples,and so this is the big chair 
CD|yeah so we,this is a big chair,i just saw,and then so i have a small chair like this one 
NLD|this is 
CD|this can be a very good sitting form placer 
CD|okay so we use physical simulation here 
CD|we use an open source physics engine rigid body simulation 
CD|so we,we currently use bullet engine 
CD|but there are many other possibilities 
CD|so these physics engine is usually used for games,you know,NUMBER games and there are objects moving around,bumping each other,but these are now very popular,easy to use 
CD|so you can pick any simulation engine into your code and you can play along with it 
EX|and i think this work is a very good example of a new way of design seating 
CM|we call it meta-design 
CD|so traditionally,designers design final product directly 
CD|go through designers,design chair,so designer just physical shape of a chair 
CD|but here,in the future,i think designers will not only just use their physical shape,but also designers needs to design,design processes 
CD|so here in this project,designer or us,we actually design a process 
CD|and we de,define a process,and then inside with this process and the user will sketch and then system automatically generates us,these number of NUMBER chair 
CD|depending,taking user input,but also according to the designer's intention 
CD|and i think this kind of meta design process can be more and more important in the future 
CD|so,to learn more,original paper was published as sketchchair an all-in-one chair design system for end-users 
AP|and rigid-body simulation,if you now want to know the technique on implementation details,if you want to implement by yourself,recommended reading is rigid-body simulations,siggraph course NUMBER but if you want to just use it,there are many you know,packages 
AP|and as for the furniture design,i recommend you,i recommend you to take a look at youtube video from front sketch furniture 
CD|so this is interesting artwork 
CD|so user can try to sketch furniture in this NUMBER space,and then you will get physical object using a NUMBER printer 
NL|so,thank you 
CM|our next topic is garment design 
SM|the work we introduce here is sensitive couture for interactive garment editing and modeling 
SM|so,the problem we want to address here,is a design of a new novel original garment 
CD|and again,this is very difficult for inexperienced people 
CD|so,you have NUMBER cross pattern,and then you have three dimensional garment on the body 
CD|it's,what you want is three dimensional shape 
CD|but what you have to control is two dimensional shape 
SM|and it's very difficult to imagine what NUMBER pattern you have to get to get the desired NUMBER shape 
SM|so,that's a problem we what to address 
CD|and our approach is the same as the previous one 
CM|so we learn continuous concurrent simulation behind the scene 
CD|so user continuously edits are saved NUMBER pattern with mass operation and the system continuously applies physical draping across simulation 
CD|so user can directly edit to decide while watching the clothing in the NUMBER configuration 
NL|well,that's the idea 
CD|so the same as before,on the left side,you see NUMBER clothes patterns the user is editing 
CD|and on the ride si,on the right side you see clothing,putting onto the NUMBER body 
CD|and here the simulation is much more accurate than the one i showed for the stuffed animal design 
CD|so you can actually predict details,wrinkles and so on 
CD|so you can interactively edit the NUMBER pattern 
CD|and the system interactively updates clothing draping simulation results 
CD|so you can actually see some more wrinkles here 
CD|and then you can edit the shape 
CD|so as to reduce wrinkles if necessary 
CD|so traditionally,if you want to do this,you have to actually physically cut paper or a cloth material,stitch together and put on the mannequin,physical mannequin 
CD|and learn draping and see the result and then go back to the pattern and cut it again 
CD|it can be very,very long,long time,it's very slow 
CD|and those are computer based simulations also available 
CD|it's similar 
CD|you have to move the simulation engine simulation and then go back to the design 
CD|that's a problem 
CD|and also,technically,it's very,challenge to run physical simulations so rapidly 
CD|of course there are real time rapid cloth simulation existing already 
CD|but they,these physical simulation is for animation 
CM|so they assume fixed clothes pattern 
CD|so clothes geometry doesn't change 
CD|and the system learns lots of precomputation for efficient computation real-time 
CD|and then just draping learn animation 
CD|to learn simulation to create animation 
CD|however,here,the system,the user continuously change the rest of shape 
CD|which is,violates assumption of standard animation,animation simulation inaudible so that's a challenge we have to address 
CD|so if you do not like a wrinkle here,then you can just interactively add dart here 
CD|and then,you can immediately see how the resulting clothing looks more natural 
EX|okay,so this is one example and here's more examples 
CD|so,yeah,so design of t-shirt or garment for human character is not actually so difficult 
CD|there are many standard ways to design a garment 
CD|however,if you want to design a pajama for armadillo like here,it's a different program 
CD|no one knows how to design a character shirt 
CD|and especially if you wanted to buy a physically bodied garment,it's very difficult,and this kind of design tool can be very,very useful 
CD|so previously in computer graphics,garment of this character is a very cross mesh,there's no physics,just a polynomial mesh 
CD|but recently,game engines are very fast,more efficient 
CD|so we use,people starting to use physical assimilation for these garments 
CD|now then,it's necessary to design physical bodied garments 
CD|so that's these are why you need this kind of tools 
CD|so here is a comparison with a real one 
CD|the left side is a computer graphics view in your simulation,and the right hand side is the physical construction which we NUMBER printed 
CD|this kind of character and also we physically stitched together this garment 
CD|and as you see,of course,it is not NUMBER millimeter size exact match 
CD|however,you see the general pattern like sleeve folds here and then you see full sleeve folds here 
CD|so i think this is enough for our initial design 
CD|and we also design real size garments using system 
CD|so this is just,just screen snapshot 
CD|we're using track to edit to save 
CD|and then you see continuously see the NUMBER result 
CD|and then we print it into a larger format,real size print 
CD|and then you put pattern into a cross and you stitch it together and then you get a wearable results 
NL|okay 
CD|so let me briefly describe algorithm 
CD|so,again,so oh,complete implementation is beyond the scope of this short video 
CD|but i can briefly describe the basic idea behind it 
CD|how to make it faster 
CD|so this is a fundamental equation 
CD|mathematical representation of the problem we trying solve here 
CD|so we have NUMBER input pattern 
CD|this is the input from the user 
CD|so user specify NUMBER clothes pattern 
CD|and then what we,ha want to compute is NUMBER cloth shape 
CD|so,yeah 
CD|so input these xy coordinate positions or we input clothes,and the output is xyz position or or when you give your body shape 
CD|so NUMBER cloth shape,this is output you want to get 
CD|and then we cover function,that represents an additional set of NUMBER cloth pattern input and NUMBER cloth shape output 
CD|and this function returns,if it is satisfy the physicality,body natural shape 
CM|and this function is called the residual 
CD|so if the NUMBER cloth shape is not in the desired,appropriate physically balanced shape 
CD|this zero becomes bigger,larger 
CD|and then we,we gradually,this residual are smaller 
CD|they get more physically realistic results 
CD|so that's the problem we try to solve 
CD|and visually,the situation looks like this 
CD|so you have a space of varied designs 
CD|and on this view,on this axis,you have many different two dimensional cloth patterns 
CD|so use the space for that starts from this pattern and then moves to another pattern,and use the edit 
CD|and for each shape,you have a single iso surface,or space-specific region,where OMITTED becomes NUMBER so here,it's represented as a single line,single cloth line 
CD|so,for the given NUMBER clothes pattern,we take a look at the region where the OMITTED equals NUMBER and then look at the NUMBER shape,and then you will get the proper NUMBER output 
CD|so this is a,very very simplified view of what's going on internally 
CD|the program is at,notice here 
CD|so r,the residual is very highly non-linear and very,very slow to compute 
CD|so,yes,so OMITTED is very curved and very complicated 
CD|when you change the pattern,you have to recompute r,which takes too much time 
CD|so we,what we use is a kind of a stanadard 
CD|but we use a linear appro,approximation around the current state 
CD|so visually,it looks like this 
CD|so,this a current design and then you compute the linear appro,approximation of this residual function 
CD|and this method called,called sensitivity analysis in structural analysis 
CD|and then after computing linear approximation it's kind of easy,to predict the,compute from NUMBER input to NUMBER shape 
CD|just by solving our linear system 
CD|which is faster 
CD|of course,this is an approximation near this design 
CD|so,if you go farther away,then it's,it becomes too different 
CD|so and your system 
CD|so single linear appropriate is nothing now 
CD|users who're walking far away from the linear state 
CD|it's a difference from the real physically realistic result gets bigger 
EX|so in that case,we compute another approximation here right this way 
CD|and then,so we cache multiple linear approximations occasionally and then blend them 
EX|so,in this case,if you have two examples and if you blend these two,you get a very,very close approximation 
CD|and this is still very fast to compute 
CD|so that's what we do in internally 
SM|so caching happens occasionally 
SM|so,the user,the system continuously monitors 
SM|users the dragging operation 
SM|and then when the users dragging getting far away,you create another cache 
SM|now you have two cache,and you move far away from these two caches,the system will generate another 
SM|so in this way,the system incrementally,the more and more caches 
SM|so this is a summary 
SM|so we presented garment design with concurrent physical simulation 
CD|so we edit a NUMBER pattern 
CD|and the system presents NUMBER draping results 
CD|and then we have uprising sensite,sensiivity analysis which is linear approximation 
CD|and those are multiple caches before providing rapid feedback without random simulation each time 
AP|so,to learn more the original paper was published on sensitive couture for interactive garment editing and modeling 
AP|and the garment design is also a hot,popular topic in graphics community 
EX|and one example is virtual garments,a fully geometric approach for clothing design 
CD|so,in this project,they did not use any physical simulation 
CD|purely geometry approach,but the,but they can rapidly generate reasonable shapes this way 
NL|thank you 
SM|our next topic is actuated puppet 
SM|the what we introduce here is an actuated physical puppet as an input device for controlling a digital manikin 
SM|the motivation here is that NUMBER character posing is difficult 
EX|so,suppose you have a character that you want to set the posing 
EX|and the most popular approach i think is NUMBER widgets 
EX|on the screen,you have a widget like this,and you use a mouse to control individual joy dongles 
CD|however,this is very tedious to control individual joint dongles 
CD|for each joint,you have three angles,one by one,can take much time 
CM|another approach is the motion capture 
CD|you have a capture device and a unit 
CD|however,you need dedicated environment,and that you also need a skilled actor,actor 
CD|and also another possibility is to use physical input device 
CD|this is very convenient 
CD|you can grab a puppet and then pose,and you get the NUMBER view 
CD|so you can use both hands can be very good 
CD|however standard physical input devices very stiff 
CD|you know if you,if it to relax,it can not hold a pose 
CD|and if its stiff enough to hold a pose,it's very hard to control 
CD|and also you have to control,manually,space for all joint angles,which is inconvenient,in some cases 
SM|so,our approach is to add several motors to each joint,so we get an actuated physical puppet 
CD|so we not only use puppet as input device,but also the device reacts to the physical batch of data to provide active feedback 
CD|and there are couple benefits to it 
CD|first,it's easy to load existing pose into the robot,so you can start from existing pose to accelerate posing 
NL|so it's one benefit 
CD|another is intelligent gravitational compensation 
CD|here's a little bit explanation 
CD|as i said,if the joint is all free,it's easy to control 
CD|but you know,the it can not hold it's posture 
CD|so it's inconvenient to and then another approach is always approach turn off the sabo motors 
CD|then it can be too stiff 
CD|it can hold existing pose,like this legs 
CD|however as a negative side it very hard to control,change a pose 
CD|so what we do is,adaptively do it,intelligent gravitational compensation 
CD|so if you do not touch this arm,these legs,its con,fixed by a sabo motor by producing a power against grav,gravity 
CD|however,if the user start to manipulating the joint,the system automatically detects it 
CD|and then automatically turns off some sabo motors,so you can push a berry with very light weight force 
CD|so,that is intelligent gravitational compensation 
CD|and then finally,we also implemented active guidance,using measured human data 
CD|and this consist of joint coupling,and data driven inverse kinematics 
CD|let me describe a little bit more 
CD|so joint coupling is two joints work together 
EX|what's easy to understand the example is this hip joint,and knee joint 
CD|you know,as you know if you move your leg 
CD|upwards you if you control hip joint,then knee joint also follows,right 
CD|it's very hard to keep the legs straight as you rotate the hip joint 
CD|so,if you rotate the hip joint,it's very natural to also bend the knee joint together 
CM|so,this is joint coupling 
CD|and with actuation you can do it,you know,if you control the hip joint,the system will automatically rotate the knee joint 
CD|this is joint coupling,which is very useful to generate very natural human posture 
CD|so this one automatically avoids,unnatural configuration 
CD|the another is,data driven inverse kinematics 
CD|if you just control position 
EX|for example,suppose you control the fingertip,and they go downwards,and if you apply simple inverse kinematics result is like this 
CD|so it's mechanical value 
CD|geometric,geometrically bodied 
CD|finger tip follows the user control 
CD|however,joint only rotates along the alo,along the arm 
CD|and then,resulting pose is very strange,a unnatural force 
CD|and instead of that,we use data 
CD|we measure up,lots of natural reaching gesture,over humour 
CD|and the user synthesize appropriate motion 
CD|so here if the user pull down the fingertip downwards,and then the character,the robot,automatically puppet moves making a very natural motion,using data 
EX|so,let me show you a video 
CD|so as i said physical puppet not only controls a physical body of character,also body of character provides feedback to the physical puppet to guide not to oppose anything 
CD|OMITTED to the eight degrees of freedom and connect to the pc 
CD|yeah so primarily it's an input device 
CD|you control the pulse,and then you sink OMITTED up the same pulse 
CD|so this provides a very intuitive way,of controlling character posture 
CD|this can be very tedious,if you use two dimensional mouse 
CD|and one benefit of using sabo motors is,uploading pre defined postures into a robot,our puppet 
CD|so,you can get pre-defined postures in to the puppet 
CD|so this is a very good starting point for design,and then this is gravitational compensation 
CD|you know,if the torque is off to relax then it can not hold a given posture,you know,if you release it goes down 
CD|and on the other hand,if you to,always turn on the torque power,then it can hold the posture,but,very rigid,you know 
CD|you need strong power 
CD|to rotate 
CD|and this is a result of automatic gravity compensation 
CD|so as you start pushing 
CD|the system turns off the power 
CD|so,you can change the pose,with very light weight force 
CD|but also,system can hold the posture after release 
CD|and then,this is a result of data-driven ik 
CD|so,if the data-driven ik is turned off 
CD|the motion is very unnatural 
CD|it's very robotic motion,because the robot doesn't change entire body shape 
NL|however 
CD|if you turn on the inverse driven,data-driven ik,then the resulting motion is vary natural 
CD|so user control the fingertip,and then system automatically bend his legs and then move the head and other arm 
CD|and this is a joint coupling 
CD|the user is controlling the hip joint,and the system automatically controls knee joint,so 
EX|so,let me show you a couple application scenarios 
EX|so,suppose you design in car seat,and then the visibility should be preserved 
CD|so this,in this way,you can intuitively control the detail monitoring in the car environment 
CD|and you can check the here,is reachability 
CD|so you can check whether this puppet can meet specific target in the car 
EX|so this one is load assessment 
CD|so this led indicates where the power is necessary to hold the posture 
CD|so,this is useful for analysis of environment 
EX|and this is a visibility analysis 
CD|so by changing the posture of puppet,we can see which part of the environment the puppet can see 
CD|so that's the idea 
CD|so let be briefly describe the algorithm 
CD|specifically,i will briefly describe how to do data-driven inverse-kinematics 
CD|so as i said,data-driven i case like this 
CD|if you move a fingertip,then the puppet makes a very natural human like motion 
CD|in order to do so 
CD|we get data 
CM|but let me first describe inverse-kinematics in general 
CD|so in that inverse-kinematics,is a very fundamental program,in character animation or also in robotics 
CD|so suppose you have this kind of arc,you have a base here,and then you have joint one,joint two and joint three 
CD|and you have each joint angles 
CD|so,forward kinematics is the standard way 
CD|so,given joint angles,you get the position of the fingertip 
CD|so,this is fairly deterministic single computation 
CD|however,what people usually want to do is to specify target x,y position of fingertip 
CD|and then try to convert appropriate joint angles 
CD|this is very infrequently occurring problem to solve 
CD|and then it looks like this,given x,y,you have gone to joint angles 
CD|this is inverse problem,which is very difficult to solve 
CD|for many solutions,many other and there are couple possible ways like purely geometric 
CD|so something like,minimize a change from the current configuration or physically most you know,physically most plausible shape,or as a data-driven 
CD|and data-driven is a method we use 
CD|so,we do some synaptics 
CD|in the motion capture environment,we ask for the person to reach many places around his body,and then we measure all the postures,to get always position 
CD|so you get many data like this,x,y,z position,and joint angles,x,y,z position,and joint angles 
CD|we get many data of these samples 
CD|and after that user input is target fingertip location 
CD|and then we are identify the nearby samples 
CD|and then just blend them together 
CD|and then you'll get,a desired joint angle 
CD|so this is what we do in the data-driven inverse-kinematics 
SM|so here's the summary 
SM|so we presented,i presented actuated puppet device for character posing 
SM|the user controls a virtual character,using physical puppet,and also gets feedback from the system 
SM|and one important feature is intelligent gravity compensation,and active guidance from the system 
SM|and we,i present the data-driven inverse kinematics 
EX|so,we take many snapshots,example for this,and then blend them together to get natural posture 
CD|so,to learn more,original paper is titles,an actuated physical puppet as an input device for controlling a digital manikin 
AP|and if you want to know more about the previous standard puppet devices,there's two papers 
CD|dinosaur input device 
CD|and those of mice and donkeys,and specialize in the device for OMITTED for the animations 
CD|and inverse kinematics,as i said,lots of work on these topics 
EX|so example base like is this one 
CD|artist directed inverse kinematics using gladiator basis function interpolation 
EX|so this is an example of a data-driven inverse icad 
CD|and also there is a geometric approach 
CD|so natural motion,animation solute constraining,and deconstraining at will 
CD|so this one introduces a purely geometric approach,to get natural posture from finger tip positions 
NL|that's it for this week 
NL|i guess OMITTED 
NL|music hello 
SM|welcome back to the course on web connectivity and security in cyber physical systems 
SM|this lesson starts a module on web solutions for embedded systems 
SM|in this video lecture,we will walk you through web servers that are inherently designed for low power embedded systems 
CM|we call them embeddable web servers 
CD|but first of all,what is a web server 
SM|if you have been following the lessons in this course,you might remember that in an earlier lecture we talked about the key technologies that enable the world wide web 
CM|these technologies are html,http and webservers 
SM|http has been discuss in detail in other lessons 
SM|today,we will look into web servers 
CD|the protocol http works on a client server model 
CD|a client sends a request to a server and the server responds 
CD|therefore,web servers are applications that accept,read and respond to the http requests from clients 
CD|one of the principles of a web server is that it's always responds to a request 
CD|the response can be some information that the user requested or an error message 
CD|but the server will respond 
CD|what if the server is too busy to fulfill a request 
CD|then it will send an error message with a status code NUMBER indicating that it's temporarily busy 
CD|the next question you might have is,okay,i now know that i have to request a web server,but how do i identify and access one 
CD|this is what urls are for 
CM|url stands for uniform resource locator and as the name suggests,it is used to identify resources on the web 
EX|on the screen is an example url 
CD|it has three parts 
CD|the first is the protocol,in our case,it is http 
CD|the second is the ip address of the machine where the web server is running 
CD|and the third is the location of the resource or file that we want to access on that machine 
CD|so at the very least,a web server should be able to understand http and urls 
CD|next,we will look into web servers designed for lightweight use 
CD|when you are on your computer and you want to access the web,you open a browser and type the url of the web server that you want to access 
CD|similarly,if you want your embedded device or sensor to access the web,you don't need a web server 
CD|all you need is a small client that can send and receive http requests 
NL|simple enough 
CD|but what if someone else on the web wants to access your embedded device or sensor 
CD|then you will need a web server 
AP|remember,web servers comes in all sizes and shapes 
EX|from resource heavy ones like apache to light-weight ones like inaudible and nginx 
CD|but we are looking for web servers that will run on devices with a few megabytes,even kilobytes,of ram and with very limited processing power 
CD|web servers that are small enough that you can execute them as part of your standard application code 
CD|we will look into two of these small,lightweight web servers,smews and mongoose 
CD|smews stands for smart and mobile embedded web server 
CD|it is developed by researchers from lille university in france 
CD|it can run on devices with as low as NUMBER bytes of ram and kilobytes of flash memory 
CD|it supports multiple connections and doesn't require any operating system to be installed in the system 
CD|it has its own tcp/ip stack 
CD|this web server comes as a very compact and complete package 
EX|mongoose is another embeddable web server 
CD|it's open source and free for non-commercial use 
CD|mongoose is more advanced and also heavier than smews 
CD|the list of features that mongoose supports is on the screen 
CD|it's constantly being developed and more features are being added 
CD|we have tested an implementation of mongoose in our lab and it was able to handle up to NUMBER clients and million request in total on our test set up 
CD|to show you how to use an embeddable web server in your application,we will use mongoose 
EX|let's look at an example scenario 
EX|imagine you have a temperature sensor whose value you would like to access via your browser 
CD|we will not go into too much detail but we'll only explore the basic functions that we need to implement the scenario we just defined 
CD|first of all,include the mongoose header file into your OMITTED program 
CD|next we will use a function from the mongoose api or application programming interface,that enables us to handle incoming requests 
CD|in this function,we will specify what happens when a user access a specific url or uniform resource locator 
CD|if you look at the line number NUMBER,we have defined that if the access uri or uniform resource identifier is /temp,the program should take three actions 
CD|call a function to check the temperature,send the temperature back and close the connection 
CD|the last step is to build the main function and call the web server 
CD|how that is done is shown on the screen 
NL|and that's it 
CD|in three simple functions you can make your applications or devices respond to http requests 
EX|now as a last step in this example,if you go to any browser and type the url in the form shown on the screen,you will get the temperature as text 
SM|to summarize 
SM|in this lesson,we learned about basics of web servers and looked at an example web server application 
SM|in the next lecture,we will look at web services and their dominant technologies 
NL|sound 
NL|sound 
SM|hi,welcome back to the video lectures on web connectivity and security in cyber-physical systems 
SM|this lesson starts the second part of the course 
SM|this part includes two modules,and it's dedicated to system security issues and their solutions 
SM|we will learn about different security technologies and methods and learn how to utilize these in securing and protecting cyber physical systems against cyber attacks 
SM|in this video lecture,we will look into basic security requirements of cyber physical systems 
CD|several physical systems facilitate a wide range of solutions and services that help people in their daily lives 
CD|however,providing these solutions and services in a reliable safe and secure manner is not at all trivial 
CD|on the contrary,there are many challenging issues that need to be appropriately addressed 
EX|for example,dealing with sensitive or safety-critical data,if this data is not properly protected,can lead to significant financial losses,loss of privacy or reputation,mental suffering or physical damage 
CD|it could even endanger lives 
CD|so,among issues and challenges involved in design and deployment of cyber physical systems,security has a very important role 
CD|cyber physical systems have their own specific security issues 
CD|this is because of their special characteristics 
CD|first of all,as they are involving physical processes,they are tightly coupled with their physical environments 
CD|so any changes in their environments,especially on expected changes that haven't been considered at design time will affect them,and potentially make them more vulnerable to security breaches 
CD|this is true the other way around as well 
CD|security breaches in cyber-physical systems can have serious influence on their environments 
CD|second,cyber-physical systems can be composed of a very large number of different devices with different computing platforms and capabilities 
CD|in general,most devices in cyber physical systems are resource constrained,meaning that they don't have much processing,storage,or power capacity to execute complex operations 
CD|this poses challenges for applying efficient security counter-measures that may require a relatively high amount of resources 
CD|third,cyber-physical systems can be massively networked systems 
CD|they can use various communication technologies between devices ranging from simple wired connections to different wireless technologies with different ranges and characteristics 
CD|so they can be highly complex and heterogeneous systems making it harder to find optimal solutions to ensure secure transmission of data everywhere in the system 
CD|finally,cyber physical systems are typically highly autonomous with embedded intelligence controlling many operations 
CD|this reduces the need for manual control and supervision 
CD|which on one hand is an advantage,because the risk for human error is reduced 
CD|on the other hand,the user must be able to rely on the autonomous system to be protected against malicious attacks that aim to secretly alter the behavior of the system,or to steal sensitive information 
CD|in general,we can classify the security requirements of cyber physical systems into several categories 
CD|in a system,which interacts with a physical environment,validity and accuracy of sensed data is very important 
CD|so,proper protection of sensors and their data is of high importance in such a system 
CD|data collected from multiple sensors needs to be store temporarily 
CD|malicious unauthorized modification of this stored data results in errors and is further processing and can have serious consequences 
CD|for this reason,the data while in storage needs to be protected against any unauthorized access and modification 
CD|in some large cyber physical systems,the data may be collected from a very large group of sensors over some time period resulting in a very large set of data or beak data 
CD|the more data you have the more complex and difficult it is to properly secure this data 
CD|many cyber physical systems are networked and distributed 
CD|sensitive data is transmitted through heterogeneous communication channels 
CD|communication security is needed within a system and between systems 
CD|we will discuss different communication security protocols in other video lectures 
CD|in a system which carries out autonomous operations through its actuators,it is of key importance to make sure that all actuations are authorized and according to the latest policies of the system 
CM|feedback loops play an important role in cyber physical system control 
CD|a system's embedded intelligence and ability to learn are largely based on feedback of its actuations 
CD|therefore the feedback data needs to be appropriately protected against tampering attempts 
AP|finally,the system may have some application specific security requirements,depending on the nature of the applications running in the system 
AP|cyber physical systems have both physical and cyber aspects that need to be taken into account when designing security counter measures 
AP|in developing security solutions for cyber physical systems,we need to keep in mind that attacks can also be indirect meaning that they can aim to affect the physical environment in such a way that data coming from sensors is corrupted and misleading resulting in unexpected behavior or even system failure 
AP|the system needs to be designed to detect abnormal physical conditions,and act in a safe way in these situations 
AP|also,the system should always be protected against physical tampering whenever possible 
AP|security counter measures must be considered in the design phase of a cyber physical system 
AP|security by design means designing the system as free of vulnerabilities and resistant against attacks as possible 
AP|this can be achieved by continuous testing and careful design of rigorous authentication solutions and hardware and software components of the system 
SM|in this lesson,we discussed different security requirements of cyber-physical systems 
SM|in the next video lecture,we will learn more about the key security concepts in cyber-physical systems 
NL|sound 
NL|welcome to the web connectivity and security course 
SM|in this course we will study different web connectivity standards,solutions,and protocols 
SM|we will also study the need for security as well as protocols,methodologies and solutions that will help you mitigate security risks 
SM|before talking about web connectivity in cyber-physical systems,the first question that arises is,why then bother connecting your embedded systems 
CD|if there is a device that controls the settings on my microwave oven,what need does it have to talk to other devices 
CD|this is a valid point 
EX|standalone embedded systems do exist and cater to a specific problem as in the case of a microwave oven 
EX|another example is an image processor in a digital camera 
CD|whose purpose is handling the light capture from the sensor and to digitize,process,and store that information as an image 
CD|it performs that specific job and does it very well 
CD|the reality is that devices are getting more and more complex and that connection is needed 
CD|the same digital camera now has wi-fi and gps modules to offer seamless transfer of photos and a geopack then 
CD|these wi-fi and gps modules have their own baseline processors and for all of them to work seamlessly,you have to bring them together 
CD|you have to connect them 
CD|any reasonably modern car can have NUMBER to NUMBER onboard processors 
CD|a modern NUMBER bmw has up to a hundred processors 
CD|all of these control different functions of the car 
EX|for example gps navigation,entertainment,parking distance control,radar cruise control,and so on 
CD|to make the car really function and provides a safer journey,the processors have to communicate with each other 
EX|a classic example is that of a car crash 
EX|in case of a crash,your car will open the door locks and deploy the air bag 
CD|it may perform other emergency functions like flashing the headlights,and sending your location coordinates to an emergency service 
CD|all of this is possible because of the in-car network 
CD|if you think this is too much,nvidia announced car computation platform that has a combined performance of teraflops 
CD|to put this in perspective,the world's NUMBER super computer in NUMBER had a computational power of NUMBER teraflops and that one had NUMBER processor cores 
CD|so,soon your car will have the same computation or capability as the super computers in NUMBER and here we only discuss the self-contained local networks within cars 
CD|soon cars will be able to communicate with other cars on the road and with the traffic monitoring systems 
CD|thus,the future is connected and connectivity is not optional anymore,it's fundamental 
CD|after establishing the case for connectivity in cyber-physical or embedded systems,the next question would be why do we need web connectivity 
CD|here we need to have a deeper look 
CD|let's first look into the benefits of web connectivity 
CD|the first and foremost benefit is ubiquity 
CD|the web is everywhere,from your pc,to phones,to even smart watches 
CD|you can access the world wide web not only on smartphones but also on dumb phones from a decade ago 
CD|all you need is a browser 
CD|a browser like opera mini that can even be bundled into embedded systems 
CD|scalability is another important point 
CD|the world wide web is already quite large and it can accommodate even more sources of information and users 
CD|web technologies can automatically scale,based on demand,with minimal user intervention 
CD|they can scale to user needs,computational load,or network requirements 
CD|the world wide web has been with us for well more than two decades now 
CD|that is enough time to test and optimize the web-enabling technologies,html,http,and web servers are fully understood 
CD|there are highly optimized web servers available for small sensors that take less than seven kilobytes of space,which is an efficient use of memory 
CD|one of the main features of web technologies is that they don't care about the underlying architecture or technologies 
CD|one web-supported device can communicate effectively with another one,irrespective of the system and communication infrastructure used 
CD|lastly,major future technologies will reside on the web or heavily utilize the current internet technologies 
CD|let's take cloud computing where you are provided with on-demand computational power and services 
CD|you can use these services for big data analytics and then utilize these data insights for better decision-making 
EX|imagine gathering data from hundreds of thousands of sensors,then transferring this data to the cloud for storage and processing,and afterwards relaying this decision back to the nodes or an actuator to activate 
CD|despite the benefits of web connectivity,it also comes at a cost 
CD|with web connectivity,you get to leverage the cloud computing infrastructure,remote monitoring and assessment as well as remote command and control 
CD|however,the very first thing for people involved with design and development of connected embedded systems is an increase in complexity 
CD|compared to a stand alone setup,a network connected system requires extra effort in network design and connectivity solutions,and in hardware and software design to enable that connectivity 
CD|in later videos we'll discuss more on the choices you have when it comes to network connectivity 
CD|moreover,with web connectivity you inherit its security issues as well 
CD|when you connect your cyber-physical systems through the internet,you open then to roughly the same level of security weaknesses and attacks as in other internet-connected networks 
CD|security can't be an afterthought anymore 
CD|if you are building a connected system,security should be an inherent feature right from the beginning 
EX|in case of the car example,you have a network limited to the car's internals 
CD|so,locking the door will effectively lock out most thieves from accessing the computer systems 
CD|but when you connect that car to the internet,you can't rely on locking the doors only 
CD|you have opened the car to attacks from anywhere in the world 
SM|but be assured,we have technologies,protocols,and solutions that will help mitigate these threats 
SM|and we'll discuss them in later videos 
CD|and lastly web connectivity is resource heavy 
CD|for really small low power devices,memory and computational power are a limited resource,connectivity puts an extra burden on these resources 
CD|depending upon the connectivity solutions,solutions that you choose,you will have to add the extra hardware and software layers to communicate and that takes both memory and processing power 
CD|some solutions are more resource hungry than others and we will discuss that further later on 
CD|but nonetheless,connectivity adds an extra cost 
CD|additionally,if you decide to add security,which you should,you'll need some sort of cryptographic algorithm to secure your data 
CD|cryptographic computations are processor-intensive,meaning that they put a lot of strain on the processor 
CD|this can drive up the energy consumption as well 
CM|let's discuss connectivity in cyber-physical systems in a general context 
CD|of course,it's nice to have an overview of your home when you are on vacation or remote start your car in a freezing weather so,it's warm when you get inside 
CD|or to be able to assess what's wrong in the production plant without physically being there 
CD|but,you will come across situations where you won't need web connectivity 
EX|for our very daily life for example,do you really need to connect your stand-alone coffee machine to your wi-fi 
CD|of course you might think,it's just a coffee machine 
CD|what can go wrong if hackers get access to it 
CD|over boil my coffee to give it a bitter taste 
CD|the thing is that through your coffee machine if its security is weak,hackers will get access to your network and from there they can go to your system or anywhere 
CD|in this case,the coffee machine is not the target itself but,another attack vector against your system 
CD|so,yes,there are benefits to web connectivity and there are the downsides 
SM|what you will need to do is assess whether you really need web connectivity or not 
SM|once you decide on the former,you'll need a proper implementation 
SM|that is where this course will help you 
SM|by the end,you'll be more informed about the protocols and solutions available to you 
CSM|and you will be able to make informed decisions when it comes to adding connectivity to your embedded solutions 
NL|music 
SM|sound hello,welcome back to the course on web connectivity and security in cyber-physical systems 
SM|this lesson starts a module on link layer connectivity protocols and application layer communication protocols 
SM|in this video lecture,we'll talk about connectivity solutions available for embedded systems 
SM|in other words,we will focus on machine to machine or m2m connectivity protocols and their basic characteristics 
SM|machine to machine connectivity protocols facilitate the establishment of a connection between two or more devices 
SM|here we will be discussing the protocols that reside on the link layer of the tcp,ip model 
CD|they establish a path between two end points 
CM|for our cyber-physical system case,the connectivity solutions can broadly be divided into two main categories,wired and wireless 
CD|wired connection are the one's that require a physical connection between endpoints 
CD|while in wireless connections,we don't have any physical medium 
SM|as we will see this classification affects the abilities of the protocols in many ways 
EX|for example range,date rate,and power consumption 
CD|wired connections generally tend to have higher date rates and higher power consumption but this is not always the case 
CD|there are certain parameters that help us defining and distinguishing connectivity protocols 
CD|mainly range,data rate,power consumption,topology,tcp/ip support,spectrum,estimated node support,approximate cost 
CD|well,each of these will be discussed in this lecture 
CD|the range defines how far away or to what distance the protocol can offer connectivity 
CD|based on this definition of range,we divide the protocols broadly into four logical categories,pan,lan,man,and wan 
CD|pan or personal area network interconnects devices within the personal space of an individual 
CD|the range is typically from ten centimeters to ten meters 
CD|lan or local area network interconnects devices within a limited area such as a home,office,or building 
CD|it ranges typically from ten meters to some hundreds of meters 
CD|man or a metropolitan area network interconnects devices within a city or district covering several buildings,a large university network and a citywide municipal network are good examples 
CD|the range is typically from NUMBER meters to some tens of kilometers 
CD|wan,or wide area network,generally has no geographical restrictions on its location or size 
CD|the wan enables different lans to connect to each other 
EX|although the distance is not a limit as such,a wan can be restricted to a specific country for example 
CD|the data rate defines how much data per second you can transfer 
CD|or how much data the protocol can theoretically transfer per second 
CD|in wireless networks,the theoretical maximum is generally quite different from actual results 
CD|for cyber-physical systems,we divide the data rates into low,high and very high categories 
CD|low data rates transfer up to one megabits per second 
CD|high data rates more than one to two megabits per second 
CD|and very high data rates more than NUMBER megabits per second 
CD|this classification doesn't apply when thinking in terms of typical human usage of networks 
CD|remember that two megabits per second of sustained throughput is pretty high for most embedded systems,because your smart energy meter or smart lighting system,like philips hue,doesn't watch netflix 
CD|data transfers are typically periodic updates which do not require high data rates 
CD|power consumptions gives you an idea about battery life and a data throughput of your interconnection protocol 
CD|generally,the lower the power consumption,the lower the data rate 
CD|higher rates mean the device is on for longer periods of time and has to process more and faster,thereby increasing power consumption 
CM|here we divide power consumption into two categories,idle and active 
CD|idle power consumption is the power used when the devices is in the state of rest 
CD|meaning,no communication is taking place 
EX|idle power is a significant factor,for example,in sensor networks 
CD|where sensors are mostly idle communication wise 
CD|active power consumption is the power used when a device is in the full communication mode 
CD|this will give you the battery life of your node when the node is under full communication load 
AP|another consideration is whether the connectivity protocol and modules offer different power profiles 
CD|such as idle state enabling profile,low data rate profile,receive only profile,and transmit only profile 
CD|each of these save battery power in its own way 
CD|the topology refers to the interconnection between different nodes in the network 
CD|there are different ways a protocol might allow devices to connect to each other 
CD|the most common or dominant ones are the following 
CM|in a bus topology there's a central line or bus and each device is connected to that line 
CD|so logically each device is directly connected to the other devices 
CM|in a star topology we have a central node or server and each device connects to this server 
CM|in a mesh topology,each device is connected via point to point links to two or more other devices 
CM|in a full mesh topology,each device is connected to all other devices in the network 
CM|a tree topology is a mixture of the star and bus topologies 
CM|in a tree network,two or more star networks are connected by a bus network 
CD|an important question is,does the connectivity protocol support tcp/ip on the higher layers 
CD|this is essential in two main ways 
CD|first,supporting tcp/ip means easy aggressing and connectivity to existing internet or legacy systems that are already deployed 
CD|second,it makes web connectivity very easy 
CD|in case there is no support for internet connectivity,a gateway can be used 
EX|for example,a large set of smart tags can connect to a central server,which is connected to the internet 
CD|in this case,the central server is the gateway to the internet for those tags 
CD|gateways have their benefits and drawbacks 
EX|for example,they add extra cost and complexity 
CD|on the other hand,they can be used to offer extended functions 
EX|a gateway could,for example,encrypt data coming from the tags before passing this data to the internet 
CD|or it can manage authentication and limited access to each tag 
CD|by doing so the gateway essentially extends and complements the services provided by the connectivity protocols themselves 
AP|it is important to know which part of the microwave spectrum a wireless connectivity protocol uses 
CD|there might be regional restrictions on the spectrum which is used by your device 
CD|or a device might be operating in a commercial band requiring you to get a license to operate 
CD|there are different bands but for simplicity we can divide them into two categories,free and commercial 
CD|the free band is the portion of the wireless spectrum that doesn't require devices to have operating licenses 
CD|the most common one is the industry of scientific and medical or ism band 
EX|the frequency ranges are vast but as an example bluetooth and wifi operate in the two point four gigahertz ism band 
EX|an example of the commercial band is NUMBER and NUMBER megahertz range used by gsm 
CD|estimated node support is simple to understand 
CD|it means the number of clients that can be connected to each other,either directly or via gateway 
CD|there might no theoretical limit on how many devices can be connected 
EX|but there comes a point where the performance get severely degraded when a lot of nodes are connect to a single gateway,for example in the case of a wifi 
CD|the last parameter is the cost 
CD|when deploying a small set of devices a difference of some euros per device might not matter too much 
CD|but when deploying hundreds of thousands of nodes even a few cents can affect the overall price greatly 
CD|in cyber-physical systems and censor networks,the number of nodes is often large enough to make the price a decisive factor in selecting the connectivity protocol 
SM|in this lecture,we have defined the basic properties of connectivity protocols 
SM|in the next video,we will have an overview of a set of popular connectivity protocols 
NL|sound 
NL|music hello,welcome back 
SM|in this lesson,we will learn about common security approaches and protocols for wireless local area networks 
CD|these approaches are based on symmetric key cryptography 
CD|wireless local area network,wireless lan,or wi-fi provides more flexibility in setting up a network system 
CD|in a cyber physical system,which may include a very large number of sensors and actuators wi-fi or some other wireless technology is the most practical means of communication,because of its cost efficiency and easier integration with other network components 
CD|however,it can be the most vulnerable component of a system,if it's not securely implemented 
CD|as information is transmitted through the air,an attacker has potentially better chances to intercept the transmission and capture sensitive data 
CM|wired equivalence privacy or wep is a cryptographic security protocol,which was included in the i triple OMITTED NUMBER wireless standard in NUMBER wep provides wireless security by simulating physical access controls 
CD|however,wep is a weak method,and its password can be broken in a few minutes using available hacking tools 
CD|wep uses rivest cipher or rc4 stream cipher for encryption 
CD|wep was implemented in three version with different key sizes 
CM|in each version,a NUMBER bit random or pseudorandom initialization vector iv is contaminated with the key to generate the rc4 keystream 
CD|rc4 is a simple and fast bit-oriented stream cipher,which has demonstrated many significant vulnerabilities 
CD|for this reason,wep standard is not used anymore for secure wireless communication 
CD|in order to address the problems caused by the weaknesses of wep,that is to improve the security of wi-fi,an i triple OMITTED draft standard was developed and named NUMBER 
CM|in it's NUMBER version,the wi-fi protected access protocol or wpa was introduced as a more secure replacement for web 
CD|like wep,also wpa uses the rc4 stream cipher for encryption 
CD|however in wpa a temporal key integrity protocol or tkip uses the hash function to mix the initialization vector,iv with a preshared key rather than simply concatenating them like wep 
CD|this reduces the effectiveness of the related key attacks 
CD|for further assurance,the size of an initialization vector is doubled from NUMBER bits to NUMBER bits 
CD|meaning,in practice,that the reuse time of an initialization vector increased from a few hours of wep to a few hundred years 
CD|moreover,by implementing a packet sequence number,wpa provides protection against reply attacks 
CD|it also provides a stronger message integrity check called michael compared to wep,which uses basic crc or cyclic redundancy check 
CD|wpa uses the same hardware as wep for encryption in the access points 
CD|despite its features also wpa suffers from many security vulnerabilities and is currently considered an unsecure protocol for wi-fi 
CD|this the block diagram of the wpa protocol 
CD|as we discussed earlier,wpa offers better security compared to wep,by using a hash function for mixing pre-shared keys and initialization vectors,devising a sequence counter to avoid reply attacks,and using a better data integrity check algorithm 
CM|because of the vulnerabilities of the wpa protocol,a new security protocol called wpa2 was introduced in the NUMBER version of the i triple OMITTED draft standard NUMBER 
CD|it provides strong security for wi-fi 
CD|wpa2 is based is based on a new encryption method called counter mode cipher block chaining message authentication code protocol or ccmp,which uses the advanced encryption standard,aes 
CD|aes is a proven strong block cipher,which was published in NUMBER by national institute of standards and technology 
CD|it is still widely used 
CD|hardware implementation of wpa2 requires additional components in wireless devices,because unlike wpa,it can not utilize wep hardware 
CD|both wpa and wpa2 offer two authentication modes,personal and enterprise 
CD|in the personal authentication mode,a pre-shared key is used as a password 
CD|hence,they are vulnerable to weak passwords 
CD|in the enterprise mode,a more advanced authentication called extensible authentication protocol or eap is used 
CD|you can easily find further information on wpa2,its related protocols and authentication modes in the internet 
SM|in this lesson,we learned about different wireless lan security mechanisms,and more specifically we learned about wep,wpa and wpa2 protocols 
SM|in the next video lecture,we will have a closer look at public key cryptography 
NL|sound 
EX|finally as an exercise in using some of the concepts introduced in this section,let's consider the following problem 
EX|stanford people always tell the truth and berkeley people always lie 
EX|unfortunately,by looking at a person you can not tell whether he is from stanford or berkeley 
EX|you come to a fork in the road and want to get to the football stadium down one fork,or you did not know which road to take 
EX|there is a person standing there 
EX|what single question can you ask him to help you decide which fork to take 
CD|there are a number of ways to approach this problem most interesting involves a question in which a person is asked 
CD|how we would answer if you were from stanford or if you were from berkley 
CD|however,we can also approach this problem without entertaining such meta-level questions 
CD|let's draw out a table with the set of all possible states of affairs,and leave columns for the question we want to ask and the response we want to receive 
CD|we want to ask a question that will list of one response 
CD|let's say true or one,if the stadium is to the left,and a different response,for example,false or zero,if the stadium is to the right 
CD|note that the response in each case may differ from the actual truth of the question depending on whether the informant is from stanford or from berkley 
CD|now,let's see what the actual truth value or question must be to have elicited this response 
CD|if the stadium is actually to the left,and the informant is actually from stanford,then we want a question that has value true 
CD|if the stadium is not to the left,and the informant is from stanford,then we want a question with truth value false 
CD|so it stands that if a person's going to tell the truth the value should be the same as the values in our response 
CD|the opposite is true for the berkley case,cases,if the stadium is to the left and the informant is from berkley,we want a question the has truth value of false since the informant were lying 
CD|if the stadium is not to the left and the informant is from berkeley then we want a question that has truth value true 
CD|now looking at our operator semantics tables,we see that this is exactly the set of true values assigned to the sentence left,if and only if su,stanford 
EX|so we can phrase this as a question as follows 
EX|is it the case that the left road is the way to the stadium if and only if you are from stanford 
CD|okay,that's not a particularly clever or simple question,but it will ellicit the right response 
EX|importantly the example illustrates that it's possible to solve problems of this sort using just the concepts we have seen so far 
CD|we have a model of a robot,we know how the robot can get position information,in this case we used the wheel encoders but there are other ways we talked about compasses and accele accelerometers but the robot also needs to know what the world around 
CD|it looks like 
CD|and for that you need sensors 
CD|and we are not going to be spending too much time modeling different kinds of sensors,and see what is the difference between an infrared and an ultrasonic range sensor 
CD|instead 
SM|we're going to come up with an abstraction that captures what a lot of different sensing modalities can do 
CM|and,it's going to be based on what's called the,the range sensor skirt 
CD|this is the standard sensor suite in a lot,on a lot of robots 
CD|and,it's basically a. collection of sensors that are 
CD|the collection that is,gathered around the robot 
CD|that measures distances in different directions 
EX|so,infra red skirts,ultrasound 
EX|lidar,which are laser scanners 
EX|these are all examples of these range sensors 
CD|they're going to show up a lot 
EX|now there are other standard external sensors of course,vision,or tactile sensors,we have bumpers or other ways of physically interacting with the world or `` gps'' or i'm putting them in quotation because there are other ways of faking gps 
EX|for instance,in my lab i'm using a motioning,or motion captioning system to pretend that i have gps 
CD|but what we're going to do,mainly 
CD|it's assumed that we have this kind of setup 
CD|where a skirt around the robot that can measure distances to,to other to things in the environment 
CD|and in fact,here is the chipera it's a simulation of the chipera 
CD|and the chipera in this case,has a number of infrared sensors 
CD|and well you see the cones,you have blue and red cones,and then you have red rectangles 
SM|the red rectangles are obstacles and what we're going to be able to do is measure the direction and distance to obstacles 
SM|so this is what type of information we're going to get out of these range-sensor skirts 
CD|over here on the right you see two pictures of the sensing modalities that we had on the self-driving car that was developed at georgia tech 
CD|and we have laser scanners and radar and vision 
CD|but the point is the skirt doesn't always have to be uniform or even homogeneous across the sensors 
CD|here we have a skirt that is heterogeneous across different sensing modalities 
CD|but,roughly you have the same kind of abstraction for a car like this,as well as for 
CD|hey,chipera,little mobile differential drive,robot 
CD|okay,so,that's fine,but we don't actually want to worry about particular sensors 
CD|we need to come up with an abstraction of this,sensor skirt,that,that makes sense,that we can reason about when we design our controller 
CD|so,what we're going to do is,we're going to do some,or perform what's called a disk abstract 
CD|abstraction 
CD|so here's the robot,sitting here in the middle 
CD|around it are sensors 
CD|and in fact,if you look at this picture here,here are little infrared sensors 
CD|and in fact,here are ultrasonic sensors.you see that scattered around this robot are 
CD|it's a skirt of range censors 
CD|we're,they typically have an effective range,and we're going to extract that and say there is a disk around the robot,of a certain radius,where the robot can see what's going on,right,so this is this,this pinkish disk around the robot and it can detect obstacles that are 
CD|around it 
CD|so the two red symbols there are the obstacles 
CD|what we can do is we can figure out how far away are the two obstacles 
CD|so,d1 is the distance to obstacle one,which is this guy 
CD|and this is obstacle two,well,okay 
CD|join with ratts of ensure and pi one is the angle to that obstacle,similarly d2 is the distance to obstacle NUMBER phi is the angle to obstacle two 
CD|one thing to keep in mind though is that robot has its own coordinate system in the sense that this,if this is the OMITTED axis of the robot right now,then pi one is measure relative to 
CD|the robot's OMITTED axis,so the robot's heading,right 
AP|so we need to take that into account if we want to know globally where the obstacles are 
CD|so let's do that 
CD|if you have that,and if you know our own pose,so we know x,y and pi 
CD|then since the measured headings to the obstacles 
CD|so this is pi one which is measuring and we're measuring this relative to our orientation 
EX|lets say that our orientation is this right 
CD|so here is phi and here is pi two say,then of course the actual 
CD|direction to obstacle two is going to be pi plus pi 
CD|so,what we could do,is we could take this into account and compute the global position's of these obstacles if we know where the robot is 
EX|so,for instance,the global position for obstacle one x1 and y1 
CD|well,it's the position of the robot plus the distance to that obstacle times cosine and sine of this pi plus pi term 
CD|so we actually know globally where the obstacles are if we know where the robot actually is 
CD|so this is an assumption we're going to make 
CD|we're going to assume that we know x,y and pi 
CD|and as a corollary to that,we're going to assume that we know the position of obstacles around this in the environment 
CD|so that's the abstraction that we're going to be designing our controllers around 
EX|and i just want to show you a. and i'm using an example of this,this is known as the rendezvous problem in multi agent robotics,where you have lots of robots that are supposed to meet at the common location but they're not allowed to talk,they're not allowed to agree on where this would be by chatting instead they have to move in such a way that 
EX|they end up meeting in same location and one way of doing this is to assume you have a rain sensor disk around you and then when you see other robots in that disk instead of thinking of them as obsticles we think of them as buddies so what we are going to do is each robot is going to aim toward the center of gravity of all it's neighboors so everyone that is in that disk,disk,and because of the disk assumption or disk abstraction we just talked about,we can actually compute where the center of gravi ty is of our neighbors 
EX|so here's an example of what this looks like 
CD|every robot is shrinking down 
CD|two,all the robots shrink down to meet at the same point,without any communication,simply by taking the disk around them,looking where are my neighbors in that disk,and now we know how to compute that 
CD|and,then,computing the center of gravity of my neighbors,and aiming towards said center of gravity 
CD|okay,now we have a robot model 
CD|we have a model for figuring out how to know where the robot is,we have a model for how do we know where obstacles and things in environment are 
SM|now we can use these things of course to actually start designing controllers,so that's what we're going to have to do next 
SM|i do want to point out though that the model the real encoder,and the disk abstraction 
EX|these are but an example of what you can do,and how you should make these kinds of abstractions 
EX|but for different kinds of robots,different types of models and abstractions may be appropriate 
CD|so with the last lecture,we are actually declaring success in terms of designing controllers 
CD|the useful placement,which add controllability,and off we go 
CD|the big problem,though,is well,we don't have x. and we have to,when we do 
CD|u=-kx 
CD|well,x is there,but we don't have it 
CD|so,what about y. ultimately,we don't have x. we have OMITTED coming out of the system 
CD|and somehow,this OMITTED has to translate into a u. it's not enough to say OMITTED translates into OMITTED because we actually don't have,y. well here is the,cool idea 
CD|i'm going to put a little magic block here 
CD|and the output of that block,somehow should become OMITTED meaning i would like to be able to take OMITTED push it through a magic block 
CD|and get the state out 
CD|now i'm not going to get OMITTED exactly,in fact i'm going to put a little hat on top of it 
CD|this is my estimate of a state 
CD|meaning i'm taking my sensor measurments,y and based on those measurements i'm going to estimate what OMITTED is 
CD|and i'm going to call that OMITTED hat,in fact the magic block 
CM|the thing that allows to get OMITTED from OMITTED is called an observer 
CD|so in today's lecture i'm going to be talking about these observers and how do we actually be design them 
SM|well,it turns out the general idea behind the observer design can be summarized in the predictor-corrector 
CM|under the predictor corrector banner 
CD|so,let's say that we have,a OMITTED is ax 
CD|forget about OMITTED for now,that doesn't matter 
CD|and OMITTED is cx 
CD|well,here is the idea 
CD|the first thing we're going to do,is we're going to make a copy of this system 
CD|and our estimator is going to be this copy 
CD|so i'm going to have x. is 
NL|sorry 
NL|xhat 
CD|is to ax hat,so my estimate is going to evolve,according to the same dynamics as my actual state 
CM|and this is known as the predictor,which allows me to predict what my estimate should be doing 
CD|but that's not enough,what i'm going to do now is i'm going to add some kind of notion of a wrong,or right the estimate is to the model 
CD|and one,one thing to note is the actually output is y,the output i would have had if the state was,was exact is c*x hat exact 
CD|so i'm going to compare y. to c*x hat 
CD|and,in fact,what i do,is,i add the piece to my predictor 
CD|so,x. is ax or hat,this difference 
NL|y-cx hat 
NL|which tells me how wrong i am 
CD|and then i add some game matrix here,l. and this 
CD|gives me a predictor and a corrector 
CD|so,this part here is the predictor,and this part here is the corrector 
CD|and this kind of structure is known as a luenberger observer named after david luenberger,but the point is that,when you have this predictor correct repair,you have some way of hopefully figuring out the state,or at least a good estimate of the state,from the measurements,y,that show up here 
CD|so the only question now 
CD|well,one question is,does it work 
CD|the other question is,what is this OMITTED 
CD|so the first thing we should ask is,how do i actually pick a reasonable OMITTED 
CD|well the first thing we'll do 
CD|is,let's define an estimation error,e,as the actual state my estimated state 
CD|and i should point out that we don't know e. beacuse we don't know x.but we can still write down OMITTED as x-x hat 
CD|well,i would like OMITTED to go to,right 
CD|'cuz,if i can make OMITTED go to,the OMITTED hat goes to x. which means that OMITTED hat is a good estimate of x. so what i would like to do is actually stabilize e. make OMITTED asymptotically stable 
CD|so,what we need to do first,is,write down the dynamics for my error equation 
CD|so OMITTED dot well that's OMITTED dot-x hat dot 
CD|well OMITTED dot is just ax and OMITTED hat dot 
CD|well,we have this format the ax hath+ OMITTED y-cxhath and then we get the minus signs in front of everything 
CD|so this is my estimation 
CD|now OMITTED is equal to c*x,right 
CD|so what i actually have here is OMITTED dot being a x-xhat -lc x-xhat 
CD|but x-xhat is OMITTED so OMITTED dot is a-lc e. this is the dynamics of the estimation error 
CD|we don't know OMITTED but we know that this is the dynamics 
CD|so what we need to do now,of course 
CD|is pick OMITTED in such a way that the eigenvalues to this matrix,a-lc,have negative real parts 
CD|because if we've done that,we've stabilized the estimation error 
CD|and i wonder,i wonder how we should go about doing that 
CM|actually,i don't wonder,we know how to do it,pole-placement 
CD|we know how to do control design this looks just like control design but it's actually observier design 
CD|well,we wanted to import the values from a-lc to be the negative 
CD|so,let's just pole place away 
NL|okay 
EX|so here's an example 
EX|OMITTED dot equal to this,y is equal to that 
NL|fine 
CD|now,i want my error dynamics to be asymptotically stable,so if i write down a-lc 
CD|and i should point out that in this case OMITTED is a NUMBER,that means that OMITTED has to be a NUMBER because these things have to cancel out 
CD|and i get a NUMBER left so OMITTED is actually a NUMBER matrix in this case 
CD|so,if i write down what a-lc is,it becomes this semi-annoying matrix but at least we know what this matrix is 
CD|what do we do now 
CD|well,we compute the characteristic equation to a-lc 
CD|and if we do that,we compute the determinant of lambda i. so this is the determinant of lambda i. minus a-lc 
CD|right,if we compute that,we get the following expression 
CD|well,now we do what we always do in these situations 
CD|we pick our favorite eigenvalues 
CD|and it seems like i am very,very fond of lambda equal to negative NUMBER if i do that,i get this as the desired 
CD|characteristic equation 
CD|well,what do we do now 
CD|well,we line up coefficients,of course 
CD|these coefficients have to be the same,and these coefficients have to be the same 
CD|and if you actually solve this,i'm not going to go through the algebra 
CD|i encourage you to do it on your own 
CD|you get that OMITTED -2/3 
CD|and l2 is a third 
CD|and if fact,the way this would look my observer gain is well,l1 was -2/3,there is l1 
CD|and l2 was the third which is there 
CD|so my observer dynamics is OMITTED dot 
CD|well,x hat dot is ax hat plus this is l*y-cl 
CD|so this is my observer dynamics 
CD|what i'm showing here in the plot in blue,this is x1,the actual x1 and how it's evolving and in red you see my xhat1 
CD|and you see that after a while,they end up on top of each other very nicely 
CD|similarly,in the right figure,in blue,you have x,and in red,you have OMITTED hat and as we can see,the state,the estimated state,x hat,thus,indeed converge NUMBER the actual set 
CD|so here is what's going on right now 
CD|i have OMITTED as ax,y is cx out of this thing i can suck OMITTED right 
CD|because that's what i'm seeing,these are the measurements 
CD|what i'm doing now is i'm feeding this OMITTED into my server that has a predictor part,which is the dynamics,plus a corrector part,which looks at the difference between the actual output and what the output would have been if OMITTED hat was my state 
CD|and then out of this comes OMITTED hat 
CD|which means that we have some way of figuring out what the state of the system is 
CD|now,obvious questions are 
NL|well,well 
NL|there's only question,actually 
CD|does this work 
CD|and the answer is,no 
CD|it doesn't always work 
CD|just like pole placement doesn't always work when you're doing control design 
CD|for the same reason pole placement doesn't always work when we do observer design 
CM|and,what we need is we need something that's related to controllability 
CD|so,controllability tells us 
CD|do we have enough control authority,are actuater is good enough 
CD|well,for observer design,the concept is known as observability,which means do i have a rich enough y,meaning rich enough sensor suite so that i'm able to figure out what the system is doing 
CD|meaning estimate,estimate OMITTED from y. and the topic of the next lecture is exactly this observability 
CD|when can we indeed figure out OMITTED from OMITTED 
SM|the punch line with last lecture was that we can,in fact,make the unicycle model or a differential drive mobile robot,act like a simple OMITTED dot equal to u. what this means is that if we have some desired direction we want to go in,direction and magnitude,we can come up with v's and omega's,speeds and angular velocities that make the differential drive robot execute this controller 
SM|and we did it in two ways 
SM|first,we saw that we can actually use some kind of tracking controller to follow this 
SM|but then,in last lecture,we came up with a rather clever transformation that allowed us to,to actually track this OMITTED vector more or less perfectly 
SM|and when i say more or less,what i mean is that we really ignored orientation 
SM|so,we only cared about where the robot actually was,not particularly which direction it was pointing 
SM|and we couldn't track or used the original point,we had to accept this small offset error 
SM|but it was rather elegant,because no longer did we have to design trackers 
CD|the question one should ask then,of course,is does this apply to other types of robots 
CD|meaning,this idea of starting with a unicycle and then somehow making it behave well,how,how relevant is that to other kinds of robots 
SM|so,we have dealt with the differential drive robots 
CD|we know that it's super important in relevance to that but you know what,what if you have flying things 
CD|what if you have snake bots 
CM|what if you have,this is called a snake board,what if you have fixed-wing aircrafts or blimps or underwater robots 
CD|does this even apply 
CD|well,what i want to do today is basically see that it does supply but,it does supply if you squint your eyes a little bit and focus on what these types of robots have in common as opposed to what they don't have in common 
SM|so,what i want to do today is simply go through a smorgasbord of different robot classes and see how they actually are like unicycles or maybe not 
NL|we'll see 
NL|okay 
CD|here's the unicycle,right 
CD|we have,as always,position,x y,and it's pointing in some direction,phi,this is the standard robot model 
CD|so,the states are position and orientation 
CM|the inputs to this model,this abstraction,are angular and transalational velocitiies 
CD|meaning,how quickly do you turn and how fast do you go 
CD|well,let's start expanding this model to encompass slightly more elaborate systems 
CM|so,let's start with what's called a car-like robot 
CD|a car-like robot is not a unicycle because all of a sudden,we have more states 
CD|we have our old friends which is OMITTED and y,which is the position 
CD|we have phi which is the orientation,but then we also have a new angle known as the steering angle 
EX|so,here is the picture we should have in mind 
EX|here's a car,here are the rear wheels 
CD|well,the front wheels are going to be turned because we're turning the steering wheel 
CD|so,if i call this point here,x and y,as always,then this,of course,is,as before,the heading 
CD|and now,we also have this angle here,which is psi,known as the steering angle,how much are we actually steering it 
CD|and all i wanted to show here is that we have almost the same equation for OMITTED and y,the only difference is that we are now going in this direction,which is phi plus psi 
CD|and then,the orientation has its own dynamics that's a function of the velocity and the steering angle 
CD|and then,what we can do is we can control how quickly we're steering 
CD|so,psi dot is equal to u. so,this is the next level up in complexity where we no longer have a unicycle but a car-like robot,four wheels we can turn the front wheels 
SM|well we've already seen the segway robot 
SM|so,the segway robot is really a unicycle or a differential drive robot at the base 
CD|and then,you know,this,this mess here 
CD|i drew it like this because it actually didn't fit in the box if i didn't make it small and sideways 
CD|the point is that,we had a rather complicated equation describing the pendulum part or the part that's sitting on top of the unicycle 
CD|so,we had a bunch of states,position,orientation,tilt,angle,and here,we actually had to deal with the tilt velocities and other kinds of velocities because we actually need to get into dynamics 
CD|many accelerations of what's happening for this thing not to fall over and the inputs were the wheel torques to this model 
CD|the point now is that this still has a unicycle underneath and then this mass sitting on top of it 
CD|so,that would,would be the segway robot that we actually already seen 
CD|well,what about flying things 
CD|well,a standard model for a fixed-wing aircraft is ta-da,a unicycle,right 
CD|which means,it's moving 
CD|and then,it can change altitude 
CD|so now,no one in their right mind would actually say that this is what a,an aircraft is actually doing but from a high level obstruction point of view,it's not a bad idea 
CD|an aircraft can't go sideways but it can kind of move like a unicyle in,in the plane 
CD|and then,you can change altitude 
CD|now,you would actually have to couple this to the real dynamics of the aircraft if you wanted to do it for real 
CD|the one thing to note though is that there is something slightly fishy about this and that's the fact that the fixed wing aircraft can not hover 
CD|when you can't have v=0,but there's really no constraint or no way of capturing this in,this model,we see later how to do it,but the point here is that there are ways of thinking about flying things as unicycles plus an altitude component 
EX|now,let's look at another model 
EX|this is the standard model of an underwater glider,and,well,let's go back a slide 
CD|aircraft,underwater glider,nothing changed,right 
CD|so,an underwater glider,people typically model as a unicycle 
CD|and then,you can go up and down 
CD|so,you can go down to a lower depth or you could climb up towards the surface 
CD|so,again,unicycle plus an altitude or a vertical component that describes how high up or high down the,the robot actually is 
CD|well,all of these robots have some notion of where it is at least in the plane and where it's pointing 
CD|and if i call position plus heading for pose,the punchline,at least based on the models i showed you,cars,segways,flying things,things on the water,and as we know,differential drive robots,they have this key thing to it known as pose 
CD|and pose is x,y,and phi 
CD|you know,that's just,that's just what's going on,where is it and which way is it pointing 
CD|it's pointing in the phi direction instead of the OMITTED and y. well,you know what,if you ignore the dynamics,the actual dynamics and say at the certain high level abstraction,we already know how we should think about this,the unicycle 
CD|so,almost everything involves a pose 
CD|and almost everything with pose is almost a unicycle and i will make this more precise 
CD|but the point here is that whenever you start dealing with postion and heading,the unicycle model is applicable,maybe not perfectly,but fairly well 
CD|so,this model is still very,very rich 
CD|so,the punchline then becomes that we can almost use everything that we've already done and then possibly add another layer to to what's going on 
CD|so,what you have,is you have,let's say,your,your OMITTED plan,right,that comes into your unit cycle,and out of that comes our old friends,v and omega,and then,whatever actual robot you have is going to move like this 
CD|sound and the point is that,in here,we may be forced to somehow make the actual robot look like a unicycle a little bit 
CD|but it's just another layer to our already elegant and well-layered architecture that we've discussed 
CD|and,in fact,next time,what i want to do is exactly this for the car robot,to see how do you make a car act like a unicycle and this is something i had to do when i was dealing with the autonomous self-driving cars 
CD|we were reasoning about them at the level of position and orientation and speeds and angular velocities but then we have to map it back onto the,onto the,the car robot 
CD|before we do that though,i need to talk a little bit about constraints 
EX|what i mean,mean by that is if you're flying,for instance,you can't hover 
CD|you're going to have a certain minimum velocity or a lot of times,it's convenient to assume a fixed velocity and then you can turn 
EX|but here's an aircraft 
CD|it can't immediately or very quickly just spin either 
CD|so,there are caps on how quickly you can actually turn 
CD|well,the most famous of all constrained unicycle type models is known as dubins vehicle 
CD|and all it is is a unicycle with the added caveat that we can only fly with v=1 or drive with v=1,meaning we're going to go with a constant velocity and we have a max and a minimum angular velocity 
CD|if you want,you can say,you know,v0 there and omega OMITTED max or omega max plus omega max instead of -1 and,but the point is that we're constraining the velocities 
CD|this means,that dubins vehicle can basically execute straight lines,it can go along paths like this so,so it can go along angles,i mean,along circular arcs 
CD|or it can go anything in between,right 
CD|but basically,you have,you can not go arbitrarily tight with a dubins vehicle 
CD|so,this is one way in which people incorporate constraints 
CD|and this makes the planning part significantly harder 
EX|we're not going to cover it,but i encourage you to look up dubins vehicles,for instance,to see how people think about curvature constrained versions of unicycles,for instance 
CD|well,another version or another standard constraint that people deal with is what's known as the reeds-shepp model,where omega again,is between -1 and,or negative omega max and omega max,and OMITTED can now be,well,the absolute value of OMITTED is,which means that OMITTED is either +1 or -1,meaning it's a dubins vehicle that can also go backwards 
CD|that's all that this means 
CD|you can go forward along these arcs or you can actually pull back in in reverse 
CD|and reeds-shepp is also a standard type of model that people like to deal with when they're dealing with mobile robots 
EX|now,aircrafts typically can't back so it's not a par,all that relevant of a model for fixed wind aircraft,for instance 
EX|but there are,for instance,robots,at the end of the day,we have a top speed,for instance,so we can't go faster than v=vmax,so,but we can indeed go backwards 
CD|so,the reeds-shepp model would not be a bad model if you actually want to take max velocities into account 
CD|so,remember that this may or may not come into play 
CD|the last thing i want to say though is that there are,of course,robots where pose is not a reasonable way of describing them 
CD|you know,you have a humanoid,well,people will have maybe a position and orientation but there is so much more going on in a humanoid 
CD|a snake,you know,which way is the snake pointing,well,you know,if the snake looks like this,what's,what's the orientation of the snake 
CD|it's very unclear 
CD|what's the position of the snake 
NL|who knows 
CD|it's not clear what we mean by that 
CD|same thing,we would like mobile manipulators like this robots that we have here at georgia tech,where,well,the base is a unicycle 
CD|so,if you only care about the base,fine 
AP|but if you want to do more things like carry things around or opening doors and so forth,we have to care about more than the just the pose,more than just position and orientation 
CD|so,there are situations where we have to worry about more things,but in a surprising amount of situations,pose is indeed the way to go 
SM|and like i said,the next lecture will be about cars and how to actually make a car behave like a unicycle 
SM|so in the previous lecture,we did a lot of technical push ups to end up with end up with a description of what the solution to a general lti system is cd|the reason for that is,is that i really,really enjoy rule,even though i do 
CD|but that it will actually help us to characterize what these systems are doing 
SM|and today,i want to talk about stability,because as you probably recall when we did a control design,first order of business is to design controllers so that systems don't blow up 
CD|if they blow up,there's nothing we can do about it 
CD|the quad rotors just fall out of the air 
CD|the robots drive off to infinity 
CD|the cars smash into things 
CD|we don't want them to blow up,because the deciding objectives are almost always layered in this sense 
CD|first order of business is stability 
CD|then we want to track whatever reference character or reference point we have 
CD|we also want it to be robust to parameter uncertainties,and possibly noise 
CD|and then we can wrap other objectives around it,like when you want to move as fast,quickly as you can,or use as little energy when you're moving,or things like this 
CD|but,regardless of which,stability is always the first order of business 
CD|so let's start with scalar systems,no inputs 
CD|so only the a matrix now,in this case OMITTED dot is little ax,which means that it's scalar 
CD|well then the solution OMITTED of OMITTED is OMITTED to the a,we said OMITTED minus OMITTED naught OMITTED of OMITTED naught 
CD|here i simply picked OMITTED naught to be equal to NUMBER so this is the solution 
CD|okay,lets plot what this solution looks like 
CD|if a is positive,then OMITTED of OMITTED it starts nicely and then pabaah 
CD|its,its blowing up as far as i can tell 
CD|so if a is positive this system blows up 
CD|well,if a is negative,then OMITTED to the at,this is a decaying exponential 
CD|so we get OMITTED to just go,, nice down to zero 
EX|what happens if a is zero in between these 
CD|well,then you have OMITTED to the zero t,which is NUMBER so then,x of OMITTED is simply equal to OMITTED naught 
CD|OMITTED never changes 
CD|so here,it didn't blow up,but it didn't actually go down to zero 
CD|and in fact,what we have its,its really a sitution where three possible things can happen you blow up,you go down to zero,or you stay put 
CD|so let's talk about these three cases 
CD|the first case is what is called asymptotic,stability 
CD|so the system is asymptotically stable if OMITTED goes to zero for all initial conditions,so this fancy upside down a,is known as the universal quantifier 
CD|all we need to know is that when we see and upside down a the way we pronounce it is for all OMITTED nought 
CD|so asymptotic stability means that we go to zero and almost always what we want to design our system so that OMITTED actually goes to no matter where we start,that's asymptotically stability and as you recall,in the scalar case,a strictly negative corresponds to asymptotically stability 
CD|and then we have unstability,instability where the system being unstable 
CD|what that means is there exists an initial condition,so the flipped e,and to speak for the existential quantifier,which we read it as exists 
CD|so it's unstable if there exists so many extra conditions from which the system actually blows up 
CD|in the scaler case,we had a positive corresponding to instability 
CD|and then we have something we call critical stability,which is somehow in between 
CD|the system doesn't blow up 
CD|but it doesn't go to zero either,and in fact,for the scalar system,this corresponded,corresponded to the,a equal to zero case 
SM|so if you summarize that,if you have a scalar system then a positive means the system is unstable 
SM|a negative means that the system is asymptotically stable,which is code for saying that the state goes to zero 
SM|and a zero means critically stable 
NL|okay 
EX|let use this way of thinking now on the matrix case 
CD|x. is ax,capital a. so this is now,x is a vector,a is a matrix 
CD|what do we do there 
CD|well,we can't just say 
CD|oh,a is positive,or a is negative 
CD|because a is a matrix 
CD|it's not positive or negative 
CD|but what we can do is we can go for the next best thing,which is the eigenva lues 
CD|and,in fact,almost always,the intuition you get from a scalar system translates into the behavior of the eigenvalues of these matrices 
CD|and for those of you who don't know what eigenvalues are,these are the special things that are associated with matrices 
CD|so,if i have a matrix a OMITTED by n,and i multiply it by a vector an OMITTED by vector,if i can write it as the same vector times a scalar,then what this means is that the way that a acts on this vector is basically scaling it 
CD|and the scaling factor is given by lambda 
CD|if i can,if i can find lambda of OMITTED to satisfy this,then what i have is a lambda that is called an eigenvalue 
CD|and it's actually not a real number 
SM|it's typically a complex number 
CD|so it's a,a slightly more general object than just a real number,but that's an eigenvalue 
CD|and OMITTED is known as an eigenvector 
SM|and eigenvalues and eigenvectors are really these fundamental objects in,in when you're dealing with matrices and when you want to understand how they behave 
SM|and,whenever you think scalar first,you can almost always translate it into what do the eigenvalues,eigenvalues do for your systems 
CD|and,the eigenvalues actually would tell you how the matrix a acts in the directions of eh eigenvectors 
CD|so,you can almost think of them as scalar systems in the directions of the different eigenvectors 
CD|and,you know,sometimes you may want to compute eigenvalues 
NL|i don't 
CD|so,if you use matlab 
CD|you would just write,eig a,and out pops the eigenvalues 
CD|whatever software you,your comfortable with,you want to use c,or python,or whatever,there is almost always a library that allows you to compute eigenvalues 
CD|and the command is typically something like eig a 
CD|so,this would give you what eigenvalues are,given a particular matrix 
NL|okay 
CD|let's see what this actually means 
EX|let's take a simple example here 
EX|here's my a system 
EX|,,o minus NUMBER if you take eig a of this 
CD|you get eigenvalue being NUMBER and the other eigenvalue being negative NUMBER and the correspo nding eigenvectors are,, and,NUMBER okay 
CD|what does this mean 
CD|it actually means the following 
CD|so let's say that this is x1,and this is x2 
NL|okay 
CD|v2 was,NUMBER so this was this direction 
CD|so here is what,v2 is 
CD|this is the direction in which v2 is pointing 
CD|well,the eigenvalue there is negative,which means that,if you recall the scalar system,when a was negative,we had stability 
CD|so if i start here,my trajectory is going to pull me down to zero 
CD|nice and stable,and in fact,if i start here,it's going to pull me up to zero,nice and stable 
NL|right 
CD|so,if i'm starting 
CD|on the x2 axis,my system is well behaved 
CD|if i start on the x1 axis,i have lambda being positive,which corresponds to little a being positive in the scalar case,which means that the system actually blows up 
CD|so,here,the system goes off to infinity 
CD|and,in fact,if i start here,my x2 component is going to shrink but my x1 component is going to go off to infinity 
CD|so what i have is this is what the system actually looks like 
CD|so the eigen vectors in this case will tell me what happens along different dimensions of,of the system 
CD|so after all of this,if i have OMITTED dot as big ax,and i can find a solution,then the system is asymptotically stable,if and only if,for the scalar case,we had that little a had to be negative 
CD|what we need in the matrix case is that the real part,remember that lambda are complex,the real part of lambda is strictly negative for all eigenvalues to a. for all,this is what asymptotic stability means for linear systems 
CD|unstable means that there is one or more,but one single bad eigenvalue spoils the whole bunch 
CD|so a single eigenvalue that has positive real part 
CD|this is an,a sufficient condition for instability 
CD|and we have critical stability only if so this is a,a necessary condition that says the real part has to be less than or equal to for all igon values 
CD|but where we are going to be spending our time is typically up here in the asymptotically stabl OMITTED domain,because what we want to do,is we want to design our system or our controllers in such a way that the closed loop system is asymptotically stable 
CD|so we're going to somehow make the eigen values have negative real part that's going to be one of the design objectives that we're interested in 
CD|and i want to point out something about critical stability that if one eigenvalue is and the rest of the eigenvalues have negative real part,or if you have two purely imaginary eigenvalues so they have no real part,and the rest have negative real part,then you have critical stability 
CD|and we will actually see that a little bit later on,but the thing that i really want to take,you to take with you based on this slide,is,you look at the a matrix,you compute the eigenvalues 
CD|if the real part of the eigenvalues are all negative you're free and clear,the system is asymptotically stable 
CD|if one or more eigenvalues have positive real part,you toast,your system blows up 
NL|that is bad 
EX|so,let's end with a tale of two pendula 
EX|here is the normal pendula,well if you compute the of this,you get this matrix 
CD|and the eigenvalues are OMITTED and negative j. well,i don't know if you remember,but on the previous slide,there was a bullet that said if you have purely imaginary eigenvalues,which we have here 
CD|we have purely imaginary eigenvalues and then no more,then we have critical stability 
CD|what this actually means is that,this pendulum,clearly,there is no friction or grav-,or damping here 
CD|it's just going to oscillate forever 
CD|it's not going to blow up 
CD|and it's,, excuse me 
CD|and it's not going to go down to zero 
CD|it's just going to keep oscillating forever and ever 
CD|it's critically stable system 
EX|now,let's look at the inverted pendulum where i'm moving the base,but in that case,a is NUMBER we already know,this things is going to fall over 
NL|right 
CD|so,if you compute the eigen values you get one eigen value to be equal to negative and to be positive,which means that,we have one rothton eigenvalue 
CD|this eigenvalue that's going to spoil the system 
CD|so this in an unstable system 
CD|so now that we understand that eigenvalues really matter,and they really influence the behavior of the system,let's see,, excuse me,how we can use this to our advantage when we do control design 
NL|so welcome back 
SM|today,i would like to investigate a particular hybrid system that has to do with a bouncing ball 
CM|so,that is,i take a ball and i drop it on a surface and i would first of all,like to model it 
SM|and secondly,like to figure out how the ball behaves 
EX|and the reason why i want to do this is not necessarily because i really like balls but because this bouncing ball example holds the key to another little peculiarity of hybrid systems that we should be aware of 
CM|so,here is the set up 
CM|i have a ball 
CM|it's OMITTED above the ground 
CM|now,what happens in between the bounces 
CM|well,newton tells me that force is mass times acceleration and,and the acceleration is,in fact,-g,where OMITTED is the gravitational constant 
CM|so,if i let x1=h and x2 be equal to OMITTED dot,which is what we always do,then what i get is that OMITTED dot is this thing,NUMBER x,which is just the point mass,plus this gravitational force that's pulling it down 
CM|now,let's say that the thing that i'm interested in also is,where the ball actually is,how high,how high up it is,so OMITTED is going to be NUMBER x. so,that is my model of the ball 
CM|what happens at the bounces 
CM|well,you could try to model ball deformations and whatnot,but that seems rather complicated so what we're simply going to say is that these are what's called inelastic bouncers which mean,which means that a little bit of energies sucked out of the ball every time it bounces 
CM|and in fact,what we're going to say is that velocity,this is the velocity,so if the ball is coming down here sound hits the ground then the velocity instantaneously flips,it means,that's why we have a minus sign there because the ball instantaneously flips but we're also scaling it with this gamma constant,so we're making the velocity change direction from downwards to upwards,but a little bit less,which means we lost some energy in the bounce 
CM|well,the position doesn't change in the bounce,so this means that my reset condition is going to be this 
CM|this is just encoding this fact that i'm flipping a little bit,i'm flipping my velocity,and i'm loosing a little bit of energy at the time of the bounce 
CM|alright,so lets see what this bouncing ball hybrid automaton might look like 
CM|well,x dot is ax+b,in this case,not bu and OMITTED is NUMBER so this is this forcing term that is gravity,no big deal 
CM|now,what's going to happen is i'm going to switch from that mode to itself when i'm bouncing 
CM|and we already saw that the reset condition is this inelastic bounce condition that says that we're losing a little bit of the velocity at the time of the bounce 
CM|so,that's the reset condition 
CM|now,the guard condition is what 
CM|well,clearly,we're bouncing when we're hitting the ground 
CM|so,we would like the height to be less than or equal to,right 
CM|well,let's see what happens 
CM|here comes the ball sound hits the ground,now the height is,we're switching and now the first thing we do is we reverse the velocity but,meaning,we're switching 
CM|but hey,wait a second,the height is still less than or equal to NUMBER the height is still NUMBER so,what we're going to do is we're just going to end up spinning like crazy if we have this guard 
CM|so,this is not a good guard 
CM|let's get rid of it 
CM|instead,what we need to do is we're,we're going to switch when we come down to the ground and the velocity is pointing downwards 
CM|meaning that OMITTED needs to be negative or less than or equal NUMBER and OMITTED dot has to be less than or equal,meaning,we're facing downwards 
CM|or since OMITTED and OMITTED dot constitute our state,then the guard should really simply be that OMITTED is less than or equal to that's the guard condition 
CM|well,it could be it's just a,the height is just,but this is really the condition that tells us that it's time to,to switch 
NL|okay,good 
CM|so now,we have that 
NL|is this any good 
CM|well,i mean clearly,it's good 
CM|it's pretty and we have guards and resets 
CD|but does it model,first of all,faithfully what balls do when they bounce 
CD|and secondly,are there reasons why a model like this would cause us to be a little bit nervous 
AP|to answer that,we need to figure out what the ball is actually doing if we have this model 
CD|so,first of all,we have this system again now 
AP|what i would like to know is what is the output of this system 
CM|well,fast forward,sorry,not forward,reverse two weeks and we go back to linear time-invariant systems 
CD|we know what the solution to this system is 
CD|we know that the output is OMITTED times this bad boy here,that we call the state transition matrix,which was fancy speak for this matrix exponential times the initial condition plus OMITTED times this rather awkward-looking integral there 
CD|now,all of these is,is,is not particularly pleasant 
CD|and i remember vividly how we struggled to get through this because there were so many integrals to keep track of here 
CM|now,in this particular case,we're a little bit lucky because this a matrix is what's called nilpotent because if i take a to the power two,or three,or any high there,higher exponential here,then i get out 
CD|and that turns out to be quite wonderful for us 
CD|why is that 
CD|well,remember,that e^at is really this infinite sum 
CD|a,there should be a parentheses here,i apologize 
CD|at to the power of OMITTED divided by OMITTED 
CD|well,in our case,all the higher order a's are equal to,so i get first k=0,which gives me the identity matrix 
CD|then i get k=1,which simply gives me a times t. and then,i have all the others which are equal to NUMBER so,e^at,in this case,is simply this matrix 
CD|here is the part that comes from the adjacent matrix and since a is simply that times t,i get the OMITTED up here 
CD|so,this is my e^at or my state transition matrix 
CD|so now,i should be able to plug this back into the equation for OMITTED and get a rather nice looking expression 
CD|so,let's do that 
CD|well,here is c. here is the state transition matrix 
CD|here's my initial condition 
CD|here's this rather awkward-looking differential equation sorry,integral 
CD|now,we can try to solve that 
CD|and if we do that,instead of actually doing the math,i did the math,i encourage you to go home and do that 
CD|i'm just going to write down what the solution is 
CD|it's going to be h0 times the initial velocity,h dot of t-t0 and that's then minus g/2 t-t0 squared 
CD|so,this is what the output looks like in between bounces 
NL|good 
AP|now,that we have that,let's figure out how long it takes in between bounces 
CD|so,let's say that we start at zero OMITTED clock,at height zero 
CD|this is when the bounce is about to start and then,sound we want to know how long this,this took 
CD|we want to know how long it took us to get back the ground 
CD|well,that's simple 
CD|let's pick a big time,big OMITTED and say,well,y at that time OMITTED has to be equal to well,then we plug that in 
CD|h0=0 not so we don't any turn there we just get OMITTED dot times OMITTED minus this thing 
CD|or another way of writing it is like this 
CD|and you know what,this needs to be equal to because OMITTED is there and OMITTED is there,which is why we have two solutions 
CD|so,one solution corresponds to t=0,which is at the beginning of the bounce 
CD|and the other solution is when we return down 
CD|so,this is how long it took me to go from the ground,up into the air,and then back down to the ground 
CD|this is the time in between bounces 
CD|let's compute the accumulated bounce times,just because we find it amusing 
CD|well,the velocity at the beginning,so at the first time,let's just say that the velocity is v,right 
CD|so then,the time of the first bounce,instead of OMITTED dot,i just plug in OMITTED there 
CD|i get NUMBER,that's the time of the first bounce 
CD|well,the velocity after the first bounce,well,the reset condition says that i have gamma times v,so okay,i have a new OMITTED here 
CD|that's what i'm going to plug into my OMITTED dot here that immediately tells me that the time of the second bounce is,well,it's the time of the first bounce plus the time it took for the second bounce and instead of v,i have OMITTED divided by gamma there 
CD|so,that's how long it took me to perform two bounces,and so forth 
CD|this tells me that the time of the nth bounce is given by this NUMBER which is this term that shows up over and over again 
CD|and then,every bounce gets this gamma to the power of OMITTED accumulated 
CD|now,this is what's called a geometric series 
CD|and if you look that up or you happen to know it,if gamma is less than one,which means that you're not adding energy at the bounce times,this thing will actually,okay,and we have gamma less than one,this will actually converge in the sense that when OMITTED goes to infinity,this thing becomes equal to this expression 
CD|well now,maybe some of you are asking,so what 
CD|laugh well,you shouldn't be asking so what 
CD|well,what's going on there 
CD|this is the time it takes to perform infinitely many bounces,infinitely many bounces,and this is less than infinity 
CD|what that means is this bouncing ball is going to go sound infinitely many 
CD|and there is some time OMITTED infinity here where this system is just going to grind to a halt and our model is just going to keep computing bounce after bounce after bounce after bounce faster and faster and faster 
CD|and this is actually a serious problem that causes our system to actually crash 
CD|so,the ball bounces in infinite numbers of times in finite time 
CD|and like i said,this is not just a mathematical curiosity that shows that we can compute geometric series 
CD|it means that if i'm simulating it,then my simulation would crash 
CD|in fact,i encourage you to write this exact model into your favorite simulator and watch it crash 
CD|this also means that if i write down my hybrid system like this,then it's undefined beyond OMITTED infinity because it's not clear what's happening beyond there 
CD|time is not allowed to go to infinity 
CD|so,stability,which says what happens when OMITTED goes to infinity sound you can't even ask that question because OMITTED doesn't go to infinity 
CD|what's worse obviously is that real balls don't do this,real balls bounce and after awhile they lay still,right 
CD|so,this is also an indication that our model is not particularly good 
CD|and,in fact,this type of phenomenon where you have infinitely many switches in finite time is known as the zeno phenomenon,after the philosopher zeno,that had the a tortoise race,a hare 
CD|and the paradox that zeno came up with was the fact that the hare never managed to overtake the tortoise 
SM|and in the next lecture,we will see,first of all,why the tortoise is able to beat the hare and what to do about it,meaning how do you make the rabbit overtake the turtle 
SM|well,that,my friends,is the topic of the next lecture 
SM|so the outcome of the last handful of lectures,was that we needed something more rich to solve complex navigation problems,and that something was wall following 
SM|in fact was saw that we really had barriers,wall following clockwise and wall following counter clockwise 
SM|and,the way we could encode that was to take our avoid obstacle behavior and simply flip,either flip it -pi/2 for a clockwise negotiation of the obstacle or +pi/2 for a counterclockwise negotiation of the obstacle 
SM|what i want to do today is relate this wall-following behavior to the induced mode when we looked at type zeno in hybrid systems 
CD|and the point with this is really for us to first of all,trust that this is the right thing to do 
CD|trust that we understand alpha 
CD|and trust that we understand plus or minus there 
CM|we use some kind of inner product rule to determine whether or not we should go plus and minus 
CD|now we're going to see that that's,indeed 
CD|the correct rule from a sliding mode vantage point 
SM|however we're going to do little bit of maths today and at the end of it we're just going to return back to this and say,this is how,still how we going to implement it because it is much simpler but we need in the math to get there and trust a that's correct 
CD|so here's the general set,set up 
CD|as before we have an obstacle OMITTED sub o. we have a goal,OMITTED of OMITTED,and we have OMITTED,which is the position of the robot 
CD|we also have a distance from the obstacle,when we're going to switch to avoid obstacle as opposed to go to goal,and even though i'm doing everything with points now this works for non-convex obstacles,for pretty much anything 
CD|we can write that down at least in this way 
CD|and the distance then being constant,let's say it's delta from the obstacle,when i can simply say that that means that the distance between the OMITTED and xo is equal to now,what do i have 
CD|i have different behaviors 
CD|i have one behavior that wants to take me towards the goal and i have another behavior that wants to push me away from the obstacle 
CD|and now i also have a switching surface and i'm going to write this as the distance between OMITTED and the obstacle minus delta,should be equal to NUMBER but,i'm going to put squares in there because i'm going to start taking derivative and taking the derivative of the square of a norm is easy taking the derivative of a norm is not so easy,and then i'm going to put the half here just for the reason of getting rid of some coefficient but this half doesn't change anything 
CD|so now what do i have 
CD|i have g. on one side i have OMITTED positive,which means that you're further away from the obstacle than delta,which means you're out here where you're going to use this behavior 
CD|so we have OMITTED coming in here,so this is going to be my OMITTED 
CD|and then i have OMITTED negative on this other side,which is inside here,where i'm going to use this behavior 
CD|so that's going to be equal to OMITTED 
CD|so i have everything i need to be able to unleash our induced mode piece of mathematics 
CD|so,OMITTED is goal to goal 
CD|OMITTED is avoid obstacle 
CD|now,we need to connect these somehow with the induced mode 
CD|well,here is the connection 
CD|we actually computed the induced mode 
CD|it was this convex combination of the two modes,or the two behaviors 
CD|and this convex combination was given by this,mouthful of of an expression 
CD|but let's actually try to compute this,in this case,to see what,what the induced mode should be 
CD|well,first of all,we need the lee derivatives 
CD|so,OMITTED,if you remember 
CD|that was OMITTED,OMITTED*OMITTED 
CD|we need the same thing for OMITTED and then this lead derivative show,show up repeatedly 
CD|well,first of all the derivative of OMITTED with respect to OMITTED is simply OMITTED-OMITTED obstacle transpose and this is the reason why i put squares here because that made everything easy and i put the half there because that hills an extra that would show up 
CD|this really doesn't but it just makes the math a little bit easier 
CD|this is again one of these things that i encourage you to try to compute yourselves,just to make sure that you actually trust that this is indeed the correct answer 
CD|well,now i can compute the unknown derivatives,right 
CD|i have OMITTED,well it's OMITTED/OMITTED times OMITTED well the gdx which is computed it was that 
CD|OMITTED is OMITTED avoid obstacle,OMITTED-OMITTED 
CD|in previous lecture,i used OMITTED,with the prime index inaudible was OMITTED here 
CD|well,this is OMITTED-OMITTED transposed times OMITTED-OMITTED 
CD|but that's just OMITTED-OMITTED squared,the norm squared 
CD|so this lead derivative has a rather simple expression 
CD|similarly,i can compute the other lead derivative 
CD|and its c,goal to goal times this thing,that we now know is an inner product of OMITTED-OMITTED obstacle,transposed times OMITTED goal minus OMITTED. so i have the lead derivatives that i actually need 
CD|so,with that,i could go ahead and compute the induced mode 
EX|for instance 
NL|you know,this little thing here 
NL|what is that 
EX|it is let's see,it's OMITTED-OMITTED transpose times OMITTED* OMITTED-OMITTED,that's the first term,minus OMITTED goal to goal times OMITTED-OMITTED 
CD|so,that's that term 
CD|we have an explicit expression for it 
EX|we can also go ahead,and compute this,right,for instance 
NL|it's OMITTED,OMITTED-OMITTED transposed times OMITTED 
CD|which is,what was OMITTED again 
CD|it was goal to goal times OMITTED OMITTED.. so i can compute this 
CD|similarly,i can compute that 
CD|the point is first of all that everything is entirely computable here 
CD|the other point is,you know what,this is a little bit of a mess 
CD|it's a mess to write it down,but what we've actually done is sound we have recovered the same controller because what we're doing is again we're sliding 
CD|the only difference is if you write it in this form,you automatically get alpha to pop out because you get the certain scaling,and you get plus or 
CD|minus flip 
CD|so you actually get the flip for free,your told which direction to go and which alpha to go in and the nice thing is that the flip direction you get from computing the induced mode is actually the same as taking the inner products with OMITTED follow ball counter-clockwise with OMITTED avoid obstacle,if this inner 
CD|OMITTED avoid obstacle 
CD|if this inner product is positive,we go,counter clockwise,and otherwise we go clockwise 
CD|so,the nice thing is,we have actually,in a mathematically rather involved way arrive at same expression 
CD|and with the difference being that we can have the plus or the minus automatically determined for us,and these scaling factors automatically determined for us 
CD|in practice though,we're not going to do this,because this is too messy 
CD|instead,we're just going to pick some alpha that we feel good about 
CD|i always pick alpha=1 because i'm lazy and then use the inner product tasks to figure out whether we should go clockwise or counter-clockwise 
CD|so,that's practically what we're going to do 
CD|now,that's not enough,so let's say that i'm OMITTED going towards the goal here 
CD|here i want to go in this direction,and avoid obstacle once to take me there,so sliding is immediately going to tell me that i'm going to start moving up like this 
CD|well you know what 
CD|this was all good and dandy,but if i'm simply looking at the sliding rule 
CD|then here,all of a sudden i'm pointing in both direction,and sliding is going to tell me to stop,so what i need to do is to just keep following the ball,verify then i'm going to follow the ball for a long time way and way and way,around and around and around and may be here the right time to stop following the ball 
CD|the question that really need to answer now 
CD|when we know that follow wall is the right thing to do,we know which direction to go in,and we know,really how to scale it even though we're just going to scale it by one because it really doesn't matter is when do we actually stop this sliding or follow wall 
SM|well,that turns out not to be so easy and in fact there are multiple ways of answering that and this is precisely the topic of the next lecture 
CD|so now that we have a way of describing dynamical systems with differential equations in continuous time 
CD|or difference equations in,discrete time 
CD|let's,see if we can actually use this,to do something interesting with robots 
NL|and,let's start with 
CM|building a cruise controller for a,for a car 
CD|and the,the cruise controller 
CD|i mean it's job is to make the car drive at the desired reference speed 
SM|and if you recall,we're going to use OMITTED to describe the reference 
CD|so someone you,in the car,have set the reference speed to,to NUMBER miles per hour,or whatever you desire 
CD|now,we want to somehow understand how we should model the car so that we can make it go the reference speed 
SM|well,like i said last time,the laws of physics ultimately will dictate how objects in the world,like robots or cars,behave 
CM|and newton's second law says that the force is to the mass the acceleration 
CD|now,this is what we're going to have to start with 
CD|there's nothing we can do about this 
NL|it is what it is 
CD|now,what is the state of the system 
CD|because we need to somehow relate newton's second law to the state 
CD|well,in this case,since what we're going to do is try to make the velocity do the right thing,we can say that,let's say that the velocity of this,the car is the state 
CD|so OMITTED is going to be the speed at which the carrist is driving 
CD|now acceleration a appear,this,a is simply OMITTED OMITTED and its the time derivative of the velocity or the change in velocity as a function of time 
CD|so what we get from that of course is that we can relate the velocity to the acceleration 
CD|now we're also going to have to have an input,and when you're driving a car,the input,if you're dealing with,with speeds rather than which direction the car is going is,you press the gas pedal or the brake 
CD|and we are going to be rather cruder and say,you know what 
CD|somehow we're mapping stepping on the gas or the brake onto a force that's applied to the car 
CD|and this is done through some linear relationship,where we OMITTED as some coefficient c,which is an electric mechanical transmission coefficient,and i'm going to go out on a limb and say,we don't know what this is 
CD|and,i control this sign can not rely on us knowing c,because we're not going to know exactly what it is 
CD|but,let's at least for now,go with this,and hope that that's good enough to give us the design we want 
CD|so now we know that the force is OMITTED times u,but it's the mass time the acceleration 
NL|right 
CD|so OMITTED dot,which is the same as OMITTED OMITTED,which we had up there 
CD|well,that's a which means that mass times the acceleration which is mx dot is equal to the force,but the force is OMITTED times u. so,that tells me directly that OMITTED dot is OMITTED over OMITTED times u. so,this,this sweet heart equation here is an equation that describes how my input maps on to 
CD|the state of the system 
CD|it's a differential equation 
CD|but it's an equation that tells us something about how my choice of input affects the system 
NL|okay 
CD|this is,in fact,a rather good model 
CD|and i want to show a little video 
CD|i was involved in one of the,the darpa 
CD|grand challenges 
EX|this was an urban challenge 
EX|where we were supposed to build self-driving cars and we use almost exactly this model for,for our car 
CD|so i want to talk a little bit about how one would do this 
CD|so here is the front,a spinning thing,that's a laser scanner 
CD|on the side here,is another laser scanner sitting on top of a radar 
CD|these were what we used to get measurements 
CD|now what we see on the inside is our instrumented car,which translated ultimately input voltages onto mechanically things that push down the gas pedal 
CD|so this is how we actually affected it with the same coefficient 
CD|and now,look at this video 
CD|the car gets around obstacles,and then it gets out of bounds,and it starts oscillating 
CD|so,i'm showing this 
CD|a,because i think the car is awesome 
CD|but,b,because there are,even though we didn't crash into things,we were oscillating a little bit 
CD|so there is something not perfect about this control design 
CD|see how we get out of the lane,we're oscillating too much 
CD|if you look at the steering wheel,see that this is a little skittish 
CD|and that's another indication that maybe the control design here wasn't perfect,but the velocity controller was based on a model that's very similar to,to what we just wrote down 
EX|here's another example of obstacle avoidance where 
CD|we're actually trying to avoid another car,but the point being is that,this very,very,very simple model that we wrote down is actually applicable to real systems 
CD|and this is part of the miracle of abstractions,that you're that you're able to get simple things that you then can apply for real 
CD|now,i want to point out that we did real well in this competition up to a point,these were actually the semifinals before the finals 
CD|so let me show you what happened at the end 
CD|this breaks my heart to show you but i'm going to show it to you anyway 
CD|here comes our car 
CD|sting racing 
CD|it's slowing down,it's slowing down and then ow 
CD|it drives straight into a OMITTED rail,which is this concrete railing 
CD|what happened was that we got some measurement errors,a lot of measurement errors actually from the gps 
CD|but i wanted to show you this because it was the outcome of it 
CD|regardless of which,this was still 
CD|a very complicated system 
CD|a very complicated robot,a car,and the model we came up with was very simple,and the point is that simple models a lot of times get you very far 
CM|so,let's see how we should actually do the control design here 
EX|let's assume that we can measure directly the velocity,and record,recall that the state 
CD|OMITTED is the velocity the measurement or the output is what we called OMITTED,so OMITTED is actually directly equal to OMITTED in this case,so we have a some way of measuring velocities which you know typically have a,you have a speedometer in your car so we know roughly what the velocity is and now their control signals should be a function of r-y,where OMITTED is the desired velocity and OMITTED is the actual velocity 
CD|and,i'm going to call this OMITTED,which stands for error 
CD|and our job,as control designers,is to make the error disappear,drive the error down to zero 
CD|so let's,before we do the actual design discuss a little bit about what are the properties that a useful controller could have 
CD|well property is that the controller should not overreact 
CD|if the error is tiny,we're almost perfect in terms of the velocity of the car,we should not have a large control signal 
CD|the control signal should not be aggressive when we're close to being done,it's like 
EX|lets say that you're trying to thread a thread through a needle 
CD|well,when you're really,really close you shouldn't just jam the thread in there 
CD|you should take it nice and slow when you're close 
CD|so,no overreactions 
EX|that's important,because when you start overreacting,you start responding very quickly and aggressively to measurement of noise,for instance 
SM|so,a small error should give a small control input 
CD|OMITTED should not be jerky 
CD|and jerky,here 
CD|all i mean with that is that,it shouldn't vary too rapidly all the time 
CD|because if it does,then we're going to be sitting in this car 
CD|with our cruise controller,we're going be having a cup of coffee with us 
CD|and,now the cruise controller is smacking us around all over,because it's jerking,we're going to spill our coffee 
CD|and,in fact for auto pilot's on airplanes,there are limits on their accep,acceptable accelerations that are directly related to cups of coffees standing on the,the tray tables in the aircraft 
CD|so you should be,not overreacting 
CD|it should not be jerky 
CD|and the,it should not depend on us knowing OMITTED and m. so,m is the mass of the car 
CD|OMITTED is this semi-magical transmission coefficient 
AP|the mass of the car is changing depending on what luggage we have 
AP|it's changing depending on how many passengers we have 
AP|we should not have to redesign our controller just because a new person entered the car 
AP|we shouldn't have to weigh everyone and enter how much we weigh to,for it to work 
CD|and in fact elevators have bounds on how many people can be in the elevators 
CD|this is import,related to the fact that they design controllers that are robust to variations in mass across a certain spectrum 
CD|same thing for cars 
CD|the cruise controller should work no matter how many people are in the car and we don't want to know c. what this means is that controller can not be allowed to depend exactly on the values of OMITTED and m. so these are the properties,high level properties that we have to insist on our control signal to have 
SM|so having said that,in the next lecture we're going to see how we can actually take these high level objectives and turn em into actual controllers and see what constitutes a good control design and 
SM|conversely,it would constitute a bad control design 
NL|welcome back to the second programming simulation lecture 
SM|this week i will talk about differential drive,odometry and infrared sensors 
SM|in fact,this week's programming assignment is focused on implementing the robot's sensors and actuators 
SM|therefore,you will need to transform from the unicycle dynamics in the controllers to the differential drive dynamics and the mobile robot 
SM|you also need to use the wheel encoder to keep track of the robot's position and orientation 
CM|this is called odometry 
SM|and third,you'll need to use the infared sensors to measure distance to any obstacles that might be around teh robot 
CD|the simulator emulates the quickbot,and the quickbot is defined in the quickbot.m file 
CM|this is a class and it's located in the robot package 
CD|packages in matlab are denoted by a plus in front of the folder name 
CD|this robot has a two-wheel differential drive,meaning that each wheel is independently,controlled by a single motor 
CD|and,it also has a wheel encoder for each one of the wheels 
CD|and these wheel encoders are responsible for measuring the distance that each wheel travels 
CD|and they have a resolution of NUMBER ticks per revolution 
CD|and the robot also has five infrared sensors and these infrared sensors can detect any obstacles,that are within a range of four to thirty centimeters in their field of view 
EX|following is a little diagram to explain to you how the simulation actually works 
CD|first of all,there is the simulator and it has a timer object 
CD|and this timer object calls at every time step the execute function inside the supervisor 
CD|the supervisor is really the decision maker and it's responsible for,first of all,gathering the sensor information from the robot 
CD|it then selects a controller 
CD|and passes the censor information along with an estimate of the robot's position and orientation to the execute function in the controller 
CD|this execute function in the controller,then computes the appropriate linear and angular velocity of the robot which is then,converted to the left and right real speeds of the robot and passed back to the robot 
CD|supervisors also responsible for updating the estimate of the robots position in orientation and this whole process is repeated at every time step 
CD|the supervisor itself was defined in the qb supervisors.mfile where as all of the controllers are found in the controller package 
CD|the first part of this assignment is,to convert the linear angle of velocity in the controllers to the left and right angular wheel velocities on the mobile robot 
CD|you'll do this in the unit diff function which is defined in the differentialdrive.m file 
CD|this function takes in the linear and angular velocity of the robot and returns the left and right wheel speeds 
CD|the skeleton code show you how to retrieve the radius of the reel OMITTED and the distance between the two reels,l. what you need to use to calculate the left and right wheel speeds 
CD|the second part of this assignment is odometry 
CD|what you need to do is to measure the distance traveled by each wheel and estimate the position and orientation of the robot using those measured distances 
CD|you will implement this in the update odometry function,which is inside the qbsupervisor.m file 
CD|let's take a look at the skeleton code for this function 
CD|here you have the skeleton code for this function 
CD|first you will retrieve wheel encoder takes from the robot,then you will recall the previous wheel encoder takes which is used which is achieved by retrieving the previous text stored in the pre,from the,in the previous iteration of the code 
CD|then,you will use,then you will retrieve the current state estimate,meaning,what is the current estimated position and orientation of the robot 
CD|then,you will retrieve the,the useful constants such as the radius of the wheel,the distance between the wheel,and 
CD|how many readers are there for each tic of the encoder 
CD|then your part comes,which is to implement odometry by computing the difference in the OMITTED position,the difference in the OMITTED position,and the difference in the orientation between now and the last time the odometry was updated 
CD|you will then add these deltas to the current estimate of the pos,current estimate of the orientation and position,and save,and save that as the new estimate 
CD|you will also need to save the current number of ticks in the right and left wheels for the next iteration 
CD|inaudible part of these assignments is to make sense of the ir distance sensors 
CD|in particular,these sensors will return voltages in the range from NUMBER to NUMBER and those correspond to distances between four and NUMBER centimeters 
CD|the relationship between distance and voltage,is shown in the graph on the left 
CD|now what,to make matters a little bit more complicated,is that the robot actually returns a integer value in the range of NUMBER and NUMBER what these values simply correspond to the voltage divided by two then multiplied by NUMBER since the graph on the,in the previous slide is not linked is not linear 
CD|we need to use the unknown polyfit to find a fifth-order polynomial that will fit the data 
CD|we will then use the coefficients from that function and the polyval function to convert from the integers to an actual distance in mirrors 
CD|you will do this in the get ir distances function 
CD|this function is defined in quickbot.m 
CD|and you need to implement two specific parts 
CD|first you need to properly convert from the integers to the voltage,and then you need to hard code the coefficients that were output by the polyfit function 
CD|to help you test the assignment,we've included a go to angle controller 
CD|this is a OMITTED regulator,which will simply steer the robot to a specified angle 
CD|if you wish to change the angle to which this robot steers,you need to go into the constructur and qbsupervisor.m and change this variable,right here 
CD|object.theta_d 
CD|i have it set to pi divided by four,so we'd expect that the robot would drive off at a NUMBER degree angle with respect to the OMITTED axis 
CD|so let's see this in action 
CD|i'm going to hit play and what we should see is the robot 
CD|drived at a NUMBER de,de,degree angle 
CD|i'm going to move the graph out of the way and we're going to follow this robot 
CD|and as you can see it's driving at NUMBER degrees with respect to the OMITTED axis 
CD|it's going to just continue driving at this angle all the way until it's going to crash into the thread wall 
CD|there you go,we found a crash 
CD|you'll see in the,in the command window,that i've actually been spitting out the estimated posts from the odometry at every time step,and you can see that the values that i'm getting for the angle are close to pi divided by four 
CD|so this controller successfully steers the robot toward that angle 
AP|my tips for this week are to,first of all,make sure you read the section on week two in the manual for more details than you find in the slide,in these slides 
AP|and also,to use the commented out fprintf statements that i've included in the comments in the code 
EX|or into,maybe add some more of your own and this is really useful for debugging because for example,when you're dealing with implement in the odometry,you want to print out what you're currently estimating the position of the robot to be 
EX|you know for example you can easily see that my robot drove at NUMBER degrees,but i also needed to print that out to the command line to make sure that those values not jump 
NL|and that's it for this week 
NL|hello and welcome back 
SM|this is the third programming and simulation lecture 
SM|this week i'll be talking about go-to-goal controllers 
SM|these controllers are used to steer mobile robots to,from point a to point b. in fact,in this week's programming assignment you'll be implementing a pid based go-to-goal controller 
SM|therefore,you will need to implement the proportional,integral,and derivative,derivative terms of the controller as well as adjust the gains for optimal performance 
SM|the notation that i will use in this week's assignment is as follows 
CD|first,we have the location of the robot denoted by OMITTED and y. the robot also has an orientation denoted by theta with respect to the OMITTED axis 
CD|the location of the goal is denoted by x_g and y_g,and the vector between the goal,and the,and the position of the robot is denoted by u_gtg 
CD|this vector also has an angle,theta_g,with res,or with the respect to the x-axis 
CD|now,this particular go-to-goal controller that you'll be implementing works in the following way 
CD|we're going to keep the linear velocity constant and use pid to compute omega,the angle of velocity of the robots,that will steer it towards the goal,and you will implement this in the go-to-goal class,defined in gotogoal.m 
CD|an important part of this controller is memory 
CD|we need memory to keep track of the previous and accumulated error for the integral and the derivative terms of the pid controller 
CD|the way we keep memory is through variables in the class 
CD|we have two variables 
CD|the first is this variable right here,which is the total accumul,accumulated error 
CD|whereas this,whereas,whereas this variable right here is the previous error 
CD|and both of these will be remembered at each time step so that we can keep track and use them in the,when you're calculating the derivative and when you're calculating the integral 
CD|you also should note,take note of these three variables up here,which correspond to the proportional,integral,and derivative gains of the controller,which you can adjust for the pid controller 
CD|you will implement all three parts of the pid controller in the execute function 
CD|this execute function is also in the gotogoal.m file 
CD|and this execute function takes in the location of the goal,as well as a linear velocity and the location and orientation of the robot 
CD|and computes the appropriate linear and angular velocity,and outputs this 
CD|so let's take a look at the skeleton code for this function 
EX|this is the skeleton code for the execute function 
EX|at the top,we're retrieving the location of the goal as well as the location of the robot and its orientation,and the design of linear velocity 
AP|then you will need to compute the heading to the goal 
AP|and compute the error between the robot's orientation and the orientation of the goal with respect to the robot 
AP|in the last part,you need to complete the three terms of pid controller 
AP|first,you calculate the proportional term,then the integral term,and then the derivative term 
AP|and then you combine all three terms along with their gains to compute the appropriate angular velocity of the robot 
AP|last,the integral,the accumulated error and the previous error are saved for the next time step 
CD|now,if you run this pid controller,you're going to get something similar to the graph on the left,where the red dashed line is the desired angle to the goal,and the blue line,the blue solid line is the actual orientation of the robot 
CD|and what you want to see is that the difference between those two is minimized by the pid controller 
AP|and the other thing you want to see is that your gains ensure that there is very low overshoot and almost no osco,oscillations in the,in the output 
AP|you can see there's a little bit,but not too much 
CD|and also the blue line almost perfectly matches up the red line 
CD|now,to help you test this,we've included a stop condition so that the robot stops when it gets near the goal 
CD|and you can adjust this goal location in the constructor of the supervisor 
AP|and what you want to edit is this variable right here,obj.goal 
CD|and,and,by default i have selected -1 meter in the OMITTED direction and meter up in the OMITTED direction,as indicated right here 
CD|now,let's see this in action 
CD|i'm going to launch the simulator 
CD|and this brings it up,us,to the spar screen 
CD|i'm going to hit the play button and what you should see is the graph of the output come up as well as the robot should start immediately moving towards the goal location 
CD|so,let's do this 
CD|there's the graph 
CD|i'm going to move it out of the way 
CD|and,here you can see the robot driving towards the goal location 
CD|and i can click over here and look at the graph,and i see that the output is very nice 
CD|and,if i close down the simulator,i'll show you that i've used fprintf statement to print out the current position of the robot as well as the estimated position of the robot 
CD|and you should be very,very close to stock condition stops the robot within centimeters of the goal 
CD|so you,you should be fairly close here 
AP|my tips for this week are the same as last week 
AP|just make sure to read the week section in the manual for more details 
AP|and,use as many fprintf statements as you can to help you debug your code just like i did in the demo 
NL|and,that's it for this week 
NL|welcome back 
SM|this is week four 
SM|so we're halfway through the programming and simulation lectures as well as the assignments 
NL|so congratulations on making it this far 
SM|last week i talked about goal to goal controllers which allowed our robots to drive from their current location to some location in the environment 
SM|and this week i'm going to talk about 
SM|how to create an obstacle avoidance controller 
CM|and this obstacle avoidance controller,the point of it is that we want to be able to drive around the environment without colliding with any of the obstacles 
CD|so if you're driving a robot in your living room you don't want it to drive into your sofa and get destroyed 
SM|so this week we're going to take care of that 
CD|and there are actually many ways of doing obstacle avoidance 
CD|and i've picked out one particular way of doing obstacle avoidance 
CD|and this is how we do it 
CD|first,we're going to interpret the ir distance as a point in the coordinate frame of the sensor and transform this point into the coordinate frame of the robot 
CD|then we're going to take this point that's in the robots coordinate frame,and transform it once again into the world coordinate frame,so that we know where each obstacle is in the world 
CD|what we will do then is compute a vector from these points to the robot,and we will use that as an,and sum them together as an obstacle avoidance vector 
CD|and then what we will do is the same thing as last week is we're going to use this vector and use a pid controller to steer the robot towards the orientation of the vector 
CD|and effectively what will happen is that the robot will drive in the direction that points away from any obstacles that are nearby 
CD|and thus will avoid collisions 
CD|so i've mentioned coordinate frame at least four or five times on this slide 
CD|what do i mean by that 
CD|we use coordinate frames to give meaning to points in some sort of space 
AP|so when i tell you that the robot is located at xy theta,you need to know which coordinate frame i'm talking about 
CD|so,in most cases i'm talking about the world frame 
CD|and this world frame is centered at the origin,which i'm going to denote as just zero,zero 
CD|so i pick this,where this is in the simulator 
CD|and with respect to this world frame,the location of the robot is given by OMITTED and y. and of course,also with respect to this world frame,we have an orientation of theta,of it 
CD|so,the,the robot,right here has an orientation given by theta,and it's important that this theta is defined with,with respect to the OMITTED axis of this world frame 
CD|now,the next coordinate frame that we have is the robot's coordinate frame,and this coordinate frame is located right at the robot 
CD|so wherever the robot is,at the center of this robot,there's a cornered frame and it's,this,this we call the robot frame 
CD|so,with respect to the robot,this direction right here going out in front of the robot,which aligns with the robot's orientation is,would be theta,what it's maybe called theta prime is equal to zero,in that robot's frame 
CD|but,theta prime in the world frame,so maybe i'll call this theta prime OMITTED f,would be equal to the actual theta of the robot 
CD|now,the reason that we care about the robot's frame of reference,is because we only know the location of the sensors and the orientation of the sensors with respect to the robot,robot frame 
EX|so the robot knows for example,that it has one particular sensor,mounted right here which is,sensor number one 
EX|and this sensor,it knows is,is located at,at this point with respect to its own robot's coordinate frame,and its orientation along in this direction 
CD|and this orientation,with respect to the robot,is NUMBER degrees 
CD|but in the world frame,this orientation would be also a function of the actual orientation of the robot 
CD|so,let's call this maybe theta OMITTED prime 
CD|so we said that was NUMBER degrees,which is the same thing as pi over NUMBER and what we want to do is,to figure out where the sensor is,so theta prime s,in the world frame this would be not,nothing more than,pi divided by plus the orientation of the robot 
CD|so this would give you the angle of this sensor in the world frame 
CD|now,the way that i've denoted this in,in the manual is,using 
CD|sorry,i'm going to color this out 
CD|is using,x sub OMITTED four 
CD|so this is the OMITTED position of sensor four in the robot's frame 
CD|the OMITTED position of sensor four in the,in the robot's frame and the orientation of sensor four in the,in the robot's frame,so in this case,theta OMITTED four is actually,so this is equivalent to minus NUMBER degrees 
CD|because that's the orientation of the sensor with respect to the robot 
CD|now,we can go even one step further than this 
CD|what we can define is,a coordinate frame,with respect to the sensor itself 
CD|so each sensor has its own coordinate frame 
EX|so we're getting fairly deep in here,but,the point of that is that when we defy it for example here this sensor i's frame and in this case it's sensor you know,it's actually sensor four 
CD|and again the origin of this coordinate frame is located where the sensor is located 
CD|and the OMITTED axis of that coordinate frame aligns with the orientation of that sensor 
AP|and this is important because what we're going to do,is we're going to figure out that the distance that we're measuring is actually nothing more than a point in this coordinate system 
CD|so,here,what i've done is,the robot measures a distance of,so this distance right here is OMITTED and all i've done is i said well in this,particular coordinate frame,this point right here is equal to this vector right here 
CD|so OMITTED so because we're going a distance of d,the OMITTED direction the distance is and the OMITTED direction in that particular coordinate frame 
CD|now,what we really care about in this,in,in,in the controller is,well if i have this point in this sensor's coordinate frame,what does this point correspond to in the world frame 
EX|because,as you can imagine,if i for example have a,a point up here that is on an obstacle,i can say that the obstacle is at this location in the world,and i know where the robot is and from that we can make an informed decision about how to move the robot 
CD|and that's exactly what we'll do 
AP|so,in order for you to be able to calculate the transformation between the different coordinate frames,you're going to need to know how to rotate and translate in NUMBER 
CD|and what i mean by that is that if we have a coordinate frame,so say,this is my coordinate frame right here,and i have this point 
CD|right here,so i have a point right here,lets call that NUMBER now this i can also,i can pretend that this point is a vector going from the origin to this point and suppose what i wanted to do,is rotate this vector and then translate it 
EX|and let's say that i want to rotate it and i'm going to use this notation r,and i'm going to say,translated by one unit in the OMITTED direction,two units in the OMITTED direction and pi over four is the translation 
CD|so what does this OMITTED actually mean 
CD|well,the OMITTED is given by this transformation matrix 
CD|and what this transformation matrix is,does,is exactly what i just described 
CD|it's going to take a vector and,when you pre-multiply this vector by OMITTED you're going to get the,the,the vector transformed in space by OMITTED and y,translated by OMITTED and OMITTED and then rotated by this theta prime right here 
CD|so we're actually translating by OMITTED prime OMITTED prime according to my notation here 
EX|so going back to my example 
CD|what,what really,what's really going on is that first,we're going to rotate the vector by,pi over,which means that it's now located at,squared of over,squared over NUMBER and then we're going add a translation in the OMITTED direction and then a translation in the OMITTED direction of one unit and two units 
CD|which means that,the vector that i get,corresponds to plus squared of over and plus squared of over NUMBER so what i've effectively done here is i've taken this point,NUMBER and i have translate,rotated and translated it to this point up here,which is,plus square root of over 
CD|plus square root of over NUMBER and that's how the rotation and translation works,and so,so whether it's a point or vector doesn't really matter 
CD|the point really is that i've gone through this,this transformation,i've gotten a,a translation and a rotation 
CD|and to be a little bit more specific,what i've really done is so,on this side i would have so,so here this,this should have been r,1 comma comma pi over NUMBER and,what i'm multiplying,the vector that i'm multiplying with,what you'll notice is that this is first of all a by matrix,so we want to make sure that this is going to be a by matrix for this to be a valid multiplication 
CD|and what we're going to do is we're going to put the point that we're translating,so let's call this xy,so this is x,which would've been,which was equal to,y equal to NUMBER and then we're always going to place to make,going to place a right here 
CD|so,this stays a independent of what OMITTED and OMITTED are 
CD|so,why am i telling you about this 
CD|well,you need this tool,you need this transformation matrix in order to do our transformation from the point in the centers,reference framed all the way back to the world,uh,to the world coordinate frame 
CD|and this is the entire calculation that you're going to be doing 
CD|as you can see here what i've done is i have,the point OMITTED sub i NUMBER so this is the distance that was measured by sensor i. then,i'm doing the transformation from the sensor frame to the robot frame and my input into the rotation and translation matrix is the position of the,and position and orientation of the sensor on the robot,in the robot's frame 
CD|so now this entire thing gives us this point in the robot's reference frame,instead of the sensor's reference frame 
CD|so,we have to do another rotation rotation and translation 
CD|and we do that by using the robot's location location and orientation in the in the,in the world frame 
CD|when we do that,this entire thing,right here will,point,give us the point,this original point right here,in the world frame 
CD|and this is exactly what this is 
CD|so these are the world frame coordinates of this,of this point detected by this particular infrared sensor i,now,let's get to the code 
CD|now that we're armed with this tool 
CD|first of all,we're going to create,or we've already created a new file for this controller 
CD|it's going to be it's own file,so it's it's own controller,it's going to be called avoidobstacles.m 
CD|and like this comment says,avoidobstacles is really for steering the robot away from any nearby obstacles 
CD|and really,the way to think about it,is we're going to steer it towards free space 
CD|and,first of all,all these transformations are going to happen inside of this function called apply_sensor_geometry 
SM|we're going to do all three parts in there before we even get to the pid part of the,of the controller 
CD|and the first part is to apply the transformation,from the sensor,sensor's,coordinate frame to the robot frame 
CD|and really,what i'm doing here is i'm em,already giving you the location of the sensor,of each sensor eye in the robot's coordinate frame 
CD|and that what i,what i what i want you to do is first properly implement the get transformation matrix 
CD|according to the equation that i gave on,on previous slide,previous slides 
AP|and once you've done that properly,of course,you're going to have to input these here 
AP|and then you have to figure out the proper multiplication and again,you should look back at what i've done before 
CD|but remember,we're only doing one step,so really what you should be doing is,r,xs,ys,theta OMITTED multiplied by di,, and NUMBER so this is what i expect you to implement,right here 
SM|then,we're going to do the next part,which is transforming from the,the point from the robot's coordinate frame over to the world coordinate frame 
CD|so,this follows a si,the,a similar pattern as what we did in the previous slide 
CD|again,what you want to make sure is that this becomes the input for this 
CD|you've already implemented get transformation matrix so it's spits out the appropriate r,and then you're going to again have to do the calculation 
CD|so you pick the previous vector,so i'm just going to represent that by scribbles and multiply that by r,x,y,theta 
CD|and that should give me all of the ir distances,all,all the points that correspond to the ir sensors in the world frame 
CD|and now we know where,where obstacles are in the world or free space in the world,depending on whether you're picking up an obstacle or you're not picking up an obstacle 
CD|now,so like i said,we've computed the world frame coordinates of all of these points 
CD|so each one of these points right here in green,we know where they're located in the world,right 
CD|so,what we can do,is we can compute vectors from the robots to each one of these points 
CD|and then what we can do,is since they're all vectors we can just sum them up 
CD|and we can sum them up and we get this large vector that's point,that is going to end up pointing away from any obstacles 
EX|and the reason for that is that these sensors so for example 
CD|this sensor right here,that is detecting no obstacles or the distance is really great,is going to contribute much more than this sensor which is picking up an obstacle close by 
CD|so when you sum up all these sensors,the main contribution is going to be along a direction which is,away from the obstacle 
SM|and then once we've done that,we can use the orientation of this vector and use pid control much like we did in the doog,google controller to steer the robot in to the direction of the free space 
CD|so here is the code,in the main execute function of the avoid obstacles controller 
CD|one thing i would like for you to pay attention to is that i have created this sensor gains,and i ask you in the manual to think about how do you want to structure these sensor gains 
CD|do you want all of the sensors to count equally,do we contribute with equally,do you may be care about a particular sensor more 
EX|so for example do you care about the one that's in the front and that's the third sensor 
CD|so maybe this should be,so that you pay more attention more to the obstacles that are in front of you 
CD|do you or do you want to pay more attention to obstacles that are on the side in that case you would maybe increase these two,so sensor one and five,that go to the left and to the,to the right of the robot 
AP|so,play around with that and you should get some interesting results 
AP|and again,here i'm going to,here i'm asking you to properly calculate each of the uis,so each one of the vectors 
AP|and then,we're just going to sum them together and then you're going to have to figure out the angle of this vector,so you get theta ao 
AP|and then,just like last weekend,the goal to goal controllers,so you're already familiar with that,you need to compute the error between,this angle that you want to steer to,and the actual angle of the robot 
CD|now,to test this we're just going to implement this controller and run it on the robot so let's see what happens 
CD|i mean,obviously we're,we hope that the robot's not going to collide with any of the walls or any of the obstacles that i've added to the environment 
CD|but let's make sure this actually happens 
CD|i've already implemented the controller,so i'm going to head eh,go ahead and launch the simulator 
CD|i'm going to hit play,and we're going to follow this robot and see 
CD|so i clicked on it to follow it,and we're going to see what,what it does 
CD|it's already turned away from the,from the obstacle 
CD|now there is a wall and phew,we made it and here's another wall and yet again,the robot turns away 
CD|and since i've implemented this controller correctly,the robot should just drive around aimlessly around this environment 
CD|we haven't told him where he needs to go,we just have told him that he needs to avoid any obstacles 
CD|and,in fact,next week,we'll talk about how to combine goal to goal controllers and avoid obstacle controllers 
AP|my tips for this week are again to refer to the section for week in the manual for more details 
CD|and i have always provided very detailed instructions that should help you get through these assignments 
CD|and also keep in mind that,even though this seems like a really difficult approach and really tedious,and you could probably think of,of a way easier ways of doing obstacle avoidance with robots 
CD|the reason that i've done it in a way where we end up with a vector is that it'll make it a lot easier next week,when we combine the goal to goal controllers and the obstacle one controllers 
CD|because then it's a matter of just blending two vectors together,we know definitely know how to sum vectors together so 
NL|stick with it and i'll see you next week 
NL|welcome back 
NL|this is week five 
SM|in week three we wrote a controller to take our robot from point a to point b. this was called the go-to-goal controller 
SM|and in week four we designed a controller that avoids obstacles 
SM|so,what we want to do this week is combine those two 
SM|so that our robot can drive from some point in the world to some other point in the world without colliding with any of the obstacles 
SM|and the way that we're going to do that is to arbitrate between the go-to-goal and avoid-obstacle controller 
CD|and that really means,think about how should we combine these two so that we make the right decision 
CD|should we be avoiding obstacles 
CD|or should we be going to goal 
CM|so the two techniques that we're going to be using is blending and hard switching 
CM|and in blending what we're going to do is we're going to create a new controller which combines both the go-to-goal controller and the avoid-obstacle controller 
CM|then what we're also going to test is switching between the go-to-goal and the avoid-obstacle controller 
SM|so we'll either run the go-to-goal controller or we'll run the avoid-obstacle controller,and we'll switch back and forth depending on whether the robot is close to an obstacle or not 
SM|and then we're going to do a third experiment,which is to use the blended controller as an intermediary between the two 
CD|so we're going to go to goal when we're away from any obstacles,if we're getting close to obstacles,we'll switch to the blended controller 
CD|and if we're within a dangerous distance of the obstacle,we'll switch over to the intermed,into the avoid-obstacles controller 
CD|so,what do we do when we,when we,when we blend 
CD|what we're going to do is create one single controller that does both 
CD|and what we'll do is first compute our go-to-goal vector which is OMITTED gtg,and then we're going to compute the obstacle avoidance vector,u ao 
CD|and we will know how to compute both of those from the previous weeks 
CD|and what we want to do is we want to combine these two in some way 
CD|and,one way to combine these two is to do this in a linear fashion 
CD|so,what i'm going to do is take a fraction of the obstacle-avoidance vector and take another fraction of the go-to-goal vector and just add them together 
CD|and then what i should get is this vector OMITTED ao go-to-goal 
CD|so so this is a combination of these two vectors 
CD|and this vector will point us in some direction that is both somewhat in the direction of the goal,and somewhat in the direction away from the obstacle 
CD|and what i really want to point out here too,is that i'm using OMITTED ao,n,and that just denotes that fact that i'm using the normalized version of the vector,and that's nothing but,taking the vector itself and dividing it by the magnitude of the vector 
CD|and that way you get,a vector that's a,a unit length rather than some arbitrary length 
CD|and that just allows us to if we take the normalized version of the obstacle avoidance vector and add it to the normalized versions of the go-to-goal vector 
CD|then we get an equal balancing of the two vectors rather than having to worry about what their respective magnitude is 
CD|hard-switching is going to work in a little bit different way 
CD|what we're going to do is,we're going to just use one controller at a time 
EX|so,for example,is like i said,if we're close to the obstacle,we're going to want to do obstacle avoidance 
CD|but,if we're clear of the obstacle,we're going to want to just do go-to-goal 
CD|so,if we're away from the obstacle,use the go-to-goal vector 
CD|if we're close to an obstacle,use the obstacle avoidance vector 
CD|and the way we're going to do this is we're just going to make a decision about how close the robot is to an obstacle 
EX|so for example,if one of your infrared sensors on the robot senses a distance less than say,NUMBER centimeters,we might want to switch over to avoid obstacles 
CD|but whereas if we're greater,at a distance greater than NUMBER away from,NUMBER centimeters away from the obstacle we can go,we are safe and we can go ahead and do,just go to goal 
CD|and then the last one is to,is to use the go-to-goal if we're some distance away from the obstacle,if we're getting closer we're going to switch over to the combined blended version of the vector or of the controller 
CD|and,then,if we're too close to the obstacle,if it's unsafe for the robot to do,be worrying about where to go to,worrying about going to the goal 
CD|we're going to switch over to avoid obstacles 
CD|and that way we're going to ensure that we're definitely not going to slam into any obstacles 
CD|now,the logic for deciding which controller to use is going to end up in the supervisor 
CD|and the supervisor really considers each controller to be its own state 
CD|and the supervisor can switch between these states 
CD|which means we're switching between the different controllers 
CD|so,we're going to have three different controllers 
EX|and,kind of going back to week three,an example of this is if you look at the execute function of the supervisor and qb supervisor dot m,you may,might have seen that i had a statement that says switch to state stop 
CD|and this means that i'm switching from the go,go-to-goal controller that we were using at that time and switching to the stop controller 
CD|and the stop controller is nothing but a controller that sets the linear angular velocity of the robot to NUMBER now,we,we also had a condition when we wanted to switch over to the start,to the stop controller from the go-to-goal controller 
CD|and that condition was that the robot was at its goal 
CD|so,and the,and the check_event function,what it did,is it looked at,well,is this condition,at_goal,true,and it was true whenever the goal or whenever the robot was within a distance of d_goal of the goal location 
CD|so that,that statement then becomes true,which means that we have switched over into the stop controller from the from the go-to-goal controller 
CD|and that was a very,very simple state machine 
CD|because all it said was,that we start off in the go-to-goal state,or we're using that controller 
CD|and then when we're close enough to the,to the goal location,we switch to the other state 
CD|which is the stop state which corresponds to the stop controller 
CD|it's very,very simple 
CD|what we're going to have to do this week is going to be a little bit more complicated 
EX|and here's one example of a state machine that you could implement using all three controllers 
CD|or actually,four controllers 
CD|we're going to start off on the go-to-goal 
CD|because we're going to assume that the robot starts somewhere 
CD|it's not going to be near an obstacle 
CD|it wants to go to the goal 
CD|then,if,we are at the obstacle,so meaning that we're at some distance close to the obstacle,we're going to switch into the blended controller with is the ao and go-to-goal controller 
CD|and if we leave the obstacle,meaning we're some distance farther away from the obstacle,we're going to,the condition obstacle_cleared will become true,and we're going to go back to goal 
CD|and so,we could,you know 
EX|you can imagine that we can switch between these,whenever either one of these conditions is true 
CD|and,but this gets a little bit more complicated than that 
CD|if we are in the state ao_and_gtg,so if we are in this state right here,and the robot is some distance less than,dsafe 
CD|so what i want,we want,we're going to be less than dsafe away from the obstacle,then this will become true 
CD|and in that case,what happens is that we switch from this state into this state right here,which is avoid_obstacles 
CD|because this is kind of like a last resort of,avoiding any collision with any obstacles in the world 
CD|now again,if we're,end up in a,if we avoid the obstacle and we end up in a,at a distance that is safely away from the obstacle,we can switch back to the blended controller in the middle 
CD|so you can kind of think about your,you,the robot is always in some state so,in some state,and it takes a transition if one of these is true 
CD|and then it switches to this other controller 
CD|so then it ends up here 
CD|so if,if this one becomes true,it switches back to this one 
CD|so you can just follow the,these conditions from state to state to state to figure out where the robot,what the robot is going to do 
SM|and i said that we're going to have four states and four controllers 
CD|it's because i also have one for stopping 
CD|so,if we are,if we are in this case in the go_to_goal state,in the,in the,in,in this controller,end state 
CD|then,cough if at_goal becomes true,then we go ahead and stop 
CD|and,what you will probably notice here,is that i don't have a connection from any of the other states to the stop state 
CD|so,in this state machine,the only way that the robot will stop at the goal location is if it's in the go_to_goal state 
CD|if it's executing the go-to-goal controller 
CD|so maybe a better design would be to also have some paths down here,that's at,at_goal 
CD|and the same thing for here 
CD|so maybe this was a better one 
AP|but you're free to design the state machine whichever way you want,so long as you make sure your robot doesn't collide with the obstacle and ends up at the goal and stops there 
CD|now,as far as implementation is concerned,the files that you'll be interested in are first of all,the execute function and the supervisor,so qbsupervisor.m 
CD|that's where we're going to implement the logic for the state machine,where we're actual,well,i should say we're implementing the state machine in the execute function 
CD|and the other file of interest is going to be this new controller which is aoandgtg.m 
CD|so that's where you implement the blended controller 
CD|and,of course,we'll also take advantage of gotogoal.m and avoidobstacles.m 
CD|not only in the design of the blended controller,but also,we're going to switch it back and forth between these controllers that we've already written in the previous weeks 
CD|so,let's see the blended controller in action in matlab 
CD|see here,i'm going to go ahead and launch it,and of course i've already implemented it,and we're going to run this 
CD|so,this is the blended controller 
CD|i'm going to click on the robot and follow it 
CD|and,as you can see,the robot is avoiding the obstacles 
CD|but it's also going to go to the skull location,which is -1,up here 
CD|and also has a condition for stopping 
CD|so what i've done here is i'm running the,the,the blended controller 
CD|and if i am at the goal,then i stop 
CD|and so,this is a success 
AP|now,my tips for this week are,as usual,make sure you read the section corresponding to this week's or week five in the manual for more details 
AP|i also encourage you to really experiment with different ways of blending the go-to-goal and avoid-obstacles 
SM|so i showed you in an earlier slide one way of combining the two vectors together 
NL|but i'm sure you can think of,of even better ways of combining those 
AP|and also experiment with different state machines 
CD|so there's different,definitely different ways of combining the different controllers or the different states and conditions 
CD|to construct a state machine 
AP|and just explore and see what works the best for you and good luck 
NL|blank_audio 
NL|welcome to week six 
SM|this week i'm going to be talking about following walls 
NL|why do we need to follow walls 
SM|well,last week we solved the navi,we somehow seemed to solve the navigation problem 
SM|we had our robot drive from point a to point OMITTED without colliding with any of the obstacles 
CD|but,the obstacles were fairly easy,and 
CD|the reason for this is that they're convex 
CD|but we can have these obstacles that are concave in shape 
EX|so,for example,take this u-shaped obstacle,and if a robot starts here and it's goal location is on the other side of the obstacle,what will happen with the controllers that we designed last week is that the robot will drive from here 
EX|into the obstacle,and then start avoiding the obstacle,and then drive back into the obstacle 
CD|because it's always trying to get to this side,but also avoiding this obstacle 
CD|but it's trapped in here 
CD|because the shape of the obstacle is concave 
CD|so what we need is an additional controller,the follow-all controller,that will,so that when we make a decision that we're inside of our concave obstacle,then we're going to follow the contour of the,the boundary of this object,and 
CD|we're going to follow it all the way around until we've cleared it and then we can proceed onto the goal location 
CD|and that's,that's the objective for this week 
CD|and the way that we'll do this is we're going to use the infrared sensors to approximate a section of the wall,alright 
CD|it's really an obstacle but we're going to call it a wall 
NL|and 
CD|and once we've,once we've estimated a section,we're basically going to figure out a vector that's tangential to the wall 
CD|and also one that's perpendicular to the wall 
CD|and the point is to combine these two vectors into a single vector that will not only steer the robot into,into one direction along 
CD|the contour of the boundary of the wall 
CD|but also a vector that will make sure that the robot neither steers into,into the wall or away from the wall 
CD|so we're going to maintain some distance from the wall as we follow it 
NL|now 
CD|how is the robot going to estimate the wall 
CD|well,first of all,one of the two inputs into the controller is going,is going to be either left or right 
AP|so we are either going to follow a wall thats to our left or to our right 
AP|so we have to make that decision before we do anything else 
CD|if we decide that we are going to use 
CD|the left the left direction 
CD|what we're going to do,is we're going to use sensors one,two,and three on the robot 
CD|so we're going to use these three sensors 
CD|to,to estimate a wall that's the left,or an obstacle that's to the left of of the robot 
NL|and 
CD|what we'll do is we'll pick of these three we're going to pick the two,that have the shortest infrared sensor readings 
CD|and,we already know how to get a point,on these in the world frame 
CD|so,what we end up is we end up with a point so 
CD|we have,this point right here which i'm going to denote as,point NUMBER and,this is going to be point NUMBER so,we've picked these two,and since we've picked two points in the world,we can come up with a vector right 
CD|so,we're going to come up with this green vector right here 
CD|and,this green vector is going to be our vector that's tangential to the wall 
CD|so i'm going to call this OMITTED,the vector OMITTED OMITTED denotes that,this is for the follow wall,and 
CD|comma OMITTED denotes that this is tangential to the wall 
CD|and really,the way that you define it is,it's OMITTED minus OMITTED 
CD|that's the definition of this,of this vector 
CD|now,i also said that we want to maintain some spacing from the wall 
CD|so we're going to have to calculate a vector that's perpendicular 
CD|and the way that we're going to calculate it is,again,we have the vector from the previous slide 
CD|we have OMITTED,and this time it has a prime mark,and that's because i'm going to normali,normalize it,and 
CD|thus,and again,i think last week i talked about this is,what we're going to do is we're going to just take the vector,and divide it by its magnitude 
CD|so that's the,that's the normalized version of the of that vector 
CD|and what we'll do is we'll first take a point on this vector,which is going to be OMITTED,and 
CD|this point,i'm just going to pick for,to make it easy,i'm going to pick the first i'm going to pick the point detected by this first infrared infrared sensor 
CD|so,this one right here 
CD|because i know this one i could also picked 
CD|this one right here but i picked the first one 
CD|now i'm also going to pick another point which is going to be the location of the robot in the world 
CD|so that's going to be my point or vector up,OMITTED sub OMITTED. and since i again have but i have so,i have this point so i have 
CD|let me indicate that on the slide 
CD|i have this point right here,this point right here,and this vector,and what i can do is i can compute the,a vector that points from the robot,so from the robot 
CD|to this closest point on the wall 
CD|and the,and the equation that describes this vector is as follows 
CD|it's this,so this vector,this perpendicular vector i'm denoting by OMITTED sub OMITTED,OMITTED. and it's this subtraction of these points dotted 
CD|with a dot product of,of the tangential vector and then multiply it again by the tangential vector 
CD|so this is just some linear algebra that gives me a vector from the robot to the closest point on the wall,that's,that lies on the tangential vector 
CD|and,this is not sufficient for us to maintain spacing yet 
CD|what we really want to do,is we want to find another vector that's goes in the opposite direction,and,and again from the previous slide i have this perpendicular vector,so all i'm going to do is i'm going to normalize it and multiply it by some distance fw 
CD|so OMITTED sub OMITTED 
NL|and 
CD|this distance right here is the distance that we want to maintain between the robot and the walls 
CD|so we want the robot to end up in such a way that this is equal to dfw 
CD|so the reason that i define this vector like,like so is that when we can combine 
CD|the two together 
SM|if we combine these two vectors together,we're going to get a vector that either points us toward the wall if the robot is farther than OMITTED OMITTED from the obstacle,or from the wall 
CD|and we're going to get a vector that points us 
CD|away from the,from the wall if we're closer than OMITTED sub OMITTED 
CD|so,that's the,that's the purpose of going through,through these equations 
CD|and really,what ends up happening is if we div if we 
CD|somehow linearly combine the,tangential vector to the,to the wall 
CD|and the perpendicular vector the,to the wall,that you know either points us towards or away depending on the distance 
CD|if we combine those in some way,we're going to get a,vector,u sub OMITTED,which will both 
CD|point us in the direction in which the wall is going to,that allows us to follow the wall,and it also has the component that either pushes us towards or away from the wall depending on how close or far we are away from the obstacle,and this is exactly what we wanted 
AP|and then the last thing that we have to do is we just have to use our good old pid controller to steer the robot in the direction of this vector,and we're good to go 
CD|so how all does this work 
CD|well,you saw in the previous slides that i got a really good estimate of,of,of the,of the,of a section of the wall 
CD|but that's not always the case 
EX|so,for example here on the inside corner,what i have here is this is the robot's estimate of,of the,of the wall 
CD|and you can see that this is an overestimate 
CD|so,we're actually okay with that,because if we're overestimating the wall,that's,you know,that's not really problematic because we're not going to 
CD|we're going to avoid this,this virtual piece of the wall and we're not going to slam into it 
CD|there's no danger of,real danger of that 
CD|but that is on,these inside corners 
CD|on the outside corners we are underestimating the wall 
CD|so you can see here that the robot thinks that this represents 
CD|is it a good representation of the wall 
CD|and if we cut this corner too closely the robot collide with this part of the obstacle that it doesn't really sense because there's a little bit of spread between the sensors because we don't have,you know,NUMBER,NUMBER sensors on the robot that cover every single inch outside the robot 
CD|we only have five sensors,so we got to make,deal with what we have,so here we have to be a little careful,and that's where the design of this distance,d sub OMITTED comes into play 
CD|so,you want to make sure that this,this,value is large enough to allow us to not cut corners and collide with the wall 
CD|but also not too large so,so that we don't lose track of the wall,because we don't want to end up too far away from the wall and then the robot doesn't sense the wall anymore and we can no longer follow it 
CD|so,we want to kind of stick to the wall as close as possible,but not too close to collide 
CD|now the implementation is going to happen in a new controller,followwall.m 
CD|and you're going to have to implement some missing logic and,and,and math that was covered in the previous slides 
CD|and ag,also again covered in the,in the manual in much greater detail 
NL|and 
SM|as i said before the,what's,what's really unique about this controller its going to accept either left or right denoting which side of,which side of the robot the wall is going to be in which its going to follow 
CD|so we're going to tell it you're going to have to follow a wall that's going be on your left or we're going to tell you you're going to have to follow an op a wall that's on your right 
CD|and that those are going to be inputs and those inaudible,really come into play 
SM|and next week when we have our full navigation algorithm and state machine going on 
CD|so,let's see what this looks like in,in matlab and in the simulator 
CD|i'll launch the simulator and hit play 
CD|and here,we have the robot,following the wall on it's left 
CD|and as you can see here i got really,really close,to this corner 
CD|so that was a little dangerous 
CD|maybe i should have picked a better,better distance to maintain from,from the wall 
CD|and here we are overestimating so we're okay 
CD|and here we're going to cut it fairly close again 
CD|so this is pretty,pretty much a little too close for comfort 
CD|but,you know,we're not crashing into the,into the obstacles 
CD|so we're gon,we're okay with that 
NL|alright 
NL|great 
CD|so,the robot's going to follow this wall on and on and on until i close this 
CD|now,again,make sure re-read the manual for weeks,that's been updated for week six 
CD|it has a lot more details especially,you know,for the math and,and has diagrams that will help you 
CD|implement the logic in all the math in in the,in the controller 
AP|and i encourage you to experiment with different values of the distance to maintain from the wall 
AP|so you'll see different results for different distances that you pick 
AP|and also you can decide how to combine the two vectors that are tangential and,and perpendicular,to the,to the wall,and,and,and 
AP|in different ways,so 
CD|and it depends on where you want to put the emphasis 
CD|you might want to put the emphasis strictly on following the law,on following the law,and not worry about maintaining a distance too much,or you could do the converse of that,it's really up to you 
NL|and with that i wish you good luck 
NL|hello and welcome to the seventh and final programming and simulation lecture 
SM|this week,the programming assignment comes to its grand finale,and we will have an ro,quickbot navigate to the most complicated environment yet 
SM|and what makes this different from our navigation,from from week five,is that we need to answer three new questions this week 
SM|and the first one is,we need to keep track of the progress that the robot is making 
SM|last in week five,i talked about this problem that the robot can get trapped inside of an obstacle 
SM|and if it does,it doesn't,it doesn't know that it's not making progress 
SM|it's just going to try to keep going to the,to the goal,and then it'll avoid the obstacle,try to get back to the goal,and it'll go on and on 
SM|it'll never make any progress to the,towards the goal 
SM|so this week,we'll actually think about,is the robot making any progress 
SM|and if robot is not making any progress,maybe we should,you know,use the controller from week six 
CD|and follow the wall either to the right or to the left 
CD|so we're all have to make a decision not only,do we now start following the wall but in which direction,right or,or to the left 
NL|and finally 
SM|we also need to again revisit our final inaudible finite state machine from week five because that one will no longer cut it for,for this week's obstacle course 
SM|we're going to have to,to really think about if we're in a certain state and certain event becomes true 
CD|to which other states should we switch in order to have the rogo,robot progress towards its ultimate goal,which is to reach the goal location 
CD|and of course,don't collide with any obstacles,because that would be bad for our quickbot 
SM|so,all of the implementation this week will happen in the supervisor,so we're only going to be worrying about one file this week 
SM|and that's mainly because for the past seven weeks or six weeks we've written all of the necessary controllers that,that we need to,to solve this problem 
EX|and unlike the previous weeks i'm actually going to start off with the demo this week 
EX|to show you what it looks like when it works 
EX|so let's see it in action 
CD|i'm going to go ahead and launch the simulator and hit play 
CD|and we're going to click on the robot and try to get it,oop,there we go 
CD|and what you see here is first of all the robot has is navigating out of this obstacle that it's trapped inside of and it's following the wall nicely,or the boundary of the obstacle nicely,and it's going to stick to the wall until it decides,hey,i'm going to peel off and go towards the goal location,because the goal location is somewhere up around this area 
CD|and you'll see the robot has made it 
CD|and in the next couple slides,i'll go over exactly what decisions have made to get to this point and what all of these beautiful colored lines actually mean 
CD|and one more thing,here in the map land command window,you can see that i have a few f,f statements and these are 
CD|the robot switching between a state,so i can actually see that i was in ao and go to goal,and then i switched to avoid obstacles,and then back ao to ao and go to goal,and then to avoid obstacles,and eventually,there's also a follow wall in here 
NL|and so on and so forth 
NL|but let's get back to the slides 
NL|so 
CM|i talked about progression 
CD|and we need progression because if we were just to use the controller from week five i said we were going to get stuck and that's for the,the,the reason for that is that the robot is first of all trying to go to the goal 
NL|so 
CD|right here i have the goal to goal vector 
CD|and that was OMITTED and that's pointing me towards this goal 
CD|so you can just imagine this extends to here 
CM|so is our go to goal vector we're already familiar with that one 
CD|and i also have the obstacle avoidance vector 
CD|and perhaps i'm either going truly,go to goal,or perhaps i'm doing something in between 
CD|so,but the point is that i'm trying,that the robot is really trying to drive itself in this direction,or in this general direction 
CD|so it's wants to go to this,to this goal but it's a blocked off by,by,by this obstacle and it has to somehow navigate around it 
CD|now,blank_audio with respect to progression,what i want to do is i want to keep track of how close the robot gets to the goal 
CD|so,first,in the previous slide the robot was at this location,and now in this slide has progressed to this location 
CD|and it's actually gotten closer to the goal 
NL|and 
CD|because the reason it's gotten closer to goes goal,because this distance to the goal is larger than this distance to the goal 
CD|and the way that we update our progress is by calling the function,set_progress_point right here 
CD|so this function we'll call and we'll make,we'll say,well,you know,the robot has made some progress,and we're going to save its progress but we're always going to store the closest it's ever gotten to the goal location 
CD|and the reason that we do this is because we want to check a certain event,and this event is called progress made 
CD|and progress made to checks whether the current location the current distance of the robot to the goal location is shorter than the last set_progress point 
CD|and if so,it returns true otherwise it returns false and we're going to use this to check whether you know our robot has made progress towards the goal or not 
CD|so,what we saw in the what we saw in the simulation,was that the robots started somewhere over here,and then it drove in this direction and it started avoiding goals and now it's gotten to this point 
CD|so it's kind of follow this general trajectory,because it's gone here,it's probably going 
CD|go to goal,and then here,it's doing avoid obstacle,and then here,it gets to the point where it says well,no progress made 
CD|so,the robot's not made any more progress 
CD|so,time to make a decision 
CD|and,the decision that the robot makes is that when it's no longer progressing,it's going to try to switch into the follow wall behavior 
AP|but an important question is,what should the direction should be 
CD|should we follow the obstacle at our left or the obstacle on our right side 
CD|and we're going to make this decision based on three vectors 
CD|and we're going to make this decision based on the goal to goal vector which points towards the goal 
CD|so this is pointing me towards the goal location 
CD|the obstacle avoidance vector,which is pointing the robot away from the obstacles 
CD|and we're going to inspect both the follow wall vector 
CD|that we computed last week 
CD|in the,on the right side and on the left side of the robots 
CD|so we're going to look at these four vectors and make our decision whether we need,we should follow an obstacle to the left or to the right 
CD|and that's,and that's how we determine the follow wall direction of the robot 
CD|and the way we're going to do this is we're going to ask the questions,is this vector,right here,follow wall,and this is OMITTED again denotes that it's,it's with respect to the left,is this between the vector's obstacle of ordnance and inaudible 
CD|we're going to ask that question 
CD|and we're also,at the same time we're going to ask 
CD|is this vector 
CD|OMITTED follow wall comma OMITTED. between OMITTED OMITTED and OMITTED 
CD|and of course you can argue in this picture,well they're both,right 
CD|because this is one,this is between blank_audio this one right here is,this vector is between the two vectors on this side of things,whereas this vector right here is between these two 
CD|on these thought-side of things 
CD|and really,the requirement is going to be for,is it between these two vectors 
CD|if the a is,we're going to look at the side where the angle between OMITTED go to goal and OMITTED a o,so this angle between them is less than pi 
CD|so less than NUMBER degrees,so when we say is a vector between these two vectors 
CD|it has to be between them on the side where it's less than,probably where these two are less than pi apart 
CD|blank_audio and the reason i'm setting it up in this way is because that allows us to just do a little bit of linear algebra 
CD|and the little bit of linear algebra that we're going to do is,is this following equation 
CD|so what i have here is i have the go to goal vector 
CD|i have the obstacle avoidance vector 
CD|i have some scalar parameters 
CD|sigma one and sigma two 
CD|and on this side i have the follow wall vector that i care about 
CD|in this case,i pick the left side,but this might as well be the right side 
CD|and the condition is that we're going to solve this linear equation for these two parameters 
NL|so 
CD|blank_audio what is this vector equal to and oh,i'm so sorry 
CD|what is this scalar equal to 
CD|and what does this second scaler do 
CD|and we can compute this we're you know,you just have to rearrange this a little bit 
CD|and what we're going to do is,say,the,the condition that we're going to come up with is,as follows 
CD|if sigma1 is greater than,and 
CD|sigma is greater than NUMBER so if they're both positive,that implies that if we have the two vectors,ugtg and uao,then 
CD|this vector OMITTED,of OMITTED is between those two 
CD|so it's not on the other side 
CD|it's,it's on this side between the two,because this,because this angle right here is less than pi,that's going to be our condition 
CD|and i have posted pdf's online,and in and announcement that go over why this exactly works 
CD|why this linear algebra works,and why it makes sense 
CD|and i'll have and,and then,those notes,i have some more diagrams and a lot more detailed math,and you'll be able to follow along exactly what this little piece of linear algebra does for you 
CD|now,at some point the robot is,the robot you know follows the,follows the,the wall,the obstacle,so originally it was over here 
CD|over here and then it drove around and drove around 
CD|and this was the,this was the best progress we had made at any point,so right here 
CD|and it follows it around,follows it around all the way until it gets to this point right here 
CD|and at this point,it says look this distance here,from here to the goal,is less than the distance from here to here to the goal 
CD|and if that's the case,and i no longer need to slide,and sliding refers to that condition that i just talked about in the previous slide and we have one for either sliding left or one for sliding right,but in this case,it's sliding left 
CD|and so if this condition is no longer true,which it isn't because the,because as you can see right here these vectors are no longer between the inaudible goal and the obstacle points vector,and progress has been made 
CD|if those two conditions hold 
CD|then we can go switch back to go to goal and our robot can go ahead and make its way to the goal location and it doesn't,it no,no longer has to follow this obstacle right here 
NL|now,like i said,the 
CD|state machine,the finite state machine from week five is no longer sufficient for this particular problem so you're going to have to design a new one 
AP|and the design is up to you,but here are a few pointers of what you should probably think about in your finite state machine 
NL|the first is,as usual 
AP|if the robot is at the goal,then you stop 
CD|and it's useful for that as the first thing that you check in the finite state machine,because you don't want to execute anything else once you're at the goal 
CD|once you're at the goal the robot is done with its task and it's just going to stay in the stopped state 
AP|also,if the robot get into an unsafe distance to the obstacle,we immediately want to switch to avoid obstacles,because avoid obstacles really is our last ditch effort to make sure that a robot doesn't crash with,with obstacle 
AP|so it's usually a good idea to have that in there,to make sure that there are no collisions 
AP|then also,you want to have the condition that if are you going to goal or maybe you're doing obstacle inaudible and inaudible goal together,but both of these goal seeking behaviors 
AP|and you're no longer making progress then you want to switch to either to follow wall and you want to do that based on the condition whether you're sliding,you're suppose to slide left or slide right 
AP|and i talked about it in the previous slides but make sure you have that in there 
AP|and the fourth one is if you do get around the obstacle there will be a point where you're going to start making progress again toward the goal location and you will probably no lee,no longer need to slide along the wall in order to make progress,so if those both tho,both of those conditions are,end up being true,then you can go ahead and switch back to your goal-seeking behavior,so which is either go to goal,or what i usually like do to is if,if i'm close to an obstacle,which i typically am because of the follow all behavior i first switch into avoid obstacles and go to goal before i switch into pure go to goal behavior 
AP|now,my tips for week seven are 
AP|again,read the manual 
CD|it has more details 
AP|and also read the handouts,the,the additional handouts that i'm going to be posting that explains the linear algebra 
NL|and do that 
CD|and then really the more,even more important one is when you design this finite state machine,it's fairly complicated 
AP|and what i like to do is i like to get out a piece of paper and a pen and i like to draw the finite state machine 
AP|really think about... what are all the states that the robot can be in,and what are the events that can take it from state to state,and then construct it on paper before you even start coding it 
CD|because then you,what you can do is you can take your piece of paper,and you can pretend you're the robot and you can go step through and,and see if you can make it 
CD|all the way around the obstacle to the goal location 
AP|and then after that,you can implement it and you can test it 
AP|and then you'll always,always have this piece of paper to go back and forth and make sure,hey is the robot actually doing what i designed the funded state machine what i'd de,how i'd design the finite state machine 
AP|is it doing that,is it not,and that really makes debugging this week's programming assignment much easier 
CD|and usually i would end the video lecture here,but i have one extra special slide for you this week 
CD|and that's the what's next 
CD|well,it is the last one,but the simulator and it's documentation will be available outside of this course at the following url 
CD|so the project continues to lives on after this course,and at any time if you want to get new updates to the simulator 
CD|if you want to check in 
CD|have their new robots been added to the simulator has there,have there,are there new sensors,if there's now maybe a camera sensors,or,whatever it may be,you go to this url,and you'll be sent to a webpage where there'll be updates 
SM|and there also will be links to a github repository 
CD|and the point of this github repository is for everybody to have access to share improvement 
EX|and using improvements can be either,hey,this is a way better way of for example,limiting the error between minus pi and pi 
CD|i want to add that to the simulator 
AP|you can go ahead and do that there 
EX|you can also add new robots,so if you wanted to have,for example,a robot that's more like a car you can add that to the simulator and then have that become part of the official project 
AP|and the same thing with sensors and anything else that you think of,so i would really like to encourage you to consider if you're making any improvements or adding anything to the simulator,contribute back to the project because it'll just make everything better 
CD|and future students and future users of the simulator will really,really benefit from your improvements 
NL|and the last thing is just,thank you very much for your hard work and your participation in programming assignments 
NL|i've seen some really exciting discussions on the forums,it makes me really,really happy and privileged to witness everybody grow into seasoned robotics experts during the course of this of these seven weeks 
NL|and with that,thank you very much and goodbye 
NL|blank_audio 
NL|hi,i'm smriti chopra 
SM|i am a graduate student at dr. egerstedt's lab,and i will be your instructor for the glue lectures,for the duration of this course,which is control of mobile robots 
CM|and just a quick idea what are these glue lectures 
SM|basically,they're going to kind of connect,you know what you learn with dr. egerstedt to the quizzes we are going to give you 
SM|and give you helpful hints about the quizzes 
SM|clarify,repeat certain concepts 
SM|by that i really mean we,you know,work out a few examples,understand the math that goes behind some of the lectures,etc 
SM|just to help you guys move along the course 
SM|and the format is going to be one glue lecture every week 
SM|and the course is seven weeks,so seven glue lectures 
NL|and on a side note amy laviers is a former grad student in our lab,and she was last year's instructor for the glue lectures 
NL|so we will be reusing some of her lectures 
NL|and so in the coming weeks,you know she and i are going to share 
NL|between the two of us,we're going to teach you guys,out of the seven lectures 
NL|but whatever questions,etc,you have,you direct them to me,because well she's not here,and i'll be answering those questions for you on the forums,etc 
NL|and with that,let's get into the lectures 
CM|the first one is dynamical models 
SM|this week with dr. egerstedt,you guys kind of,you know,went through this introductory notion of what a model is 
CD|and he tells you that really,a model is basically,you know,something that describes how your system changes or evolves with time 
EX|and your system could be a robot,for example,and a model is just going to describe,let's say,how the positions change with time,or how the angle,angles change with time,etc 
CD|and the whole idea behind controls is that we're going to kind of try and influence this change to make our system do something we want to do 
CD|and we're going to do this by injecting controls 
CD|but let's go really down to the basics 
CD|what really is a model 
EX|and before we do that,let's do a little exercise in derivatives 
EX|so here we have,let's say,position x,with the respect to time,is given by this exponential function 
CD|now this is in its general form 
EX|i'm saying that let's say me,for example,my position is OMITTED of t,and i wake up at time OMITTED equal to NUMBER i'm at position NUMBER so and i'm saying that my position evolves with time with respect to this function here,and it's given by this graph here 
NL|that's okay 
NL|that's simple 
CD|and now i can take the derivative of this position with respect to time,right 
CD|and i get what,what is the velocity 
CD|and you'll see this is actually NUMBER of t,really 
CD|and then you can do this further on,and you can take more derivatives,and now we have the acceleration,which is NUMBER of t. one thing i want to point,point out really quick here is that OMITTED dot of OMITTED equal to NUMBER of t,for example 
EX|now what is this 
CM|this is really nothing but a differential equation 
CD|basically something that relates a variable OMITTED to its derivatives,second,third whatever 
CD|so in this case,x dot equal to NUMBER of OMITTED is a differential equation 
CD|something he mentioned in class,right 
NL|okay 
EX|so this was just an exercise in derivatives 
SM|you guys should be able to take exponentials and their derivatives,etc 
NL|no problem 
CD|we saw the graphs related to these,as well 
CD|but in action,what does it really mean 
CD|so i'm telling you that my position with respect to chi,time changes like this NUMBER to the power NUMBER 
CD|what it really means is,let's say that's me,or that's a pink ball,whatever 
CD|and now i draw this line,which is the OMITTED axis 
CD|and i start at NUMBER,which is where i wake up,because you guys see,if we're here in this equation,if you put OMITTED at time,you'll get NUMBER,e to the power,which is NUMBER so at time,when i wake up,i'm at NUMBER right 
CD|and now,the whole point is that let's say at time OMITTED equal to,like i said,we wake up 
CD|now i say start,right 
CD|and then i start moving 
CD|and as my time increases,my position is going to keep changing with respect to this function here 
EX|and because it's exponential,let's say at time point,i'm here 
CD|and then i jump really high at point,and then even further 
CD|because exponentially my position is changing 
CD|so,so from graphs,all of a sudden we see how it maps onto,these equations map onto actual motion 
CD|that's all i wanted to really show in this 
CD|but now,instead,i tell you that,you know what,i'm not going to tell you how OMITTED changes with respect to time 
CD|i'm instead going to give you this set of equations,which is a differential equation,and then an initial condition where i wake up 
CD|and now i want to find what my OMITTED of OMITTED is going to be,given this,which is OMITTED dot of OMITTED and OMITTED of NUMBER so in this case what do you do 
CD|well,what you do is,and this is what you did in your lectures as well,just to see how you evolve with res,with time,you discretize the world 
CD|and real quick,let's say this is your time axis 
CD|and i'm going to divide up this time axis into,you know,delta OMITTED chunks,where each chunk is NUMBER seconds,or whatever 
NL|so it's very simple 
CD|i just divide up the axis 
CD|and now,i'm going to say that my OMITTED is actually given by this OMITTED delta t. this is how you discretize,right 
CD|and OMITTED becomes a counter 
NL|why 
CD|because when OMITTED is equal to,my time is and when OMITTED is,it's NUMBER when OMITTED is,i'm at one,etc 
CD|so OMITTED becomes kind of like a counter,right 
NL|all right 
CD|now let's see how the ball is moving 
CD|so we know that we discretized time 
CD|what we want to see is now,as i move OMITTED from,,,, how does my ball move 
CD|and sort of extract OMITTED of OMITTED from it 
NL|right 
NL|okay 
CD|so again,this is our equation in continuous time 
CD|so remember i told you i have given you only two things 
CD|these are the two things that i've given you 
CD|okay,so i know this guy here,that at time,i'm here 
CD|and now i have the equation,the differential equation 
CD|well,you can discretize this differential equation through something called taylor's,taylor extension,which you guys did with dr. egerstedt,which basically is given by this equation here 
CD|and a quick note 
CD|what it really is doing is,it's kind of saying,x OMITTED plus is nothing but OMITTED times OMITTED plus times delta t. right 
CD|and xk is nothing but OMITTED at time OMITTED delta t. so it's,by incrementing k,what we are doing is we are finding out at the next time instant,discrete dimension where should i be,depending on my previous time instant 
CD|that's all this equation is really doing 
CD|a good thing to note here,though,is that we will be using just the first two terms of the taylor expansion,which is what you guys did in the lectures as well 
CD|this expansion is really an approximation,because you see these dot dot dot here it just goes on and on 
CD|you keep taking derivatives,and you keep going on,so obviously the more terms you use,the better your approximation of OMITTED of OMITTED will be 
CD|but as of now,we're just going to use the first two terms of the expansion 
NL|so let's see 
CD|here we have OMITTED of OMITTED is NUMBER,delta OMITTED is NUMBER,we know this,t is OMITTED delta t,and now let's put this entire thing into this equation of ours,the discrete time equation 
CD|and we get this guy here,x OMITTED plus is equal to NUMBER 
CD|you guys should do this yourselves 
CD|it's really simple 
CD|but just,you know,plug in values 
CD|you get this one equation 
CD|and this is now our discrete time update equation 
CD|and how do we use this 
CD|well,we are simply going to say okay,so at OMITTED is equal to,x of is,and now xk plus,which is x1,will be times OMITTED of,which is actually NUMBER,right 
CD|so we saw that at OMITTED is equal to,which is actually time point NUMBER,i jumped from here to here 
NL|okay 
CD|and now i keep incrementing k. so now i take OMITTED is equal to,and i calculate my x2,which is now NUMBER and then i take OMITTED is equal to,and i increment,and i get x3,which is NUMBER for all you guys,you guys can kind of see that this is really a linear approximation 
CD|it's not changing exponentially,and like we thought it should,because we know that it should change exponentially,but it's not 
CD|and this is because,like i said,the more terms you take in the taylor series for your approximation,the better the approximation 
CD|so here,since we took just two terms,it's a kind of linear approximation 
CD|if i take more terms and added,you know,acceleration,etc,then your approximation would have been better 
CD|and so,what we actually just found out,was nothing more than a dynamical model,and how you kind of solve it to see how your system is evolving 
CD|so your differential equation and an initial condition,or just a condition,basically telling you this is where i am at a certain time 
CD|these two things are more than enough to find out how your system is evolving with respect to time,and what is your OMITTED of t. and in general,general form,this is,how you say,is your dynamical model 
CD|basically,it's an equation OMITTED star of t. that is a function of its,you know,state or time 
CD|and later on,this is where you put in your control input,you as well,when you guys go later into the course 
CD|so you kind of,like i said,influencing the change OMITTED dot of t,to make OMITTED of OMITTED do whatever you want 
CD|right now we're not dealing with control,so it's just simply OMITTED dot of OMITTED is given by something 
CD|and you have an equation here OMITTED OMITTED star is OMITTED star,which is basically saying that at some time,i'm going to tell you where you should be in space 
CD|and with just this information,you should be able to evolve OMITTED of t,and see how your state is changing with time 
CD|so that was pretty simple 
NL|punchline 
CD|this is the following dynamical model,which we've been solving all this while 
CD|we know how OMITTED evolves 
CD|but we know how OMITTED evolves numerically,right 
CD|we discretize the world 
CD|and we saw how OMITTED should evolve as we move the counter from etc 
CD|but we didn't really get the equation out 
CD|you know,the mathematical expression for OMITTED of t,which we know is the exponential NUMBER,we know that this was the actual solution,but we really didn't get this equation,pretty equation out 
CD|what we got was a list of basically times,and where OMITTED should land up,numerical solutions 
CD|so if you had to,let's say,get the equation out,what do you do 
CD|well,you integrate 
CD|and again,like i said,we know already the solutions 
CD|that's our hint 
CD|all we are given is this 
CD|for all of those,this is not important for the course,but for all those people who want to see how you integrate and get,you know,x of t,we can go over it really quick here 
CD|it's really nothing but,of course,an integration 
CD|let's say OMITTED by OMITTED is NUMBER 
CD|you kind of separate the variables real quick 
CD|so you say over OMITTED is equal to NUMBER 
CD|integrate both sides 
CD|this is actually your OMITTED is equal to two OMITTED plus c,c is your constant 
CD|and now this is an equation you've got in which you're going to plug in your initial condition 
CD|so OMITTED is equal to c. and from here you say,okay,so let me put all this back into my main equation 
CD|OMITTED becomes two OMITTED plus OMITTED 
CD|and now you kind of,you know,shift terms here and there,and you get OMITTED is equal to NUMBER to the power NUMBER,x of t. so now you guys even saw that,you know,if you don't want to do the whole discretizing the world and kind of simulating where you should be,instead you can integrate 
CD|and a word of caution here,that you can not always integrate and find the solution 
CD|sometimes you have to rely on numerical methods,because analytical solutions may not even exist,you know 
CD|you may not get pretty equations for dynamical models,etc 
CD|but here,just to kind of show you that,you know,you can do it 
AP|just integrate,and you'll get the answer 
CD|again,it's not important for the course,but woo,we got it 
|but what is important for the course is that even though maybe,okay,we won't ask you to integrate,what we'll do instead is we'll say,okay,here is your model 
CD|and i'm going to give you what i call a candidate solution,x of OMITTED should be NUMBER to the power NUMBER 
CD|and now what you need to do is figure out,is this indeed a solution to the model or not 
CD|and for that,there are just two simple steps that you do 
CM|first is called the initial condition check 
CD|what does that mean 
CD|it basically means that i'm given this candidate solution,and then within the solution,i'm going to kind of put in my initial condition OMITTED of and see if i actually get NUMBER or not 
CD|and here i do get NUMBER,so it satisfies this equation,my OMITTED of t. and then the second check is the differential equation check 
CD|and what is that 
CD|that is really nothing but okay,again i have my candidate solution,but i'm going to now take the derivative of that candidate solution 
CD|and NUMBER to the power of NUMBER,which is really my times x,and see if it satisfies this equation 
NL|and it does 
CD|so this is another technique 
CD|so in case,you know,given a model,you don't want to find out through integration or numerical methods what your OMITTED of OMITTED should be,but instead i'm telling you what it should be,this is how you check or confirm that it is indeed a solution or not 
NL|okay 
CD|so the take home message of this entire lecture is really first,dynamical models 
CM|what are dynamical models 
CD|i hope i've kind of given you guys an idea,and made you sort of comfortable with the idea of,you know,models 
EX|and for example,you have something like this,right 
NL|okay,then how do we solve them 
CD|we solve,one we can do by numerical solving,which is numerically discretize the world and solve it 
CD|and then,another is analytically,through integration,right 
CD|and then the third thing,which is very important,is that i give you the model and then i say okay,this is the candidate solution 
AP|you check the solution through two checks,the first being initial condition,second being differential equations 
CD|and sort of try and verify that this candidate solution is indeed satisfying the model 
NL|and this is a homework assignment for you guys 
CD|for this model,see if you can numerically,analytically,and this whole checking thing,whether,you know,you can kind of solve it and see if you get this equation or not 
CD|and before we wrap up this lecture,there's just one concept more,which is the equilibrium point concept,which i want to introduce 
CD|which is really nothing but basically this concept that if my state OMITTED wakes up here at this point,or at this position,or at this value,it stays there 
NL|as simple as that 
CD|so it's really not anything more than saying that my OMITTED dot of OMITTED is going to be NUMBER so to find an equilibrium point,you do simply OMITTED dot of OMITTED equal to,and find the value of x. and like i said,now if,if i was to wake up here,or if at,let's say,time OMITTED is equal to i or,or whenever i wake up,i am at this equilibrium point 
CD|because my OMITTED dot of OMITTED is and there's no change,my change is basically NUMBER i will stay there 
NL|so it's really simple 
CD|so in our case,in the dynamical model case,x is equal to negative by is your equilibrium point 
SM|so if you're asked,you know,find an equilibrium point,simply just put OMITTED dot equal to,or whatever function you have here equal to,and find the values of your state,x in this case,and that will be your equilibrium point 
NL|and also,with that check the forums 
NL|good luck with quiz one 
NL|and bye bye 
SM|music during this second module,we deal with nuclear physics and its applications 
SM|in this second video,we will summarize what is known about the size and the spin of nuclei 
SM|the goals for you are to know how nuclear size is measured and what the results are 
SM|to know general facts about the spin of nuclei 
SM|and to be able to describe the valley of stability of nuclei as a function of the NUMBER of protons and neutrons 
SM|the size of a subatomic object must be carefully defined 
CD|in a quantum system,it is given by the root mean square of the eigenvalue of the coordinate operator in its ground state 
CD|for an atom,this is the root mean square of the radial position of the electron,which is farthest away from the nucleus 
CD|this distance can be calculated because we know perfectly the binding electromagnetic force and because it is defined with respect to a static reference point,the position of the nucleus 
CD|for the nucleus,we do not have a simple description of these actions 
CD|so we must interpret the results of experiments,which probe the distribution of nucleons inside the nucleus 
CD|it will be unwise to use hadronic probes to do so because they are sensitive to the nuclear force 
CD|high energy electrons,on the contrary,can penetrate inside the nucleus and their scattering maps out the charge distribution of the target 
CD|the cross section for a point-like target without spin is given by the mott formula displayed here 
CD|if the charge instead is distributed according to a volume density rho x,leaving the total charge intact,the cross section will be reduced by form factor OMITTED,which is a function of the momentum transfer OMITTED 
CD|for a static target,OMITTED is the fourier transform of the spatial charge distribution 
CD|for small momentum transfers,we can develop the form factor in a taylor series 
CD|if the distribution is spherically symmetric,the terms with an odd power drop out 
CD|and the dominant second term is proportional to the mean square radius,r^2 of the charge distribution 
CD|and this can serve as a size estimator for the nucleus 
CM|for an exponential charge distribution,the form factor takes what is called a dipolar form 
CD|the dependence of the electron nucleus cross section on the momentum transfer for small angle scattering at high electron energies is thus used to measure the size of the nucleus 
CD|scattering experiments establish a simple relation between the radius of a nucleus and the NUMBER of nucleons 
CD|the radius is proportional to the cube root of the NUMBER of nucleons,with a universal proportionality constant of NUMBER femtometers 
CD|nuclei are thus indeed small compared to the atomic size 
CD|the nuclear volume is proportional to 
CD|this corresponds to densely packed and incompressible nucleons,which do not fuse 
CD|the mass density of nuclear matter is of the order of NUMBER grams per cm^3 
CD|nuclear spin is the sum of the spin of all individual nucleons and the relative angular momentum,l. protons and neutrons are fermions with spin one-half 
CD|like in atoms,the nuclear angular momentum follows an integer quantum NUMBER 
CD|the total should therefore be a half integer NUMBER if is odd,an integer if is even 
CD|indeed,all nuclei with both and even have nuclear spin 
CD|heavy nuclei have rather small nuclear spin in their ground state 
SM|we conclude that neutrons and protons tend to arrange in pairs of opposite spin direction 
CD|every charged particle has a magnetic dipole moment associated with its spin,including the nuclei 
CD|the order of magnitude for an electron is given by the bohr magneton, OMITTED 
CD|the nuclear magneton is three orders of magnitude smaller due to the larger proton mass 
CD|the gyromagnetic factor OMITTED measures the ratio between the angular momentum and the magnetic moment 
CD|for a point charge,g is about with small deviation of order muons as we will see in module 
CD|the magnetic moments of proton and neutron are considerably different,NUMBER and NUMBER nuclear magnetons,respectively 
CD|this is the first indication of a charged substructure of the nucleons 
CD|in fact,since the neutron has zero net charge,it must contain charged particles 
CD|all nuclei have measured magnetic moments between minus three and ten nuclear magnetons,thus,relatively small ones 
CD|this is a consequence of the spin pairings of nucleons,leading to a limited total nuclear angular momentum 
CD|most nuclei and their isotopes are unstable 
CM|stable nuclei are found in a narrow band,in the n-z diagram which is called the valley of stability 
|the valley has the following shape 
CD|for lighter nuclei with atomic mass less than NUMBER,the NUMBER of neutrons equals the NUMBER of protons 
CD|for heavy nuclei with atomic mass bigger than NUMBER,the NUMBER of neutrons is about this indicates that for heavy nuclei,the charge density,and thus the coulomb repulsion must be diluted by additional neutrons 
CD|the decay of unstable nuclei is the source of nuclear radioactivity 
CM|alpha radioactivity is the emission of OMITTED nuclei or so-called alpha particles 
CD|beta radioactivity is the emission of electrons or positrons together with neutrinos 
CD|and gamma radioactivity is the emission of photons 
CD|nuclei with a surplus of neutrons can be stabilized by converting a neutron into a proton 
CD|and those with the surplus of protons can convert a proton into a neutron 
CD|these are isobar decays of type beta plus or minus 
CD|heavy nuclei often decay into a pair of lighter nuclei 
CD|this corresponds to spontaneous fission,often by emitting a OMITTED nucleus 
CD|this is the alpha decay 
CD|this decay is normally related to an excited state of the daughter nucleus 
CD|and they're often followed by a gamma decay towards the ground states 
SM|we will enter into more detail on these processes in the fourth and fifth video of this module 
SM|so let us summarize what we have learned about the nuclear force 
SM|it has a very short range limited to the nuclear size 
SM|the binding energy per nucleon it leads to is independent of the size of the nucleus 
SM|the nucleon thus interacts only with its nearest neighbors 
SM|the nuclear force is attractive and much stronger than the coulomb repulsion between protons 
SM|but it must also have a repulsive component at distances compatible to the size of the nucleon,which is about femtometer 
SM|this is due to the existence of quarks inside the nucleon 
SM|the repulsive component is necessary to prevent the fusion among nucleons 
SM|qcd is a quantum field theory which describes the interaction among colored particles,so quarks inside hadrons,via the exchange of equally colored gluons 
SM|but the strong force acts only inside hadrons,which thus have a zero net color 
SM|nucleons can not exchange gluons 
SM|it is by the exchange of colorless objects like mesons that they bind together 
SM|this makes the nucleus a complex multibody object,which is difficult to understand 
CD|the appropriate theoretical methods are effective field theories like chiral perturbation theory or a numerical calculation like lattice qcd 
NL|all of this goes beyond the scope of this course 
SM|in the next video,we will rather concentrate on much simpler models,which describe the gross features of nuclei 
NL|music 
SM|music during the second module,we deal with nuclear physics and its applications 
SM|and in this fifth video,we go into more details on the two other types of radioactivity,that is to say beta and gamma decays 
SM|the goals for you are to be able to characterize beta decays of nuclei and their properties 
SM|to relate these properties to those of the underlying weak interactions,and to be able to characterize gamma decays of excited nuclei 
CD|neutron-rich nucleus,i.e 
CD|one that has OMITTED larger than what stability requires can transform into a more stable nucleus by emitting an electron and transforming one of its neutrons into a proton to conserve lepton NUMBER,this emission must be accompanied by the emission of an anti-neutrino 
CM|in the contrary case,proton-rich nuclei,which have too many protons to be stable,accompanied by neutrino emission 
CD|since the proton is lighter than the neutron,this latter process can only happen for a bound proton where the value is turned positive by a gain in binding energy 
CD|nucleus with a surplus of protons can also capture an electron from the internal k-shell of the atomic cloud 
CD|the other electrons of the atom will then cascade down to fill the gap 
CD|since a lepton disappears in the capture a neutrino must be emitted to conserve lepton NUMBER 
CM|all these decays are isobar,since beta decays are three body processes,the spectrum of the emitted electron or positron is a continuous one 
CD|it has the shape which is sketched in this graph 
CD|the neutrino interacts only very weakly with matter 
CD|it will normally escape undetected 
CD|this is also the reason why the neutrino has taken so long to be discovered 
CD|neutrinos and anti-neutrinos are fermions with zero electric charge and a very small mass 
CD|the maximum electron energy is obtained when the neutrino is produced almost at rest 
CD|its maximum value then approaches the value,like it would in a two body decay 
CD|when one measures this energy,one can establish an upper limit on the neutrino mass by energy conservation 
CD|the video NUMBER introduces the exponential decay law,which describes the time evolution of this and other decay processes 
CD|at the quark level,beta decay proceeds via the exchange of a boson,which is the gauge boson mediating the weak force like it is shown in this feynman graph 
CD|the large mass of this boson is responsible for the short range of the weak force and its weakness at low energies 
CD|neutrinos are very peculiar particles 
CD|their generations can mix with each other 
CD|their mass is the lightest among all particles and probably in the order of milli electron volt 
CD|it is not even clear if neutrinos and anti-neutrinos are really different particles 
CD|their charge is the same,and they have no magnetic dipole moment,contrary to other neutral particles,like the neutron for example 
CD|the definitive answer will come from experiments searching for what is called double beta decay 
CD|they deal with nuclei where two beta decays happen simultaneously to reach the value of stability 
CD|if neutrino and antineutrino are really the same particle,one of them can then arrange the lepton NUMBER of the other one,such that there are no neutrinos emitted in the process at all 
CD|if they are not identical,two neutrinos must always be emitted in the process of double beta decay 
CD|for recent review of the experimental situation,please see the article by rodejohann cited on the bottom of this slide 
CD|weak interactions have two more peculiarities 
CD|the first one is that only the left-handed part of the quark and lepton fields participate in the interaction 
CD|what we mean by that is that only matter particles will spin anti-parallel to the direction of motion,interact via the weak force 
CD|the opposite is true for matter anti-particles 
CD|only right-handed anti-particles which have the spin parallel to the direction of motion can interact 
CD|neutrinos and down type quarks,and that is the second peculiarity,which participate in weakened directions,are mixtures of the corresponding real particles 
CD|one denotes the neutrino mixtures of OMITTED,OMITTED,and nu_tau according to their generation 
CD|they are mixtures of the real particles OMITTED,OMITTED and OMITTED which we have introduced in the first module 
SM|music in this second module,we are discussing nuclear physics and its applications 
SM|in this ninth video we will continue discussing the transformation of a portion of nuclear binding energy into heat through the fission process 
SM|after following this video,you will know how fission is used and controlled inside nuclear power plants 
CD|natural uranium is a mixture of only NUMBER u-235 and NUMBER u-238 
CD|u-235 has a five time shorter lifetime than the other isotope and the natural mixture therefore only contains a small fraction of u-235 
CD|enriched uranium is a material in which the u-235 component has been increased by isotope separation 
CD|this separation uses the small difference in mass between the two isotopes to separate them,for example,in a gas centrifuge filled with uranium fluoride 
CD|in these devices rotation generates an enrichment of the light element towards the axis,and the heavier element towards the periphery 
CD|the devices are used in parallel and in series to obtain the required quantities and the desired level of enrichment 
CD|enriched uranium is a critical component of both civil and military applications 
CD|nuclear bomb usually contains at least NUMBER of u-235 
CD|but a simple and ineffective weapon can already be obtained with a minimum of NUMBER 
CD|the international atomic energy agency,iaea,attempts to monitor and control the production and storage of fissile materials around the world 
CD|in the controlled environment of a nuclear reactor,the chain reaction with OMITTED roughly equal to can be used as a sustained energy source 
CD|the reactor core contains fuel rods with a fissile material,control rods with a neutron absorber and a moderator to reduce the neutron kinetic energy and thermalize them 
CD|thermal neutrons incident on natural uranium are radiatively captured by u-238 and will thus not cause fission 
CD|that's why one uses uranium enriched to to of u-235 as fuel in nuclear reactors 
CD|the control rods in a reactor regulate the neutron rate 
CD|they are often made of cadmium which has a high cross section for neutron absorption 
CD|by inserting or removing the rods one manages the flow of neutrons and therefore the reaction rate to keep OMITTED close to one and therefore a constant power source 
CD|the role of the moderator,on the other hand,is to slow down neutrons by scattering to increase thir probability of capture and therefore increase the fission rate 
CD|material with small absorption cross section is chosen 
CD|water,h_2o,is used in light water reactors often found in western countries 
CD|in research reactors designed to produce a large flux of neutrons,one also uses heavy water,d_2o,because the cross-section for neutron capture is smaller in deuterium than it is in hydrogen 
CD|in reactors of the rbmk type like the chernobyl nuclear power plant,graphite moderation rods are used in addition to water 
CD|in a nuclear power plant the reactor core is immersed in a cooling liquid,actually water 
CD|it's goal is to collect the heat generated by the core 
CD|through a heat exchanger the cooling water is used to produce steam which will in turn drive turbines to generate electricity 
CD|at the exit of the turbines the steam is condensed and recycled 
CD|the residual heat is often removed through cooling towers or dumped into rivers 
CD|the second goal of the coolant is to keep the core temperature under control and prevent a meltdown of the core 
CD|the whole is surrounded by a containment building,the small roundish building on the left of this picture,in order to avoid contamination of the environment by radiation 
CD|at the beginning of an exploitation cycle,the value of OMITTED is set to slightly above one,until the desired power level is reached 
CD|and at this point,k will be reduced to one to have a stable power source 
CD|we already calculated the impressive maximum energy yield related to nuclear fission 
CD|ignoring the efficiency of power plants and other losses,one gram of uranium is equivalent to three tons of coal in heat output 
CD|this explains the important usage of this energy source in developed countries 
CD|on march NUMBER,NUMBER,were operating in NUMBER countries,with a total installed capacity of NUMBER gigawatt net 
CD|in NUMBER,about NUMBER of the global electrical energy was produced by nuclear power 
CD|however,most nuclear reactors today are over NUMBER years old 
CD|the economic crisis in NUMBER and the fukushima nuclear accident caused a decrease in production of nuclear electricity by about countries such as germany,belgium,switzerland and taiwan have announced the end of their usage of nuclear power 
CD|other countries no longer engage in new nuclear power plants 
CD|according to wikipedia,the construction of NUMBER reactors appears several years late at this time 
CD|nine are under construction since more than NUMBER years 
CD|however,the fight against global warming and the necessary reduction of fossil fuels may change the impression that nuclear fission is a power source in decline 
SM|in the next video,we will present the principles of nuclear fusion as a source of heat and see how it works in stars and in future power plants 
NL|music 
SM|music in this module,we are discussing the basics of particle acceleration and detection methods 
SM|in this video,you will see how different technologies are combined to build the two basic types of particle detectors,spectrometers,and calorimeters 
SM|at the end of this video,you will be able to describe how a spectrometer measures the direction and momentum of a charged particle in a nondestructive manner 
SM|and to describe how a calorimeter measures the direction and energy of a particle by total absorption 
SM|you will also be able to identify the strength of these two basic methods and their synergy 
CM|a magnetic spectrometer is used to measure the direction and momentum of a particle with minimal interaction 
CD|it is a nondestructive method to measure these properties 
CD|the particle trajectory is measured in a known magnetic field 
CD|for a homogeneous field,the trajectory is a spiral,a circle in the plane orthogonal to the field,and a straight line in the direction of the field 
CM|the radius of curvature is proportional to what is called the magnetic rigidity OMITTED,which is the ratio between the momentum OMITTED,and the charge OMITTED. OMITTED OMITTED/OMITTED,and can be measured by the product of the radius of curvature and the magnetic field 
CD|the magnetic field itself is provided by a permanent magnet or an electromagnet 
EX|measurements of the path are performed by an ionization detector,a gas filled wire chamber,for example,or layers of semiconductor detectors 
CD|the tangent to the trajectory at the entry of the magnet gives the direction of the incident particle 
EX|as an example,here's,again,a photo of the drift chamber from the l3 experiment at the large electron- positron collider at cern as well as a picture of an e+e- annihilation into hedrons on the right side 
CD|the reaction takes place in the middle of the device,the center of the image on the right 
CD|in the central part,you see the tracks of charged particles in yellow reconstructed from the measured coordinates indicated by the small green crosses 
CD|the curvature is barely visible but well-measured by the high resolution drift chamber 
EX|in this photograph on the left,you see a central detector made out of silicone sensors,the one that is used by the atlas experiment 
EX|the right image is a reconstruction of a reaction between protons in the middle of the device 
CD|the charged particles,which are produced,leave tracks forming circles orthogonal to the magnetic field 
CM|the purpose of a calorimeter is to measure the energy and direction of particles by absorbing them 
CD|the principle of operation is the following 
CD|the incident particle initiates a shower of particles in the detector,an electromagnetic shower,or a hadronic shower 
CD|the shape,size,and composition of the shower depends on the incident particle 
CD|but also on the detector material,namely,its radiation length,its nuclear interaction length 
CD|the energy is deposited in the form of heat,which is not very useful,but also produces detectable signals,like ionization and excitation by OMITTED/OMITTED,scintillation light,cherenkov radiation,etc 
CD|this energy is detected by sensors 
CD|the resulting signal is proportional to the total energy deposited by the particle of the shower in the active medium of the detector 
CM|there are two kinds of calorimeters,homogenous ones with only one material to absorb and detect the shower particles and layered calorimeters,which use different materials for interaction,absorption and detection 
EX|here's an example of a layered calorimeter 
CD|in such a calorimeter,layers alternate 
CD|there are absorption layers made of heavy materials like copper,lead,or uranium with the short radiation in direction 
CD|here,particles interact and form a shower 
CD|in the sensitive layers,the energy lost by OMITTED/OMITTED is recorded 
CD|these layers may be equipped with a gaseous or noble liquid,a proportional chamber,a semiconductor sensor,or a scintillator 
CD|you see here,the electromagnetic calorimeter of atlas which contains absorption layers of lead and steel alternating with sensitive layers filled with liquid argon 
CD|the whole has a shape resembling an accordion 
CD|in a homogenous calorimeter on the other hand,the two functions are combined 
CD|the same material is used as an absorber and as a detector for deposited energy 
CD|scintillators made of heavy materials can be used,like bismuth germanate,bgo,or lead tungstate 
CD|because of the short radiation length and the transparency of these materials,they are often used to detect electromagnetic showers 
EX|the scintillation light,emitted by the electrons of the shower,is detected by photomultipliers or by semiconductor photodiodes,as in this example,which shows you the lead tungstate calorimeter of the cms experiment at lhc 
CD|calorimeters are also one of the main applications of plastic scintillators 
EX|the large calorimeter for hadron showers of the atlas experiment is an example 
EX|here,you see a small animation showing the structure of one of its wedge-shaped slices 
CD|it uses scintillated tiles inserted between steel absorbers to measure the energy of hadrons 
CD|the shower develops mainly in the metal layers 
CD|the charged particles it generates produce scintillation light in the sensitive layers 
CD|the scintillation light is collected by optical fibers and guided to photo detectors 
CD|in this way,a three-dimensional image of the shower is measured,which allows to reconstruct direction and energy of hadrons 
CM|but also the cherenkov effect allows to build complete detectors 
EX|the super-kamiokande detector in japan consists of a huge cylindrical tank,which contains NUMBER tons of ultra pure water 
CD|when a charged particle passes through the water at the speed beyond that of the speed of light in water,which is about NUMBER of the speed of light in vacuum,a cone of light is emitted 
CD|this cone is intercepted by an array of photomultipliers distributed on the walls 
CD|they detect an ellipse of photons,which allows to reconstruct the direction and velocity of the particle 
CD|lateral and longitudinal segmentation allows to distinguish between hadrons and particles,which interact only via the electromagnetic force,like electrons and photons,or muons 
SM|as a general rule,one can say that electromagnetic showers are short,slim and regular 
SM|hadronic showers are penetrating,wide,and irregular 
CD|because of the different characteristics of electromagnetic and hadronic showers,they are often two calorimeters,a fine grain electromagnetic one and a coarser hadron calorimeter 
CD|but it is the synergy between different detector types that allows to both identify particles and measure their direction and energy 
SM|this is further explained in optional video NUMBER,which shows how the atlas detector at lhc works 
SM|in the next video,we will show which types of particle detectors are developed and produced in our laboratories at the university of geneva 
NL|music 
SM|music in this module,we are touching the basics of particle acceleration and detection techniques 
SM|in this video,we show how light charged particles interacts with matter 
CD|these interactions are used to detect these particles 
SM|at the end of this video,you will know the energy loss by ionization and excitation for electrons 
CD|and the energy loss by radiation,specific to light particles 
CD|for light particles like electrons and positrons,things get slightly complicated 
CD|the formula for de/dx is similar to that for heavy particles 
CD|but the special properties of scattering scattering,and between electrons and positrons,bhabha scattering,come in 
CD|the difference between de/dx for electrons and positrons is however not very large 
CD|but there is an important difference between light and heavy particles 
CD|since light projectiles and atomic electrons are of comparable mass,interaction with atomic electrons causes bremsstrahlung 
CD|the energy loss,de/dx by this process,is proportional to the energy of the projectile 
CD|the material properties that come into play can be combined into a single constant,the radiation length x_0 
CD|by integrating the energy loss,we can calculate the remaining energy,x of the electron 
CD|it is a function which decreases exponentially with the penetrated material depth OMITTED 
CD|the radiation length is then given as the path length after which the energy of the projectile is reduced by a factor of e. to obtain the energy loss,de/dx,or the radiation length in terms of the target surface density,one must take into action the volume density of rho of the material 
CD|many material properties are tabulated by the particle data group,particularly the volume density and the radiation length,that you can find on the web page quoted here at the bottom of the page 
CD|property specific to positrons is that they can annihilate with atomic electrons of the material 
CD|this process is important at low energy that is at the end of the path just before the positron stops 
CD|from annihilation at rest,two photons are emitted back to back,each with an energy equal to the mass of the electron,which is NUMBER kev 
CD|at energy above about NUMBER mev,electrons and positrons lose energy mainly by bremsstrahlung,which dominates over ionization and excitation 
CD|this means that many photons are produced when high energy electrons go through matter 
CD|those are mostly converted into electron-positron pairs,as discussed in the next video 
CD|and these pairs will emit photons in turn 
CD|in this way,high energy electrons generate electron photon showers in matter,which are populated by a large NUMBER of particles 
CD|the strong interaction of hadrons with the nuclei of the material can also cause showers called hadronic showers 
CD|these are typically less populated at comparable energies because the lightest hadron,the pion,has a mass of about NUMBER mev 
CD|for the same reason,they are wider and less regular than electromagnetic showers 
CD|again,the table provided by the particle data group summarizes the properties or materials often used in particle detectors 
CD|the characteristic lengths for nuclear interaction are typically comparable to the radiation length for lighter materials but much higher for heavy materials 
SM|in the next video,we will discuss in more detail how photons interact with matter 
NL|sound 
SM|music during this fourth module we're going into more details on the properties of electromagnetic interactions 
SM|in this second video,electromagnetic scattering is analyzed in terms of invariant amplitudes and cross section 
SM|after following this video you will know fermi's golden rule 
SM|the scattering amplitude of a particle in an electromagnetic potential,how the target particle generates this potential and the difference between distinguishable and undistinguishable processes 
SM|in the previous video we have seen how the cross section for a scattering process is measured by normalizing the reaction rate by the luminosity 
CD|for one incoming projectile on a single target particle,the cross-section is also calculable quantity 
CD|the main ingredient is,again,the probability that both interact by exchanging an intermediate gauge boson 
CD|this probability,or rather its amplitude,is calculable in a quantum field theory based on a gauge principle 
CD|one can thus compare experiment and theory in good precision for both 
CD|such comparison can test the theory and determine is parameters like masses and coupling constants 
CM|the prescription for the calculation of a cross-section is called fermi's golden rule 
CM|in scattering theory the reaction rate,w,is given as the product between OMITTED times OMITTED,with invariant scattering amplitude OMITTED and the density of final state OMITTED. the latter is also called the phase space factor 
CD|it takes into account the NUMBER of states,in the quantum sense,that the final state can contain 
CD|the more there are,the more probable the reaction becomes 
CD|for a four body reaction a OMITTED OMITTED OMITTED,the amplitude OMITTED can be interpreted as the probability amplitude of the process that converts the initial states into the final state 
CD|it is therefore a probability amplitude in the same sense as the wave function,and its square is a probability density 
CD|to obtain the cross section we still have to normalize by the flux of incident projectiles 
CD|this may seem surprising for a single projectile,but the flux is the NUMBER of projectiles per second and per unit surface 
CD|here is then fermi's golden rule for cross sections 
CD|it is obtained by properly normalizing the probability of the reaction,and contains both this probability OMITTED,the incoming flux f,and the phase space factor OMITTED. the incident flux for the initial state depends on the relative velocity,the modulus of v_a- v_b,and the volume density of projectile and target 
CD|this volume density must be proportional to the energy of the two particles to be relatively equally invariant 
CD|in our normalization,it is simply equal to twice the energy for a single particle per unit volume 
CD|the second equation is valid for the two velocities,OMITTED and OMITTED,parallel 
CD|and clearly shows the invariance of the flux factor under lorentz transformations 
CD|the phase space factor,OMITTED,takes into account the NUMBER of states which can be realized by the final state 
CD|it contains a delta function that ensures the conservation of the energy-momentum,as well as the NUMBER of quantum states for all the particles in the final state 
CD|the factors of twice the energies,again,come from the way we normalize the wave functions 
CD|how does one proceed to calculate the invariant amplitude 
SM|we will outline the argument for this simple case of scalar fields 
CD|we mentioned that to first order one local action of the potential cd OMITTED will transform the initial state OMITTED into the final state OMITTED 
CD|the probability amplitude of this process,ignoring the normalization factors for the moment,is given by this integral 
CD|the argument of the integral is the probability of finding the state OMITTED at position OMITTED at the time OMITTED among all states produced by the potential OMITTED from the initial state of phi_a 
CD|the integration over space-time reflects the fact that this local interaction can occur wherever the potential is present 
CD|to help your intuition,imagine that the two wave functions OMITTED and OMITTED correspond to free particles everywhere,except at the place and time where the potential intervenes 
CD|the initial state OMITTED will be a superposition of eigenstates of the free hamiltonial with a given set of coefficients 
CD|the potential will change these coefficients to produce another superposition of eigenstates with a different set of coefficients 
CD|the amplitude OMITTED is then just the amplitude of the final state OMITTED,which contains the new mixture 
CD|the invariant amplitude OMITTED contains all the dynamics of a reaction,thus the whole physics of the type of interaction under study 
CD|it therefore follows from the potential operator v. this is the same operator which changes the homogenous equation of motion into an inhomogenous ones 
CD|for electromagnetic interactions,the inhomogeneous equation is derived from the klein-gordon equation by the so-called minimal substitution 
CD|to struct this potential will neglect terms proportional to OMITTED which is very much smaller than one 
NL|music hello,and welcome to this fifth module of our introductory course to subatomic physics 
SM|in this module,we'll discuss the structure of hadrons and strong interactions 
SM|in this first video,we discussed the elastic electromagnetic scattering between electrons and nucleons,which is one of the ways used to study the structure of hadrons 
SM|after following this video,you will know the main properties of elastic scattering between fermions,and the meaning of the different terms that enter into the cross section 
SM|the form factor concept you will know,and its interpretation,in terms of the size of the nucleon 
SM|and you will get to know the historic experiments at the stanford linear accelerator center in this area 
CD|when the structure of an interaction is known,it can be used as a tool to better understand the particles that are involved 
CD|within this video,how elastic electron nucleon scattering is used to determine the internal structure of nucleons 
CD|we take advantage of the fact that the electron as far as we know,is a point like particle in that we know electromagnetic interactions very well 
CD|we can thus elucidate a single,but important unknown,which is the distribution and the dynamics of quarks inside the proton and neutron,represented by the big blue dot in the right diagram 
NL|music hello and welcome to the sixth module of our introductory course of subatomic physics 
SM|in this sixth module,we discuss weak interactions and the higgs mechanism 
SM|you will notice that this module is again larger than the average module 
CD|this is due to the rich phenomenology of electro-weak interactions 
AP|we recommend that you take two weeks to digest it 
SM|before diving into our subject,in this first video we will go into more depth on the subject of antiparticles 
SM|after following this video,you will know the difference between particles and antiparticles and the connection between antiparticles and energy-momentum reversal 
SM|how do antiparticles come into play in the standard model 
CD|it all starts with the evolution equation for fields which takes the role of an equation of motion for particles 
CD|it follows from relativistic energy-momentum conservation by operator substitution 
CD|the result is the klein-gordon equation for free particles 
CD|its solutions follow a continuity equation as seen here 
SM|music in this sixth module,we've been discussing weak interactions and we now turn to the higg's mechanism 
SM|in this NUMBER video we will introduce the dynamic generation of particle masses by this mechanism 
SM|after following this video you will know how to argue that mass can not be an intrinsic property of particles 
SM|how what is called mass can be dynamically generated and how the higgs mechanism implements this through the interaction of particles where the omnipresent higgs field 
SM|and finally you will know qualitatively how particles evolve in a vacuum filled with the higgs field 
CM|what is the mass of an object 
CD|there are two phenomena connected to mass 
CD|first,mass is the property of an object which opposes itself to acceleration according to newton's law 
CM|this is called the inertial mass 
CD|at the same time,it is the property of an object which allows it to attract other bodies by gravity 
CM|this is called the gravitational mass 
CD|it is the equality of these two properties which led einstein to formulate general relativity,the only theory of gravitation known today 
CD|but it is only the inertial mass which is of interest here,the gravitational interaction is too weak to matter at the subatomic level 
CD|one measures the mass of a particle by observing the energy that it takes to create it at rest or by observing the invariant mass of its decay products,or by observing its velocity at a given energy 
CD|it is in fact this last property of the mass that we must retain 
CD|mass is the property that keeps particles from moving at the speed of light,no matter how energetic they are 
CD|the particle spectrum that you see in this graph is extremely large both as far as matter is concerned,with the neutrino weighing on the order of a milli-electronvolt,and up to the top mass,which is about NUMBER gev 
CD|this is also true for forces,where the mass of the photon and of the gluon is zero 
CD|and the spectrum goes up to the and mass of NUMBER and NUMBER gev,respectively 
CD|we believed,me and probably also you,that the mass of elementary particles,quarks and leptons,and gauge bosons,was one of their intrinsic properties,like the electric charge,the color,the flavor,the baryon and the lepton NUMBER 
CD|but this is not true 
CD|mass is the product of a dynamic process without which the mass of all the ingredients of the universe would be zero 
CD|let us trace back the origin of mass across different scales 
CD|for ordinary matter,solids,liquids,and gasses,the mass is to a good approximation equal to the sum of the masses of the atoms 
EX|the cohesive energy for example in a crystal is between one and ten electron volts per atom which is small compared to the mass of the atoms 
CD|the mass of an atom is also pretty much equal to the sum of the masses of its electrons and its nucleus 
CD|the atomic binding energy is of the order of to NUMBER ev per electron,small compared to the mass of the nucleus 
CD|this reasoning continues to be true at the nuclear level 
CD|the nuclear mass is not far below the sum of the masses of its nucleons,but with a more important binding energy obviously 
SM|as we have seen in module,the binding energies of the order of eight mev per nucleon,but it is still small compared to the mass of the nucleon itself,which is of the order of gev volts 
SM|in summary,the mass of the matter in the universe is dominated by the mass of the protons,the neutrons,and the electrons which populate it 
SM|but at the scale of the nucleon itself this reasoning does not work 
SM|proton and neutron contain low mass quarks and massless gluons 
SM|the nucleon mass is dominated by their binding energy,it already has a dynamic origin 
SM|but quarks and electrons do not have binding energy because they are as far as we know point-like particles 
CD|they have no substructure so there is no binding energy involved 
CD|so at least for them could mass not be an intrinsic property 
CD|the answer is no 
CD|and the reason for this is quite subtle and fundamental at the same time 
CD|continuous symmetries are closely linked to the conservation of a physical quantity by noether's theorem 
CD|you see amalie emmy noether on this photograph 
EX|in particular gauge symmetry,the invariance of observables relative to a local phase change of the field,is the basis of the standard model of electro-weak and strong interactions 
CD|gauge symmetry is in fact necessary to ensure the regularization of infinities in the field theory,allowing to absorb them into measured quantities 
CD|without this possibility the standard model would not make any predictions,yet it agrees with experiment everywhere 
SM|music in this sixth module,we are discussing weak interactions 
SM|in this sixth video,we'll talk about the properties of the boson,which transmits the neutral weak force and can be considered as the heavy brother of the photon 
SM|after following this video you will know its properties,its mass,and the way to measure it and its couplings to matter 
SM|in video NUMBER,we have already discussed the prototype process OMITTED for the production of fermion pairs by electron-positron annihilation 
EX|in addition to electromagnetic interactions,as shown in the left graph,this process can be mediated by neutral weak interactions,as shown in the right graph 
CD|since initial and final states are the same,one must add the amplitudes 
CD|in the cross-section,we thus find three terms to lowest order 
CD|the first term,sigma_gamma,contains the square of the photon exchange amplitude 
CD|the second one,sigma_z,that of the exchange 
CD|and the third one,sigma_int,the interference between the two 
CD|for the photon alone,we already quoted the cross-section in video NUMBER 
CD|the total differential cross-section,which also takes into account the other two contributions,contains a term symmetric in the scattering angle theta like the one we had found for the photon 
CD|the scattering angle,remind you,is the angle between the incoming e- and the outgoing mu- 
CD|the coefficient OMITTED of this term now contains a new contribution due to weak interactions 
CD|there is also an additional asymmetric term proportional to the coefficient OMITTED 
CD|the coefficients contain the real part and the square of a resonance term,r,which comes from the resonant production of bosons when the total e+e- energy approaches the mass 
CD|it contains the breit-wigner function characteristic for the propagator of massive virtual bosons 
CD|the coupling constants,OMITTED and OMITTED,depend on the electric charge and the weak isospin of the matter particles involved in each vertex 
CD|due to the value of the weak mixing angle,OMITTED theta roughly equal to NUMBER,OMITTED has a small value for charged leptons,OMITTED is simply -OMITTED
CD|at low energies,square root of OMITTED much less than equal,where OMITTED is roughly equal to,the influence of weak interactions is negligible 
CD|we fall back onto the result found by electromagnetism,that is to say,OMITTED and OMITTED 
CD|the terms proportional to the real part of OMITTED are due to electro-weak interference and are important in the intermediate region where neither the photon nor the exchange are dominant 
CD|and finally,close to the mass,where the terms proportional to OMITTED dominate,we find that the weak interaction is two orders of magnitude stronger than the electromagnetic one,due to the amplification by the resonance 
CD|the resonance manifests itself by a enormous peak in the total cross-section 
CD|electro-weak interference causes a large,angular asymmetry on the flanks of the resonance 
CD|at low energies,the cross-section depends on the electromagnetic coupling alpha and the square of the center of mass energy s,like sigma NUMBER alpha^2/ NUMBER,the characteristic size and shape of purely electromagnetic interactions 
CD|as the energy approaches the peak,we see an enormous increase and weak interactions dominates the process,thanks to the resonant exchange of bosons that we now may call almost real instead of virtual 
CD|far above the resonance,the two processes add up and are of comparable size 
CD|the interference term introduces an asymmetry into the angular distribution,which we had already noted in video NUMBER 
SM|music in this module,we will discuss searches for new phenomenon beyond the known ones described by the standard model 
SM|in this video,we will talk about bump hunting 
SM|after watching this video,you will know how we look for new resonances in hadron collider data 
SM|how such signal choice led in the past to important discoveries 
SM|and the impact of statistics for searches 
CD|we use the data we collect in hadron colliders for measurements of processes predicted by the standard model and for searches for new physics 
CD|we typically measure the cross-section of a process,the mass of a particle,or other properties 
CD|the searches are typically split in bump searches or tail searches 
CD|measurements always precede searches 
CD|it is the confidence that we know well the standard model and what it predicts that enables us to look beyond 
CD|one of the things we measure in our data is the rate of production of a specific process which allows us to determine its cross section 
CD|it is given by the formula you have already seen in previous videos 
EX|the cross section of the process,for example production of a OMITTED boson,times the branching ratio for a specific decay,for example to a di-muon pair,is equal to the NUMBER of events corresponding to the exact same process divided by three NUMBERs that remove biases related to the way the measurement is performed 
CD|the acceptance,indicating the fraction of signal events passing selection requirements we're applying to the data 
EX|the reconstruction efficiency of the relevant objects,muons in our example,and the integrated luminosity indicating the amount of incoming particles we have used 
CD|in the numerator we have to subtract from the total NUMBER of events the expected NUMBER of background events 
EX|these are the events producing the same signature,a di-muon pair in our example,but resulting from other processes,different to our process of interest 
CD|the OMITTED boson was discovered in proton-antiproton collisions at cern in NUMBER as a small bump around its mass value as shown in the left plot 
CD|what constituted a major discovery back at the time,is a well established process now,for which we can make precise measurements and measure properties,such as the cross-section 
EX|the plot on the right shows how a mass peak for OMITTED bosons decaying to two muons looks like in early atlas data back in NUMBER despite the small amount of data available at that time,it is remarkable how this compares to the same topology when the OMITTED was discovered 
CD|this established the lepton pair signature as one with which many particles have been discovered over time 
CD|it is one of the key signatures we use in hadron colliders to search for new peaks 
CD|primarily,in the high mass region now 
CD|this is how the muon pair mass spectrum looks like in atlas 
CD|starting from just below the OMITTED mass peak and extending up to the highest values we have data for 
CD|the blue area indicates the contribution to this distribution from a OMITTED boson decaying to two muons 
CD|this is the dominant process in the whole spectrum,and especially in the peak at the OMITTED mass 
CD|other colored areas indicate other standard model contributions to the spectrum 
CD|the black points correspond to data 
CD|expected contributions from the standard model have been scaled by the same integrated luminosity as for the data we have used 
EX|one can see from this plot,that the data match very well the distribution expected from the standard model alone 
SM|music in this eighth module,we are discussing two mysterious components of the universe which are dark matter and dark 
SM|and in this third video,we'll review dark energy 
SM|after following this video,you will know how we know about this new form of omnipresent energy and why its existence is still a matter of debate and what are the main properties of dark energy 
SM|to understand the signs of presence of dark energy,we must visit the expansion mechanism of the universe 
CD|in the late NUMBER,hubble observed that the line spectra of distant galaxies are red shifted 
CD|this is because of the doppler effect association with the recession velocity v. the wavelength lambda prime observed on earth is offset with respect to lambda,the wavelength in the rest frame of the emitter 
SM|music we will calculate with classical arguments nucleus of charge OMITTED scattering of a heavy nucleus of charge 
CD|the basis of this calculation,is the relationship between the differential cross-section and the dependence of the impact parameter OMITTED on the scattering angle theta 
CD|first we use the fact that the kinetic energy is conserved,and that,as there is no recoil of the target,the initial and the final projectile velocities are the same 
CD|in the same way,the angular momentum will be conserved,which tells us that mvb is a constant 
CD|this means that OMITTED can be expressed in terms of the initial velocity of the projecile,the impact parameter and the distance squared between projectile and target 
CD|this serves to express the coulomb force,which is just the product of the two charges divided by pi OMITTED,times the unit vector which connects the projectile and the target,in terms of what we know that is to say,the projectile velocity and the impact parameter 
CD|when we integrate this relationship between gamma and gamma pi OMITTED,one side is the vector difference between the final and initial velocities 
CD|the other side is the integral over the relationship we just obtained 
CD|music will first show you the effect of the lorentz force with a cathode ray tube filled with a rarified gas 
CD|this gas is fluorescent,and thus makes the particle passage visible 
CD|heated filament emits electrons,which are then accelerated by an electric field 
CD|they leave the cathode pointing upwards 
CD|the helmholtz coils,in front of and behind the tube,generate a magnetic field which points towards you 
CD|the electrons are thus deviated towards the center of the tube 
CD|with ambient light,one can not see the faint fluorescence of the gas 
CD|when we dim the light,it becomes visible 
CD|now increase the magnetic field strength 
CD|at constant electron momentum,the radius of curvature becomes smaller 
CD|the electrons circulate around the magnetic field direction,with the cyclotron frequency 
CD|if now reduce the magnetic field strength,the radius of curvature increases,and the electrons hit the glass of the tube 
EX|let us quickly calculate the cyclotron frequency with which the electrons circulate in the tube 
CD|the lorentz force OMITTED OMITTED OMITTED gives us the centripetal force,which makes them follow a circle,if OMITTED is orthogonal to 
CD|the absolute value of the force is simply evb and must be equal to mv^2/rho,where rho is the radius of the circle 
CD|this gives us OMITTED OMITTED rho/m,the velocity is thus constant 
CD|the frequency with which they circulate is v/ pi rho,which equals eb pi OMITTED 
CD|this is thus also a constant in the non-relativistic case 
CD|this gives us an angular frequency of pi OMITTED eb/m,the cyclotron frequency 
NL|music 
SM|music in this short video,we will remind you of special relativity and the notation of four-vectors which are essential tools to work with in high energy physics 
SM|this course will treat phenomena at high energy,so at a velocity which requires a relativistic treatment 
SM|the fundamental principles of special relativity which have been based on experimental findings are that the speed of light OMITTED is constant at the same value in every inertial frame 
CD|it means that the galilean way of adding velocity is not valid at high speeds 
CD|this way,the speed of light is a maximum velocity which can not be exceeded in any frame 
CM|motion is described in a four-dimensional space,called space-time 
CD|an event in space-time is localized by the carthesian coordinates ct,where OMITTED is the time,and OMITTED,where OMITTED is the position 
CD|and this is described by a four-vector OMITTED
CD|the metric of space time is defined by the speed of light c,invariant constant in every inertial frame 
EX|so suppose that a light ray connects two events 
CD|the distance between these two points in space is always proportional to the propagation time of the light 
CD|since the proportionality constant,the speed of light,is the same in every inertial frame,it follows that the norm OMITTED of a four-vector is also constant 
CD|lorentz transformations describe the rotations and translations in space-time which are compatible with these principles 
CD|let us specify lorentz transformation by a simple example 
CD|continuous system,basically jello,blobs of jello,right 
SM|this is kind of what we're starting out with 
CD|so we have a dynamical system,that's this and our every self-respecting dynamics class has to have these amorphous flying potatoes right 
CD|it's just a general thing and we want to now compute certain properties of it 
CD|newton's law is simply ma,written in this form 
NL|you can see 
CD|and now,because have a continuum,it's kind of hard to do it for the full thing,a blob of jello,right 
CD|different things will have different forces acting on it 
CD|so what we want to do is track infinitesimal little elements here,and that's my little box that's dm infinitesimal object 
CD|just like classic calculus that you've seen many many times before hopefully 
CD|so df is the force that's acting on the differential element,dm 
CD|is my inertial position vector,so big is the inertial position vector 
CD|little OMITTED is my position vector relative to the system's center of mass 
CD|so whatever this bulb is you have an infinity of little dm's that all add up to this thing 
CD|they have in common at this instant that's where the center of mass is so that's a classic location 
CD|we'll be writing all our equations about that point so that's it 
CD|that's basically ma times that 
CD|so but for ma it was important that we have an inertia derivative so these dots are derivatives as seen by the inertial frame,and you have to write your position relative to the inertial origin 
CD|that's why you wouldn't do little OMITTED double dot,you have to do big double dot,relative to the inertial frame then df 
CD|now these forces,we can categorize them generally 
CD|there's external stuff and internal stuff 
EX|who can give me an example of an external force that might be acting on a spacecraft 
CM|drag 
CD|drag,right,atmospheric drag is one of them definitely 
CD|gravity could be an external force acting on it 
CD|you could have solar radiation pressure 
CD|you may have your thrusters 
CD|this is a man made object,maybe you have some way to control it 
CD|now you have to do some stuff 
EX|that's all the external things,so what are examples of internal forces acting on this blob of jello 
CD|torquers 
CD|actually,good question 
CD|so magnet torquers are actually objects that push off the external magnetic field 
CD|would see them as external OMITTED influences acting on these elements 
CD|the element might be inside the craft,but it's still pushing off an external field 
CD|so what would be an internal force then that you might have 
CD|reactions 
EX|reactions is a good example 
CD|because you have these fly disks that we put in,sometimes called flywheels or reaction wheels or control movement gyros that are all spinning objects inside our spacecraft,and then they have motors attached that will spin them up or spin them down 
CD|that motor is taking the wheel and it's pushing off the space craft 
CD|so as a dynamical system it basically means some part of jello is pushing off the other part of the jello and that's what cause the spinning 
CD|this would be an internal force for the system all right 
CD|if you do a free body diagram of just the reaction wheel then maybe we can treat it as an external one on that system 
CD|but here we have space craft jello could be fuel and all this stuff 
CD|fuel's another one 
CD|fuel slash backing back and forth 
CD|those are all internal forces 
CD|and that will be key because we'll be talking about internal forces,external forces,and how do things impact momentum and energy 
CD|and there are some good high level things that are really useful as a spacecraft analysts 
CD|so we're going to break it off in two ways 
CD|now if need a total force acting on jello,have it gazillion dm's,have to integrate over them 
CD|so if you look at chapter we do a summation because we have a gazillion of them 
CD|and if you have a continuum you simply replace the summation with an integral sign 
CD|that's really,if you go back and look at calculus and how you did integrals,you kind of broke it up into little bitty chunks and then made those chunks infinitesimally small 
CD|it's basically this big summation 
CD|so if you're summing up over this,the claim here is the total force acting on this blob is the sum of all the forces acting on the individual dms 
CD|which is simply going to be the sum of the external forces 
CD|what happens to the internal forces 
CD|it blots it,it cancels out 
CD|yeah,which law is that 
CM|newton's third law 
CD|yeah,it's one of newton's laws,right 
CD|so if you take a wall,and push against the wall,the wall is actually going to push back with you exactly the same amount but in opposite directions 
CD|so as'm torquing on a spacecraft,applying forces to the wheel,you're getting equal and opposite forces applied to the spacecraft 
CD|when you sum them up all those things have to mutually cancel 
CD|so internal forces never contribute to a net force on the system,only the external ones do that 
CD|so'm sure you've seen that before 
CD|now some basic properties of jello is any continuum,any dynamical system is whatever the mass distribution is,it will have a center of mass location 
CD|and there's many ways to define it 
CD|'m going to show you it's at least two here 
CD|one of them is the center of mass is essentially your mass averaged location 
CD|so rc is the center of mass of this blob 
CD|if you look at times dm 
CD|you really,you think of it you got one kilogram,half a meter out 
CD|two kilograms,a full meter out 
CD|and five kilograms,a half a meter to the left,right 
CD|you would add them up with a distances divide by a total mass 
CD|that's going to be the center of mass location,if you have this mass distribution on a system 
CD|if it's continuum,instead of summing you do integrals of mass,you know,the mass of the object times its location 
CD|and then we divide by the total mass to get rc 
CD|so that's a classic definition of center of mass,this works for any continuum dynamical system 
CD|now we can break this up because these are vectors,the inertial position vector 
CD|so we can say here has to be rc pass the r. again,this is done in a purely vectorial way 
CD|'m not saying OMITTED has to be expressed in the body frame or in the inertial frame 
CD|that's a book keeping element we keep to later 
CD|right now we're just adding vectors 
CD|vectors plus vectors and doing with that 
CD|so if you do this you can see this will actually break up and let's do that one quickly here 
NL|we had that 
CD|rc r. dm that's the sum of two vectors 
NL|so'm going to do this,and say okay 
CD|that's going to be rc dm rdm 
CD|and my little subscript OMITTED that notation is actually a triple integral 
CD|have to integrate over the entire body 
CD|but instead of writing triple integrals with all the limits,this is a short kind 
CD|just do one integral with OMITTED that mean it understood to be integrating over an entire,whenever this body is,all right 
CD|so we can break these things up 
NL|that's nice 
CD|that should be a vector 
CD|then there's some simplifications that are going to happen 
CD|we knew earlier,by definition,this was times rc right 
CD|this term can somebody say how this is going to be refined 
NL|all right 
NL|kevin 
CD|you'll get rc out of the interval okay 
CD|we get big times r. yeah this is nothing but the sum of all the mass elements which is the total mass 
CD|you can get there 
CD|so now kevin can you explain to me why it's okay to take rc varies with time and everything 
CD|why is it okay to take it outside the integral 
CD|because we're only intergrating the phase 
NL|right 
CD|we're integrating over the body 
CD|so when you see these integrals,think of that,over this body,let's say my center of mass was right here by the microphone just easy right 
CD|stop'm looking at this and going at this instant,whatever the mass distribution is,my left hand is part of the system the center of mass for the left hand is still down here,right,for the system 
CD|that rc location for the right hand is also going to be here 
CD|every element of my body,because it's a continuum,it shares the same center of mass location 
CD|so as far as the body integral goes,it's just a constant 
CD|just like integral of times OMITTED 
CD|you pick the outside the integral and just do integral of OMITTED right 
CD|and continue,that's how we can treat it 
CD|so this is just a spatial integral 
CD|yes rt varies with time but we're doing a spatial integration over the body volume right 
CD|and that location is a fixed it doesn't change depending on if you're looking at the nose of the spacecraft or the tail of the spacecraft 
CD|it's one system and that system has one center of mass location 
CD|so yes that's the reason,and we'll use this trick several times today 
CD|so if it didn't quite make sense now hopefully it will sink in more and more 
NL|so you can do all of this 
CD|that gives me mrc plus little rdm mrc 
CD|these cancel and you will have little OMITTED times dm 
CD|this is the other way 
CD|if you do your classic sophomore level center of mass stuff,you have kilograms here,if all your positions are taken relative to the center of mass 
CD|all these mass times positions have to sum up to be 
CD|that means you've balanced it perfectly 
CD|and that's what it looks like for generally speaking 
CD|we have the little OMITTED dm's body integrals have to be equal to 
CD|that's just a complete NUMBER version that works for any jello 
NL|so good 
CD|so that,from here,a few steps you can prove this 
NL|these are the kind of things would definitely expect you to be able to do easily and quickly in an exam 
AP|so if you haven't done much of this,practice 
CD|now,what we're going to do next is we're going to differentiate this 
CD|so we're going to take that definition that we just had,the center of mass location,all this is good,and'm going to take two inertial time derivatives 
CD|so that means on the left hand side,mass is constant 
CD|not losing or gaining mass in this dynamical system 
CD|and rc,just have to put two dots over it and'm done 
CD|this is kind of like homework NUMBER that you guys did that had inertial derivatives and stuff 
CD|in vectorial form this is dead simple,two dots and you're done 
CD|the right hand side dm guess doesn't change,we're not losing or gaining mass with the system 
CD|this is a body integral,as kevin was saying 
CD|and so the only thing that varies is r. so we get big and it has two dots over it 
CD|but then you go back and look at newton's equation that mass times inertial acceleration is the force acting on that one 
CD|and so this can be replaced with also the force 
CD|the integral over the df force and we show that the integral of the df force is nothing but the net external force 
CD|you can ignore all the internal forces 
CD|so you end up with an equation that should look pretty darn familiar 
CD|mass acceleration equal to force 
CD|but you've used it primarily'm assuming on particles 
CD|this is the particle,here's the mass,here's the force this is where it's going to go 
CD|this actually also works on a continuum 
CD|blobs in space 
NL|anybody seen the muppet show 
CD|there was pigs in space,you know,a lot of jiggling going on 
NL|that's that kind of stuff 
NL|this works for anything,even muppets 
CD|okay,so this is the key thing 
CD|we call this the superparticle theorem 
CD|what this basically says,no matter what the dynamical system is,this complete closed system,you can treat the center of mass of that system will act just like a particle 
CD|if know there is two forces acting on it from a megatometer and maybe from the atmospheric drag force that daniel was talking about,that's it 
CD|then those are the only two forces have to consider acting on the center of mass and will predict the translational motion perfectly 
CD|now that blob may pull apart 
CD|it may do all kinds of weird stuff 
CD|so if your external force depends on the shape,then it gets more complicated 
CD|so if this blob would be pulling apart,then with gravity gradients the part's closer to the planets would have different force than the parts top 
CD|the net forces change because of the shape 
CD|that makes it more complicated 
CD|but we didn't have gravity 
CD|we have just net thrusters you've got blobs in space 
CD|somebody fires a thruster 
CD|and this thing is going to take off and go 
CD|just by looking at the force and knowing the mass,can predict what's going to happen to the center of mass 
CD|don't know what happens to the shape yet,but do know what happens to the center of mass of that system 
CD|which is a very powerful argument 
CM|so that's what's called the super particle theorem 
CD|any blob in space 
CD|if you just are concerned with the center of mass,the center of mass will act like a particular 
CD|ma holds but has to be the net external force 
CD|is the total mass and rc double dots has to be the inertial second time derivative 
NL|enough of blobs,let's get rigid 
CD|all right,so now we're going to deal with everything on,things are going to freeze 
CD|instead of just general continuum,but think this is a good classic thing 
NL|earlier stuff,definitely things that will put on the exam 
NL|something like that's going to be on there guaranteed 
CD|but now we're going to freeze it 
CD|how do we do that 
CD|how does that change my definitions 
CD|how does it change momentum,energy,all this kind of stuff and we want to look at this 
CD|so now angular momentum about a point,this is an inertial origin 
NL|'ve picked that already 
CD|can write that as my position vector or cross or with dots 
CD|that goes to each dm 
CD|didn't draw the the dms here anymore 
CD|but this is now a rigid boby 
CD|so if it's rigid,every point in the body has the same angular velocity 
CD|if i'm spinning,then the speed of my right hand is different than the speed of my left hand,the velocity,right 
CD|because one's moving forward,that's a different vector than a velocity vector moving backwards relative to me,opposite for you guys,all right 
CD|but the angular velocity,if we're spinning,everybody needs to be rotating at one degree per second 
CD|otherwise if the panel NUMBER two is rotating at two degrees per second,panel NUMBER one is only rotating at one degree per second,those panels are going to catch up at some point,right 
CD|it's deforming,that's not a rigid body 
CD|so as before when we argued,rc was common with the body integrals here we would have tricks where we can say omega is constant on a rigid body or blog the jello 
CD|that's not true because everybody could be spinning in different ways right in that case 
NL|so that's one thing 
CD|another one,this is the basic definition 
NL|you've seen now how we break this up 
CD|we write OMITTED as big as rc plus little r. and then same thing here,with thoughts,do the cross products on your own 
AP|make sure you can derive this 
CD|and then you come there 
CD|there will be terms that vanish,but again the angular momentum about point can be written as,this is the angular momentum of the center of mass plus the angular momentum about the center of mass 
CD|kind of what we did with energy as well 
AP|so i'm leaving this up to you to practice and go through and make sure you can go from here to here 
CD|now this part,that's your orbits class 
CD|you've all taken some type of orbits class probably 
CD|and you hang momentum on orbit and how it's conserved and from that you get all of the different chronic intersections and trajectories 
CD|and that comes from here 
CD|that's cool,but we don't care about that part 
CD|this class is all about attitude of spacecraft,right 
CD|the translational side,as you see through the super particle theorem,you can really handle separately and track what happens to the center of mass of a spacecraft 
CD|care about what happens about the center of mass in this class 
CD|so have wheels,have gyroscopics,all the stuff,that's what care about 
CD|that's what the attitude dynamics is 
CD|so instead of ho,'m just going to keep this part which'm going to write as hc 
CD|that's the angular momentum about the center of mass and that will simply be OMITTED cross OMITTED dots dm 
CD|same definitions we had before right 
NL|so that's good 
NL|so now if this is rigid 
CD|people,if this is rigid,what happens to this derivative 
CD|OMITTED dot,it goes to zero doesn't it 
NL|okay,who agrees with that 
NL|who disagrees with that 
NL|and the rest of you are asleep,okay,or just confused,that's fair 
NL|'m also confused sometimes 
CD|so,you agree that it would go to zero 
NL|sorry,what was your name again 
NL|ansel 
NL|ansel,thank you 
NL|why do you think it would go to zero 
CD|thought that's how a rigid body was defined,that the points don't move relative to the center of mass 
CD|what does this dot mean 
CD|OMITTED so this is your body 
CD|and to track this point,this little knob at the end of the pen,right 
CD|it's inertial,mean it's an inertially fixed spin axis,it's a rigid body 
CD|is the velocity as seen by you,an inertial observer,zero 
CD|right,the position vector would be center of mass to this little knob,right 
CD|and that vector is clearly rotating as seen by you guys 
CD|so as seen by what frame would this time derivative go to zero if it is rigid 
CD|body frame 
CD|the body frame 
CD|that's the key 
CD|so'm glad you guys mentioned inertia because this an easy stumbling block 
CD|everybody starts out with,it's rigid 
CD|all the dots go to zero 
NL|no 
CD|this is the inertial derivative of the velocity 
CD|if it's rigid,it just means as i'm rotating,my right hand is always to my right 
CD|it's not moving up,down,otherwise not being a rigid body 
CD|so only as seen by the body are these time derivatives zero for a rigid body 
CD|that's the key thing that everybody always misses otherwise 
CD|so good,so now if we do that,we know how to do this transport theorem,right 
CD|kinematics comes back and we take the body frame derivative,why 
CD|because we know it's going to go to zero,we love zero 
CD|and what you're left with is omega cross r. okay,good 
CD|we do that so OMITTED dot is nothing but omega crossed OMITTED and can plug that in here 
CD|so get an OMITTED cross omega cross r. this form is not very convenient 
CD|said omega is constant as seen by the body itself 
CD|if it's rigid,every point in that body needs to be tumbling at the same rate or it's deforming 
CD|but in a cross product like this,can't just pull the middle term out,all right 
AP|so want to make it either at the left hand side,or the right hand side 
AP|then can take it outside of the body integral,and that's what'm doing here 
CD|on cross is a same thing as minus cross 
CD|so flipped it,and then have OMITTED cross OMITTED cross omega with the minus sign 
CD|and in matrix form,this OMITTED cross OMITTED cross is nothing but OMITTED tilde OMITTED tilde 
CD|again,that's where the minus sign comes from 
CD|and then now can take the omega outside of that interval because it is rigid,right,that is the key assumption 
CD|anybody recognize what this term is going to become 
CD|angular momentum turns to be something times rates 
CD|inertia 
CD|inertia,moment of inertia,exactly 
CD|so these can become our inertia tensor that you've seen from your statics and mechanics classes 
CD|so we're just going to derive this now 
NL|hi,and welcome to the fourth segment of space craft kinetics 
SM|here,we're going to be looking at the complex equations of motion that you have of a rigid space craft 
CD|but on it,we now have a series of fly wheels or other momentum exchange devices 
SM|we'll be first studying the different types of devices 
CD|there's reaction wheels,there's control moment gyroscopes,and then there's also variable speed cmgs 
SM|and then we'll develop the math 
SM|we'll actually develop the math in a more complicated way than most general way with the variable speed control moment gyroscope 
SM|and then'll show you how you could simplify these equations to retain the classical cmg and reactional equations of motion 
CD|so this is a great classical treatment,reaction wheels are used very,very generally on spacecraft 
CD|their big benefit is they only need electrical energy,there's no thrust involved to do the attitude 
CD|same thing with control moment on the gyroscopes,they're more expensive,but they produce much bigger torques 
SM|and yes,as you will see in the mathematics 
CD|they also give you more headaches and much more mathematics 
NL|so it's a lot of fun 
NL|so good 
CD|this is the vector form,the coordinate independent form 
CD|let's now actually apply some particular frames and there's different answers that we get out of this 
CD|it's always the same answer,but it's different expressions,different formulations of that same answer 
CD|so if'm using an orbit frame,and here've used an aircraft-like frame,where if an airplane is flying you have your nose pointing in the one direction,your wings may be to the left or right 
CD|have yaw axis up,aircraft probably would have had it down 
CD|but with orbits we tend to have our third axis or one of the axis up in the radial direction 
CD|so,NUMBER is my long track,they're all unit direction vectors 
CD|that means rc by definition is always going to be NUMBER kilometers in that direction,all right 
CD|and that direction is defined here by NUMBER 
CD|so,in the frame,your position vector on a circular orbit in particular,is just going to be constant 
CD|it's just going to be rc,all right,which is kind of nice 
NL|so we can write that 
CD|but we've seen the spacecraft part,the inertia tensor,we tend to write in the body frame 
CD|so while the orbit positions could be written in very simple manners,we tend to need it in the body frame 
CD|and now,so if this is your position vector pointing up to your satellite,and you've got a coordinate frame on your satellite,depending on your orientation,you can have an infinity of different variations,and most generally,you're going to have to account for three different vector components,for your rc inertial position vector,always 
CD|so, nothing but frame components of my position vector,different ways to look at it 
CD|so we have that 
NL|now we plug this in,added these this morning 
CD|everything's in the body frame just to make it explicit 
CD|so we had rc,cross rc 
CD|we've picked a principal coordinate frame here just to make,can always do that for a rigid body,all right 
CD|it exists,it makes your analysis a little bit easier 
CD|now you can do this math,this multiplication is what talking about 
CD|you get a little bit of scaling,then the cross product,and this is going to be your answer 
CD|so this box,the answer's the same as the earlier one after it's expressed everything now in body frame components 
CM|but we can again look at more conditions now and try to figure out when will the gravity torque go to zero 
CD|why do care about it going to zero 
CD|for equilibrious that we're about to study,that's thing if you have these conditions and this is the one disturbance you're modeling,if that disturbance acts on it,you won't be at an equilibrious 
CD|this is like gravity gradients we talked about last time 
CD|this would be a gravity gradient equilibria 
CD|if you disturb it,then,this one weigh more than this point makes it restore itself 
CD|so what orientations or what shapes give us that 
AP|and as you guys mentioned earlier,one way to make these things go to zero is simply these differences all have to vanish 
CD|and that means,as you guys already identified,is that all the principal inertias must be equal which is either a sphere or a cube,those kinds of shapes 
CD|so,there are particular shapes that can make your attitude go to 
CD|that's not or so your gravity gradient torque go to 
CD|and that's important,there was a satellite that we built here called dandy 
NL|anybody know that one 
CD|heard about it a little bit,right 
CD|it was a sphere for reason like that so we could do this stuff,and didn't have any other gravity gradient torques disturbing because really wanted to measure atmospheric force effects,and didn't need all the disturbances acting on it very much 
CD|so that was really leading to this decision,all right,that gave us zero gravity gradient torques,also how the atmospheric drag effects so you didn't have weird panels sticking out,there were other reasons too 
CD|so the other way we can make it go to zero is we can look at these components 
CD|are there particular orientations 
CD|remember,rc one and two and three,the position vector always points to straight outward but then depending on my attitude,will have different rc, components 
CD|are there different orientations that will force this lg to go to zero 
CD|and the answer'm showing you is rc is equal to rc times bi 
NL|so,is it david 
CD|what does that mean for your orientation,if rc is equal to rc bi hat 
CD|does it mean you're aligning your body axis with the frame that you created 
CD|be more specific,what part of the frame 
CD|the radius vector 
CD|right,because if you say you're adding a body axis relative to the frame- if they're principal inertia axis 
CD|then that implies all my principal inertia axis have to line up with the frame,and that's not true 
CD|so your second argument is correct,and it's what we really care about is the rc part here that we have,right 
CD|that's in the o3 direction here,it's basically the orbit to radium to axis 
CD|and so that what it says is your position vector on that direction has to be a principal axis of your body 
CD|and that could be b1,b2,or b3 
CD|but it's just locking one of your axis in 
CD|'m going to use these to have three distinct axis,right 
CD|so we have,this is a principal axis,this is a principal axis,and this is a principal axis 
CD|it just says that if line up one of those things as a principal axis 
EX|let's do the simple example,right 
EX|here have my skinny axis in the vertical direction 
EX|that satisfies that condition 
EX|if rotate about that axis,this is still in equilibrium,because of the symmetry of the stuff,right 
CD|so you can see,that orientation doesn't OMITTEDer 
CD|it just OMITTEDers that one of the principal axes is lined up 
CD|this is another one that we identified,where right now the gravity gradients are even and they cancelled each other 
CD|but can rotate about that about the gravity direction 
CD|and still have a zero gravity gradient torque,right 
CD|that's what this condition means 
CD|so it only locks one of my body axis to be aligned with the orbit direction vector 
NL|that's it 
CD|but it still leaves an infinity of orientations because you can rotate about that local vertical axis 
NL|okay,good,yes 
CD|OMITTED thinking more like OMITTED and that stuff 
CD|OMITTED they're pretty small 
CD|OMITTED is about a thousand times smaller than the regular stuff 
CD|so if you care about those accuracies,you could do that and you'd have to account for that then in these developments,that would be actual terms 
CD|don't typically see those because this is already a pretty small torque 
CD|many simulations don't even include this,but if you do include it,great,and OMITTED is much,much smaller 
CD|if you're going around asteroids,that's a whole different problem 
CD|if you're looking at an asteroid binary system,know some of you this year might be looking at those 
CD|that's a full on thing 
CD|then you do these expansions like we've done but on two bodies not just treating the earth as a big point mass,as a big thing 
CD|but for earth,it is very spherical as far as that goes,right 
NL|but yep,no,great question 
NL|so,this would be modified 
CD|the process is the same,but you might have extra conditions to line it up with the local area,and what does that mean 
EX|so here's a example we want to run through 
EX|here,have some principle inertias that are NUMBER,NUMBER,and NUMBER 
CD|now,just by the numbers,a little bit unfortunate,the intermediate one if NUMBER beneath the max and is NUMBER above the min,so it's plus and minus NUMBER 
CD|this is why when we look at these wheels,the critical wheel speeds,where things go stable unstable,it happens to be symmetric 
CD|but,generally these inertias aren't split evenly like that 
CD|so generally those critical wheel speeds are not necessarily symmetric,all right 
EX|this example will have them symmetric 
EX|the wheel inertia is ten kilograms,just to make a lot of math easy 
EX|spacecraft is to spin about NUMBER rpm,about b1,so that's our omega e1 that you have 
EX|and so now,we're trying to figure out how fast do we have to spin this wheel at least to guarantee linear stability of the system 
CD|so you want both bracketed terms to be either positive or negative 
CD|now,those two bracketed terms could be positive,that's the set 
CD|that's where we have i1 must be greater than these other two terms here 
CD|in that case,the left bracket and the right bracket are both positive,and then we have a stable system 
CD|set,actually just simply reverses this,greater than becomes a less than 
CD|this is the condition that makes the first and second bracket go negative and that is also a stable configuration,all right 
CD|so now,we want to look at what is the range of spin rates 
CD|so the way like to think of this is just look at the spin axis 
CD|we have zero 
CD|and then,can go positive spin rate and negative spin rate 
CD|and we're going to put in inequality condition to start to go it has to be at least to the right of this mark 
CD|and it has to be at least to the left of this mark,so what's left 
CD|the union or intersections of these different areas,that's how solve this stuff at least 
CD|so if we're looking at this,in this problem if the wheel speed is zero,is this system going to be stable 
CD|brian 
CD|they'd take a look at the inequalities again 
NL|no,no 
SM|if the wheel speed is zero,there's no longer a dual spin,there's simply a single rigid body 
CD|and we're spinning about b1 
CD|about which inertia axis are we spinning then 
CD|it's not going to be stable 
CD|all right,because now we have NUMBER 
CD|so b1 is an axis of intermediate inertia in this particular example,right 
CD|so we know up front,zero can not be included in my solution space 
CD|have to,if this is going to work,have to have something positive or negative 
CD|and we'll see how that drops out 
CD|so if we do this,here's the two inequality conditions 
EX|the second one,for example here,this is one set 
CD|you can say okay,i2 minus,you can bring this term over,that gives you i2 minus i1,divide by this 
CD|iw,i2 minus i1,gives you minus NUMBER divided by NUMBER 
CD|no,it gets you minus NUMBER divided by ten,gives you minus five 
CD|so by bringing this over,omega hat has to be bigger than minus five 
CD|if'm just going to draw that here,so let's say,here's the minus five part,that means,what did say,less than 
CD|all right,thinking too many steps ahead,okay 
CD|no,it's greater than 
CD|okay,so that means we would have to be somewhere greater than minus five 
CD|but that's only one condition 
CD|now the other condition,here'm just going through the math a little bit more steps,right 
CD|i'm bringing this condition and bringing this part over to the left hand side 
CD|i1 back over to the right hand side 
CD|divide by iw2,here it's i3 minus i1 
CD|you plug in the NUMBERs,which you do something similar in the homework,so'm just not going to 
CD|you know how to do this algebra 
EX|then omega hat as to be greater than plus five 
EX|so if we look at this now and say,okay,there's also a plus five,and here's the other point 
CD|this is the domain that makes the second bracket go to positive 
CD|what is the actual solution space then for stability 
NL|inaudible great 
CD|so that union between both,right 
CD|because we need both of them to be positive 
CD|that's going to be here,all right 
CD|outs greater than 
CD|is that the only domain,though 
NL|carlo,what do you think 
CD|will be less than minus five 
CD|less than minus five,now talk me through why that it's also domain correct 
CD|because the second set of equations doesn't give us that answer 
CD|yep,the first set always has greater than
CD|you've identified two points where each bracketed term flips signs 
CD|once you've found those,you've really found,instead of greater than,it's all less than 
CD|so instead of always being to the right of,it's always going to be all to the left of 
CD|and,again,the same unions 
CD|so if you did that to make both brackets negative,if pick a different color,let me make blue for negative right 
CD|then you would have to be here or here and the union of that is just going to be here 
CD|so you can see as expected the origin is not included in the solution space 
CD|because as brian was pointing out,this is a single rigid body spinning about axis remediated inertia 
CD|we know it's not stable,but if the wheel spins up enough then at some point,you'll notice with this wheel spinning,you're spinning oars is an oblate body,you're spinning by axis of max inertia 
CD|that wheel by itself,the way it's defined 
CD|it's always going to be stable,right 
CD|so if that wheel spins fast enough,one way to think of this is the stability of that wheel is going to overcome the instability of the spacecraft spin and that's how we stabilize it 
CD|but you have to get to some minimum amount where it's just equal and then you have to be greater than that,hopefully,quite a bit greater that it will increase your stiffness and your response time as well,right 
CD|so either you can go positive or you can go negative and that will get you there 
CD|now,so good 
EX|so in this case,have,this is one of the wheel's speed,the critical speeds,you could use or it has to be bigger than that really,that's what you have to write 
CD|not equal,but probably bigger than that 
CD|or it could also be less than minus NUMBER in this case 
CD|there's two sets,both brackets positive,both brackets negative 
CD|so if'm giving you some problem like this though,here am saying,we are spinning about major axis 
CD|so in this case,b1 is axis of maximum inertia and without a rotor spin,so the origin,we would have to be stable,which is what am showing 
CD|if we are spinning up more about the spacecraft by definition,already has a positive spin,about b1 
CD|that is how we derived to all this stuff 
CD|that's how picked b1 
CD|and now,the wheel is also spinning about that 
CD|if the spacecraft is max inertia stable,the wheel is max inertia stable and they're both spinning about positive b1,it's always just going to be stable 
CD|more and more stable 
CD|if you start to spin it the opposite direction though,even though the space craft by itself without that wheel will stable,it has the speed momentum that helps stabilize it 
CD|what happens with the wheel,if it's in the opposite direction,it's going to start to pull out the total momentum gets reduced,actually 
CD|if this is spinning at NUMBER rpm positive and the wheel is NUMBER rpm negative,you're pulling out momentum 
CD|and in fact,the momentum perspective,at some point it acts like the separatrix,it acts like the unstable intermediate axis motion and you will drive a system unstable 
CD|but the good news is no matter what axis,principle axis,you want to spin nominally,we can always find a wheel speed that will stabilize it 
CD|laugh the bad news is no matter how stable the spacecraft was before you touched it,once you touch it,you have the capability to drive it unstable 
AP|so make sure you have the right real speeds otherwise your sponsor will not be happy 
AP|at some point again,if you go fast enough,then the wheel momentum will dominate and it's very,very stable 
CD|whatever the spacecraft's doing is almost noise 
CD|so with all duo spinners to extremes infinity real speeds always stable 
CD|but in between,there is a region,a finite zone,that is unstable 
CD|so for an intermediate axis speed,which we looked at 
CD|and in our problem,we had plus and minus five,that was just because of the inertias,it doesn't have to be symmetric 
CD|if you see something like this that excludes the origin,right away could say,this must be spinning about an axis of intermediate inertia with a dual-spinner 
CD|just from the solution space 
CD|and,if you have an axis of a least inertia,you're spinning about this region that you shouldn't be spinning about is actually in the positive spin direction and just all comes out of the mathematics then 
NL|jordan 
CD|sorry,missed how can it be stable if you're spinning it less than negative five 
CD|both bracketed terms 
CD|because the two brackets have to either be positive,and that was the argument for the black hash lines 
CD|but we found the two critical points 
CD|if we also less than those critical points,then both brackets both become negative 
NL|okay 
CD|and that's why this is also a possible answer,out of the mathematics 
NL|thanks 
NL|yeah,good 
NL|so anyway,but this gives you now a quick solution space 
AP|you can do these easy homework with this yourself,to come up with it 
SM|but just remember the extremums are always included 
CD|the origin is only included for a max and min inertia case and then you kind of look at the pattern 
CD|if see the pattern,know right away what type of spin we're doing 
CD|torque free motion 
CD|momentum has to be constant 
CD|the momentum magnitude has to be constant,which is what'm writing here in the first equation 
CD|and kinetic energy has to be constant 
CD|so we're not considering actual mechanical energy loss right now 
CD|like,before,like the paul will plots,let's assume and are perfectly preserved 
AP|you can write the momentum at energy constraints in terms of your omegas 
CD|was omega,so that for the magnitude is the component squared 
CD|that's easy,magnitude squared 
CD|and kinetic energy was NUMBER,so the comes to the left-hand side 
CD|this one was just to make a transpose omega,that is a diagonal 
CD|again,makes it very easy 
CD|this is the form that you would have 
CD|now these are two constraints 
CD|and we have three variables 
CD|and quickly this illustrates again,that the omega curve that you're going to get isn't going to be a plane or a volume,the solution space 
CD|it's going to be one dimensional curve in three dimensional omega space,right 
CD|that's what we're looking for 
SM|we have three unknowns,omega one,two and three and two constraints 
AP|so can always use these two constraints and that's what'm laying out here 
CD|say,okay well let me just pick to write everything in terms over omega 
CD|why 
CD|because it's the first thing one that appears 
CD|so can use this and solve for omega squared and that's what you have in this equation 
CD|and can solve this for omega squared which comes up here 
CD|so you've got two equations and two terms,omega one and two that'm solving for,so just rule any algebra and you reduce it 
CD|so,now because of these constrains if have an omega one and know my momentum and know my energy added at the beginning,can quickly tell you what the magnitude squared of omega two has and the same thing for omega three,all right 
CD|so it's just the way of re-writing momentum and energy constrains exclusively in omega terms 
CD|now what makes omega special 
CD|nothing really 
CD|there's nothing special about omega 
CD|you could've just as easily solved everything in terms of omega or you could've used in two equations and say,well,'m going to solve everything for omega and in terms of omega,right 
AP|you can solve this any which way you wish 
CD|and substitute them again 
CD|will use all of them 
CD|this was in the paper by junkins,jacobson,blanton that you've got a reference down here 
NL|it's actually from NUMBER 
NL|most of you weren't even born 
CD|but it's an eloquent result here and you will see,this has some analogy to the axisymmetric cases 
CD|but it gives you a more general formulation that you don't often see 
CD|so this page,all we've done is we've taken momentum energy equations and we've used it to express the omegas in terms of momentum and energy and one of the other omegas,that's it 
CD|so let's go back to the original problem 
CD|this is the one we're trying to solve 
EX|we've got these differential equations 
CD|there's no's on the right-hand side because there's no torque 
CD|how do we solve this 
CD|before with axis symmetry,one of them was 
CD|so we could say omega is fixed and therefore we took a derivative of this,substitute into the others,right 
CD|and came up with nicely decoupled ones 
CD|now everything varies with time and can no longer do that trick directly 
CD|but there's still similar steps 
CD|we're going to start out with the same kind of a step 
CD|we have three fully coupled and now non-linear differential equations,whereas before had two coupled linear differential equations 
CD|'m still going to take a derivative just because it worked so well for the axis and metric let's try it here,right 
CM|and you do this,and then with chain rule,omega is omega's's omega,everything varies with time,and here you go,to make a,, double outs divided by inertia 
CD|that's basically it 
NL|so you're going okay,great,where is this going 
CD|so you took a derivative again 
CD|now similar as to with the axis symmetric case,omega dot for the axis symmetric only depended on omega because omega was constant 
AP|well,what we're going to do now is we plug in the second and third differential equation into here 
AP|and rewrite this all and you end up with this expression here that you going to have 
CD|so omega NUMBER,is equal to omega omega squared 
CD|and omega omega squared 
CD|as you can see there's still quite coupled 
CD|there's still non-linear just went from three non linear first order differential equations to three non linear second order differential equations 
CD|seems like we're going backwards,we're not making much progress 
EX|but here's the elegant thing now,from the prior slide,have for example omega squared in terms of just a constant and something times omega 
CD|and the same thing for omega squared 
CD|so if you look at the second order differential equations,here is omega,omega 
CD|can write omega squared in terms of a constant and omega 
CD|and the same thing for omega squared 
CD|so by using the momentum and the kinetic energy constraints,can substitute those in and instead of having time varying quantities,have everything in terms of constants of energy and consular momentum magnitude 
CD|and what you can do for one,you can follow the same process here 
CD|we use here the expressions where omega and here we use the third set that writes omega and in terms of omega,right 
CD|there's three different ways we could take two constraints and solve for two to three variables 
CD|if you do that and plug them in,so that's the process,those equations we found,and you plug them in here 
CD|and then you do the same thing for the other two look what happens in the end 
CD|this is omega,just a bunch of constants 
CD|omega times constant something times omega squared 
CD|so you're going to get omega term and then something times omega squared will give you omega cubed essentially 
CD|so the final form for everyone of these omegas,can write it as a,what's called a homogeneous undamped duffing equations 
CD|homogeneous just means the right hand side is 
CD|undamped,there's no omega dot 
CD|just omega double dots and omegas 
CD|and the duffing equation,is this classic,this would be a spring mass equation 
CD|the duffing equation is a spring mass with a cubic stiffness term added to it,so like a cubic spring instead of a linear spring 
CD|it's a common modeling thing to see as well 
CD|so,all three of the omegas actually have an equation of this form 
CD|but you would have these as and bs which depend on omega,and,and you can see,the inertias are computed differently,and when you plug it in,energy and momentum come in with different terms so we have formulas for the as and bs have to be 
CD|so this is actually very elegant because we often see systems that are,we end up with OMITTED double dot plus kx,right 
CD|if it's OMITTED double dot plus OMITTED equal to,it should be trivial to talk about linear stability,at least 
CD|you've linearized the system for small motions locally 
CD|if OMITTED is positive,we know we'll have a restoring force let me just draw that out because we're about to mute that 
CD|so if you,if have m. forget,we'll just do normalized 
CD|that means OMITTED double dot kx 
CD|so if OMITTED is here,you can look at what happens to OMITTED double dot 
CD|if OMITTED is positive,the OMITTED double dot is going to be negative 
CD|and it's a linear relationship 
CD|so if you're too far ahead,the force is going to restore you back to the origin 
CD|if you're too far behind,and OMITTED is negative,OMITTED be the positive value that then makes it positive,you can catch up 
CD|this gives you the typical oscillator equation that you'd have,but it's a stable motion 
CD|so that works 
CD|but this result is typically due to a linearization that you get 
CD|here have we linearized anything when we derived this 
CD|no,we just used full nonlinear differential equations,differentiated them,substituted in energy momentum,and you end up with three equations,we've a first order term and a cubic term 
CD|the cubic term,if you do structures,you often see this cubic term 
CD|but it's the result of an approximation 
CD|once you go beyond the first order stiffness,the next term people typically include is the cubic term 
CD|if the fractions get really big like strain hardening on a spring or something 
CD|you get this extra stiffness that comes in,that's the cubic term 
CD|but again,in structures,that's an approximation of a much more complex behavior 
CD|it's like the next order term that's included 
CD|here this is a perfectly rigorous equation 
SM|so in structures,this is often found as an approximation 
CD|here there's no approximation 
CD|is it exact thing for tumbling general inertia,motions 
NL|so good,so we want to study this now 
NL|little bit more detail 
EX|we have three equations 
CD|when we only had these parts,that was the axisymmetric case it was easy,spring mass 
CD|it was a sine and a cosine response,right 
CD|now here it's going to get a little more complicated 
AP|unfortunately don't have analytic answers as we have with the axisymmetric codes but there are some arguments we can talk about like global stability of these motions and departures that you can write it in this form is kind of a nice thing 
CM|so yeah,then'll lead departure from hooke's law 
CD|that's the linear part,this is an exact differential equation 
NL|so we can do this 
CD|so this is actually three equations 
CD|are these three equations decoupled 
NL|cough sorry,what was your name 
NL|mark 
NL|mark,are they decoupled 
NL|yes 
NL|okay 
NL|are they independent 
NL|yes 
CD|well,not because of the constants 
NL|you said it with such conviction you almost had me convinced 
CD|why are they not independent 
CD|everybody agrees they're decoupled 
CD|if you look at this each equation has only omega NUMBER in there 
CD|and the next term only has omega's and the other one has only omega's there's no omega times omega so we definitely made them independent 
AP|once you have all the initial conditions and these parameters you can solve three independent differential equations numerically and get the answer 
CD|but independent is something different that means,lets say have a spin about omega only and the next simulation is a spin about omega it is the same omega but it has a different b2 
CD|what will be different in these differential equations 
CD|because you're right,they aren't independent 
CD|they are energy momentum terms 
NL|exactly 
CD|the energy momentums are actually what cross couples them,so they're not independent 
CD|can't just go well,if omega is one radium per second,have a fixed answer that's not true 
CD|because the coefficients that go here depend on momentum and energy 
CD|and so it's a little bit more complicated if you also tumbling about another access,your energy state is different,momentum states are different,and that will give you different's and's 
CD|so you have to solve it for that particular case 
CD|so there are three uncoupled equations but not independent equations 
NL|is that make sense 
CD|they're coupled through this coefficients through energy and momentum,precisely 
CD|so,the three uncoupled oscillators and that's there 
CD|if write them out to as and bs,this is what they are,as you can see,and has appeared 
CD|the inertia's always the same,it's the same with your body 
CD|but as your math was saying,if is different and is different,would have different coefficients,and all of a sudden and then we get a different response with these omegas,right 
CD|so that's where it does matter 
CD|but it's very elegant so for the general case you can always write this as a harmonious,homogenous on them to duffling equation 
EX|now with these parameters we'll look at this a little bit more carefully but you can see,for example,the cubic stiffness terms bs,there's differences of inertias again 
CD|so we know right away if it's axis symmetric,some of these things will go away,some insight you get 
CD|but at the same time,'d say if it's a cube or a sphere,all of these terms go away 
CD|for a sphere,none of that matters 
CD|even in here there's always differences of inertia so for sphere again,as and bs go away which we talked about 
CD|sphere you can tumble about any axis and it'll just continue to tumble,your mega,, NUMBER are all flat lines,always,or for a cube the same response 
CD|but for general bodies,if i1 is your largest inertia 
CD|you can see this is going to be a positive term times a positive term,this is going to be a positive cubic stiffness 
CD|down here again,if i1 is the largest,so this is going to be negative,that's negative,negative times negative is positive again 
CD|again we'll have a positive stiffness whereas here you'll have a negative stiffness 
CD|so is positive stiffness good or bad for a stability for a cubic one 
NL|good 
NL|it's good 
NL|it's pretty much analogous 
CD|instead of a liner response,now you have something that's kind of cubic 
CD|but you need the same kind of a sign,right 
CD|if you're positive,you want something pulling you back to the origin 
CD|the origin is the equilibrium that we'll be studying here 
CD|and if you're negative,you want something positive to pull you back 
CD|it's just got to be more aggressive for big departures,but way less aggressive for small departures 
CD|so there's a difference in the cubic terms 
CD|that's why for a linearization,this is the linear part it's going to dominate 
CD|but if you go really big departures,the cubic one is always going to win 
CD|at some point,x cubed is going to be bigger than x,regardless of what these constant coefficients are,these as and bs 
NL|so good 
SM|so you can see just looking at the signs of this we can get some insight into what must be happening and we'll cover this a little bit more in another slide as we go through it 
SM|now,we're going to look at how this all simplifies 
CD|if we have a single reaction wheel,we mentioned earlier,if you just have these all 
CD|gimbal rates at zero,gimbal acceleration is zero 
CD|that means this whole frame is locked down,relative to the body,these earlier equations simplify to this form 
NL|and that's nice 
AP|so now,what we can do too is you could rewrite this 
AP|we're going to use the motor torque equation to get rid of big omega dot 
CD|so'm taking that extra differential equation,'m going to solve for omega dot,back substitute it so get my spacecraft accelerations in terms of the motor torque 
CD|one thing,can show you this in identity,this term here,with a little bit of algebra,you can show that it relates to omega cross gs 
CD|they just,if you carry out the cross product terms,that's what you come up with 
CD|so that's what used to replace this with this part 
CD|the next thing is this is the motor torque equation without gimbaling,so there's not gamma tau term in there 
NL|and that's good 
CD|and so you can see in here,there is a js times big omega dot 
CD|js times big omega dot 
CD|could then directly substitute this,can take js times this,bring it over to the left hand side and substitute this back up in here,can do that 
CD|if you do that,you end up with a term here that's going to be js 
CD|this is js times this,you're still going to have a js over here,gs,gs transposed omega dot 
CD|here we have the full inertia tensor times this 
CD|and this inertia was the space craft inertia plus the gimbal and wheel frame inertia 
CD|so is all of this plus js,ts,gs transpose,as well 
CD|but since,when you substitute this back in there,you get this extra term 
CD|it's just like this last term you have here 
CD|those two actually cancel 
CD|so,for the reaction wheel form that'm showing you,people often ignore this and include that extra term,which doesn't make momentum work 
CD|this will be the full answer 
CD|you can then,so redefining that,can rewrite these groups in terms a little bit,but this is more the classic form that you would see for reaction wheels 
EX|for reaction wheels we come up with control loss that'll show one example of then,where we come up with torque level control loss 
CD|cmgs as cover in NUMBER,we don't come up with motor torque level control loss 
CD|we come up with gimbal rates as mario is pointing out right 
CD|we want to take advantage of that gyroscopic torque as we twist 
CD|so we command a twist rate and then you have a sub server system that implements that twist rate 
CD|but that's bunch of lectures in the future 
CD|so this is the classic equation of motion of a wheel,of the spacecraft with a single reaction wheels 
CD|but oriented in a very general way,gs,gt,don't have to line up with one,two and three like we did with the dual spinner 
CD|that's what you'd end up with in there,so good 
CD|now that's a single device 
CD|if you do a single cmg,that's really not much,as you guys mentioned earlier,this one term vanishes,but you're left with everything else 
CD|this is still the form that we use because we don't solve for the motor torques,we don't back substitute here 
CD|in fact,this is the term that gives us the huge gyroscopic effect 
CD|the big omega times the small gimbal rate,which is still a very big torque acting on it 
CD|so,in fact,to control the valves of this you find they come up with laws to come up with these desired gimbal rates to give you all the commanded steering and gyroscopics 
CD|but this is the full torque level solution 
CD|now we've done single vscmg devices 
CD|typically you don't fly a single one,we fly clusters of four at least with vscmgs,with reaction wheels you may have three,four 
CD|you've seen some with six and more 
CD|just depends on,you might use more than three for redundancy but also maybe for torque 
CD|maybe a single wheel that you can get off the shelf gives you one newton meter,but your maneuvers require one and a half newton meter 
CD|so you may double up on the wheels just to get more bang there 
CD|so we have to deal with clusters,systems of them 
CD|and in essence everything we've done still holds 
CD|it just comes down to book keeping problem if you have multiple wheels 
CD|then where we had one wheel,that is going to be a gsi,right 
CD|the first gs axis,the second gs axis 
CD|the same thing for the transverse and the gimbal,everything has through n. and there's some convenient projection matrices where'm just making a three by matrix of the NUMBER of cmg devices,all the projections calculated 
CD|this inertia,it was before the hub plus the single vscmg,now list a hub plus a summation of all those,all right 
CD|so we just carry out that kind of a calculation 
CD|and the rest of the gyroscopic terms have grouped this into these tau vectors 
CD|those are the gyroscopic terms and within them they're OMITTED by ones you will see 
CD|each one of these torques acts about gs1 through gsn axes 
CD|and then the gt1 through gn axis,and the gg one to the ggn axis 
CD|so it allows you to write in a little bit more compact way,this way whereas before,we had gs times all those terms 
AP|if you did it like this,it would take you probably two pages to write out every single term 
AP|so it allows you to cheat a little bit,and just use some substitutions and notations to simplify 
AP|so if you can do one wheel,really doing multiple wheels is just a bookkeeping problem 
AP|all the hard part is done,now just want to have a nice bookkeeping method 
EX|what we can look at for examples too is kinetic energy 
CD|we have the kinetic energy that the hub,great,and then you got the wheel 
CD|it has a spin rate relative to the body and the wheel also can gimbal 
CD|so if you just go back and look at omega relative to,it has both big omega and gamma down in there 
CD|its inertia,the combined inertia system,you can write this all out,that's the kinetic energy 
CD|the beauty and you guys aren't doing it in this class,NUMBER gets to do this fun 
CD|but you take the derivatives of this,plug in the equations of motion,lots of algebra later 
CD|you come up with the same looking power equation that we've had before 
CD|we've solved this power equation and just for the rotational part you proved that omega dotted with was the power that you have 
CD|if an external torque is acting on it 
CD|so the way you want to look at this though,this is kind of called the work-energy principle 
CD|this torque is the torque that acts on the body relative to inertia 
CD|you're pushing off with thrusters,you're really pushing off inertial space,so to speak with that 
CD|omega is body relative to inertia 
CD|big omega here,that's the wheel speed of the wheel relative to the gimbal frame 
CD|us is the motor torque acting between the wheel and the gimbal frame 
CD|little gamma dot is the angular velocity between the gimbal frame and the body 
CD|and ug is the torque acting between the gimbal frame and the body 
AP|this patterns holds,and you'll see this in a lot of analytic dynamics text materials 
AP|once you've recognized it and know how it gets there,instead of taking this derivative and getting there it's really powerful 
SM|saves you lots of days of algebra 
CD|but anyway,so we have a nice power expression even for the really complicated multi vscmg equation 
SM|we don't do much with it in this class,but other classes you might see them 
CD|so the next step is now let's we did the equations of motion for a single reaction wheel 
CD|if we apply the same principle,we have this irw,instead of we only have to account for the transverse and gimbal axis directions of the wheel inertia in this irw 
CD|but instead of just one,we have OMITTED of them 
CD|so it's just a summation again,right 
CD|we have this OMITTED vector 
CD|we saw this OMITTED vector with a dual spinner 
CD|at some point defined the momentum of the second,the dual part,relative to the body like that 
CD|and that's also appearing here 
CD|this is kind of a common notation 
CD|and you put this all together,with a little bit of algebra,it's not much 
CD|you can write now your equations of motions and nice matrix form where us is the stack,the OMITTED by of all the motor torques 
CD|and then you can get out of this your angular rate of acceleration 
CD|the nice thing about this form is OMITTED don't have big omega dot showing up anymore 
CD|OMITTED mean once OMITTED know what the motor torques are,l essentially decoupled these two differential equations 
CD|OMITTED can get omega dot directly 
CD|and that same motor torque you applied to the motor torque equations,and then you know now what big omega dot is 
CD|you substitute it in as a known and you get your big omega dots,the wheel acceleration 
CD|so this gives you a way,we've kind of analytically one way solved the sets of equations 
NL|that's good 
CD|so that's if you have a system of them 
CD|popular configuration of gs,that's all the projection axis is you line up 
CD|the first wheel with b1,the second wheel with b2 and the third wheel with b3 
CD|in that case,this projection matrix is nothing but right 
CD|and then the gs just drop out and you end up with this form 
SM|but this form is nice because if you even try to do it perfectly with b1 what if you're off by a degree or two 
SM|this form allows you to solve it in a much more general way without that perfect alignment assumption 
SM|but that's a differential equation where we do control we'll use this particular differential equation,and come up with a control development to do stabilizing that you'll see 
CM|let's derive the equations of motion of a rigid body 
CD|we know how to describe the orientation of a rigid body 
CD|we have euler angles,we have dcms 
CD|we've got and crps,mips 
CD|all these things and we always have differential equations and how they relate back to omega 
CD|if the omega is not just prescribed or measured,if you really have a free tumbling body 
CD|you kick off the satellite from the rocket 
CD|what happens as it gets released 
CD|need to be able to mathematically predict how omega will evolve,and that means need to find differential equations for omega 
CD|and what we're going to use always,for translation,we use OMITTED equals ma essentially 
CD|that's what it boils down to,that's one of the forms 
CD|here,for rotation,we always go back to dot equal to l. and so,here,is taken about the center of mass 
CD|so,we know dot equal to holds 
CD|and is the torque 
CD|about of all the extra influences about the center of mass of the system 
CD|so okay if we know it's the inertia derivative of that is equal to this equal to this torque 
CD|so we have to be now a little bit careful in how we derive this 
CD|chosen to take a body relative derivative of this plus now,have two omega b,relative to n,crossed with that OMITTED vector again,right 
CD|the transport theorem isn't just for positions and velocities and so forth 
CD|it's true for any vectorial quantity that you're differentiating,as seen by a rotating frame 
CD|angular momentum counts as also a vector 
NL|so this is true 
CD|now why did we choose to do the body frame derivative of this 
CM|if we do this,and just use chain rule,we know OMITTED we defined as being the inertia about point OMITTED times omega 
CD|so that's two terms 
CD|and taking the time derivative of this chain rule,right 
CD|you get the derivative of the first term plus the derivative of the second term with the right multiplications 
CD|that's good,now it says this is going to become equal to i omega dot 
CD|there's two steps in this one little equal sign 
NL|what happens to this part 
CD|what happens to body frame derivative of the inertia tenser 
NL|jordan 
CD|finishes 
CD|why 
CD|constant in time 
CD|so even if this thing is tumbling and spinning and going through space as seen by you inertial observers 
CD|the mass distribution keeps changing 
CD|this point is here,it's up,it's left,it's flat,it's all over the place right 
CD|that's why doing this derivative on any inertia tensers inertia frame you can do it 
CD|but it becomes a time varying quantity and you have to track all this stuff 
CD|and it gets harder 
CD|whereas the derivative of the inertia tensor as seen by the body frame is trivial if it's rigid 
CD|because in the mass distribution,as seen by myself,if'm rigid and'm rotating and doing stuff,that mass distribution is exactly the same 
CD|and this is going to vanish 
CD|if you had a deployable mass,you slowly having your solar panels from your cube sat and doing something 
CD|then some servos that are moving them out 
CD|well then you would have body relative derivatives and that's the point where you include extra terms,all of a sudden,into these equations 
CD|that's what gives you those extra stuff 
CD|so good,so that term vanished 
CD|now here,this dot,lewis,implies what type of derivative 
CD|it implies an inertial derivative 
CD|here it's a body frame derivative 
CD|so how did go from a body frame derivative to inertial derivative 
CD|make the vectors consistent between the two 
CD|right,this isn't omega of OMITTED relative to n. so therefore,the OMITTED framed derivative and the OMITTED framed derivative have to be the same 
CD|that's the one vector where you find this kind of stuff,where the derivatives between the two frames is the same if it's the angular velocity between the two frames 
CD|because the omega cross product term always goes to 
NL|exactly 
AP|so,if you want to be careful,show all these steps 
AP|in an exam don't just go from here and that's clearly this 
AP|you can be missing points 
AP|want to see all these sub steps 
CD|argue every case as you understand,this is why this goes to zero here 
CD|and argue correctly why this other one goes to this,right 
CD|so,good 
CD|so,the body around this derivative is just going to be i*omega-dot 
CD|plus this cross-product term 
NL|so,we're almost there 
CD|now,you put this together and you get this differential equation 
CD|put this cross-product,h=ic,so have omega cross is the same thing as omega two the h. that's essentially how we got to this last step 
CD|took it over to the right hand side,so have i omega that is equal to minus omega til the i omega plus OMITTED c. that's the classic orders rotational equations of motion 
CD|this is what predicts now,in your integration,how does my omega evolve in time 
CD|and for a rigid body,tumbling like this,there's two aspects 
CD|one is,this is a gyroscopic 
CD|and you notice,it's omega and omega,so it's omega squared,is essence 
CD|and it's a second order term 
CD|if you look at linearized departures,you miss all of this stuff,it just vanishes 
CD|so,this is the quadratic,this is your gyroscopics and you'll see different ways this manifests itself 
CD|the other part is our external torque,and that's it and it looks really simple 
CD|why did this become so hard so quickly sometimes 
CD|well,we'll talk about different ways to write this 
CD|this form,we have a nice,generic i 
CD|so,we can have a principle coordinate frame as we talked about earlier 
CD|or we can have any body fixed frame 
CD|this can be a regular by it will work,all right 
CD|so,this is a very general format 
CD|so in your integration,would recommend this is the equation you should implement because that way you're solving always the most general case and the easier cases become sub classes of that 
NL|if you pick,sorry jordan 
NL|quick notational question,you have sub scripts on OMITTED and OMITTED but you don't have them on i 
NL|yeah 
NL|is that purposeful 
NL|or wouldn't you crosstalk 
NL|just lazy 
NL|same point 
NL|was just lazy 
NL|okay 
CD|if you want to keep track of them,this has to be the inertia about point in this case 
CD|if you wanted to keep track of that 
CD|for these kind of rigid body dynamics,people very quickly drop them and it's just implied 
CD|but it's a subtlety 
CD|if you have multi body stuff and you take in moments and torques about you know,there's a different body fix point,there's a docking port point 
AP|definitely keep track of those suckers,because it's easy to get it mixed up when you're adding these things 
CD|so here just dropped it out of convenience,this is,you see this a lot actually in the notations,they don't declare themselves as being lazy,but sound don't care 
NL|okay,so we have this 
CM|now,let's say we have a principal corded frame 
CD|as we were hearing earlier,that means all the matrix representation of this tensor will just have diagonals 
CD|lots of off diagonals go to zero 
CD|and the same thing here 
CD|so,omega omega will just become i1 omega,i2 omega,i3 omega 
CD|really simple 
CD|and then that NUMBER to the omega,you carry out this math and you up with these equations 
CD|so,these are equivalent to these equations,this just assumes've chosen principal axes of the body 
CD|whereas this allows for any body fixed axises 
CD|so,yes integration wise this is what you use 
CD|but,in analysis we often find it much easier to just look at this 
CD|and in fact we will be using these equations a lot here coming up 
CD|the torque free motion and discuss different things 
CD|so,you can see the classic kind of results and, is basically,this is all taken in a body fixed frame that's principle 
CD|so,these are the same vector components with respect to that frame and then we go 
EX|so,you can see now for example,if you have a axis symmetric body,we talked earlier about different shapes 
EX|because if you have a cylinder,a rocket body,a lot of things in space tend to be barrels because everything fits in a rocket 
CD|well the rocket itself is kind of a barrel shape,it has an axis of symmetry 
CD|in that case two principle inertias will always be equal 
CD|so since in here the gyroscopics are all these differences of two principle inertias you know right away inaudible metric bodies one of these gyroscopic terms is going to vanish right and that's an insight to have 
CD|we'll see this in a few cases that we'll look at 
CD|now let's talk about how to integrate these things 
CD|one question have for you is,does,we've derived differential nematic equation,just mrps 
CD|we know sigma odd is equal to one over four OMITTED times is omega vector right 
CD|so omega appears defiantly going to need that 
CD|otherwise we just need sigma here,need omega,omega,the inertia,it's a rigid body so with relative to frame,this is a fixed inertia tensor 
CD|and then,you have external torques 
CD|nowhere in here do you see sigmas,or quaternions,or any attitude measure 
CD|so if have two differential equations,the question then becomes can you integrate just omegas first and then do the attitude 
CD|or should you aways be integrating omegas in attitudes simultaneously 
CD|sound,see some wrinkles now,okay,good 
CD|can we do it 
CD|the sigma starts omega 
CD|so,you know you can't do sigmas first,but could do omegas first,integrate forward and then use that answer and then separately integrate omegas 
NL|what do you think 
NL|andre 
NL|'d say simultaneously 
NL|because 
NL|but you delivered the question 
NL|know 
NL|laugh hopefully you're good enough at by now where you know'm asking you a trick question 
CD|and,the gut feeling probably is know simultaneous should definitely work 
CD|separating,now you need to argue a defense why was that valid,right 
CD|there's simple answers,definitely 
CD|would also do it simultaneously,but why 
CD|is it ever okay to just integrate omegas 
CD|and then do that 
NL|daniel 
CD|don't have torques 
NL|okay 
CM|torque free motion 
CD|if have torque free motion,don't have my that works only here 
CD|if don't have the torque,absolutely 
CD|you could just integrate omega 
CD|now in my codes,let me just say upfront,always do it simultaneously 
CD|just,that's the most general answer,right 
CD|and don't want to write code for these cases when have no torque or here have torque 
AP|if do them simultaneously,it doesn't matter if have torque or not 
AP|but absolutely,you could do that but let's say we do have torque 
CD|have some thrusters firing 
CD|there's two thrusters,four thrusters,they're firing 
CD|they're producing a torque 
CD|can you still integrate the omegas first and then apply them to the sigma dots 
CD|need to have a situation where your angular rates aren't coupled to your actual angle,itself,right 
CD|well,yes,the angular accelerations we're worried about 
CD|it's omega dot 
CD|does omega dot couple with the angles 
CD|this will never make it couple with angles 
CD|this never makes it couple with angles 
CD|the only term that could make us couple with attitudes is this 
EX|my example with thrusters 
CD|if'm firing pairs of thrusters that produce a torque and spin it,does that matter now on the altitude 
CD|the thrusters are body fixed,so get this torque 
CD|if spun around,then thrust again,relative to the body,you always get in the same torque,it's actually just going to show up a bunch of constants,no attitude dependence that works 
CD|give me a torque that is attitude dependant 
CD|gradient 
NL|spencer 
NL|solo radiation pressure 
CD|solo radiation pressure 
NL|right 
CD|talking about atmospheric drag,those effects 
CD|gravity gradients 
CD|there's all these kind of disturbances,often environmental 
CD|all of a sudden,you need the attitude 
NL|and then,whoa,now it matters 
CD|when we do another thing inaudible as humans,we will be developing feedback control,and even the simplest form the torque,we come up with a thruster control torque,which is minus a gain times attitude error minus a gain time rate error or something very simplistic like that,right 
CD|and all of a sudden,through our algorithm,we're coupling in our attitude 
CD|because we want to point here,not just come to rest over here,right 
CD|and the thruster firings will be a function of attitude 
CD|so yes,so when you look at these things and it's a good phd prelim oral questions 
CD|there are ways we can one way decouple them and solve omega separately and doing that parallel as andre was saying 
NL|absolutely your gut feeling is right 
AP|that's probably the way it always will work and in fact that's how you should program it 
CD|and the way attitude couples into it,thought,is only through this part,which could be environmental effects like drag,srp,gravity gradient or also we could external torques 
CD|that's our control solution,all right 
CD|that's what's producing these things 
CD|and that's where attitude couples in as well 
CD|the duffing equation gets a little bit more interesting 
CD|so,'m just showing here OMITTED is equal to a unit a and a unit b,so just have,basically,x dot is equal to OMITTED double dot plus OMITTED plus OMITTED cubed 
CD|that's what'm simulating in this one 
CD|but,this gives me now that phase space plot we're talking about with the duffing equation,and there's a reversal of signs as well 
CD|this part would be stabilizing this part is actually destabilizing 
CD|that's kind of what we had with the omega two motion 
CD|that was that case,and this is the phase space 
CD|if these have opposite signs,your OMITTED double dot can go to zero if all the x's are zero,which is kind of makes sense 
CD|that's right here,and around it we get something that looks a lot like an oscillator equations,nearly circular stuff 
CD|but,you can also get an equilibrium if OMITTED is,you know,if OMITTED is equal to one,then you have minus one plus one cubed just still one gives you equal to zero 
CD|so,plus one is one and minus one 
CD|so,those are two equilibriums that we can read out from this phase space plot,that we can do 
CD|then,we can have some fun 
CD|we can play with this and make this a little bit bigger 
EX|so here,'m plotting the same phase space plot of all the possible,you know,lots of initial conditions 
CD|if you started up here,this is what would happen to your curves and'm plotting for a fixed amount of time 
CD|this is a way then can show you,numerically,the separatrix motions 
CD|we saw it in the video,those,that spinning handle,right 
CD|it hung out there for a certain amount of time,and then it went back to the other side,and came back 
CD|and,we talked about how you hang out near the separatrix motion,as you get there 
CD|so,here,what've got something is can put an initial condition and it quickly solves the differential equations,and shows me the resulting phase space motion 
CD|if put my initial condition up here,you know,starts very big 
CD|had a cube,an unstable cubic term,so that one would go off to infinity,as expected 
NL|right 
CD|if really,if have small departures,stable linear term keeps me stable but if get too far,at some point the unstable cubic will dominate 
NL|and that's what's happening 
CD|if reduce my integration time,you will see that curve gets smaller 
CD|so,you can see now what happens 
CD|here,mean,the linear part,'m just doing a fraction of an orbit 
CD|but,as start to get close to the separatrix motion,you can see don't get very far 
CD|i'd have to get really precise 
CD|so,as increase,i'm not exactly on it 
CD|but you can see as i'm increasing,that curve gets close and really hangs out there for a while,and eventually it moves back 
CD|that's precisely what we saw happening with that handle that the astronauts spun,right 
NL|it hung out there for a while 
CD|if could get more precisely on it,mean it is very very sensitive 
NL|if'm off,it hangs out there even longer 
CD|and if were perfectly on it,it would hang out there forever,and never quite get there 
CD|if you're off infinitesimally,and you go in a whole different place,right 
CD|and that's the definition of chaos,infinite sensitivity to initial conditions 
CD|you're smidgen to left,and you go off there 
CD|you smidgen right,you go somewhere completely different 
CD|that's why this is just a,hopefully,visual illustration of why we're talking about separatrix motions and the conditions 
NL|so,it's kind of fun to play with 
CD|but as we come in and have enough time to actually complete my phase space plots 
CD|i'm also showing speed in here somewhat,so as i'm coming in 
NL|don't need that 
NL|anyway 
NL|what was talking about 
CM|speeds 
CD|yes,this is showing something about the speeds 
CD|here you got green is faster,blues and purples is very fast,but once you come in,past the greens,yellows,so the reds that gets much slower again 
CD|if you're close to the equilibrium,you just have a nice slow,just a little bit of a wobble 
CD|and if you get close here you really slow down 
CD|but then around it,we speed up to flip back again 
CD|so this is just kind of a nice way to close out the torque-free motion part for a single rigid body 
SM|we've seen the video that illustrated it 
SM|we've seen up whole hold plots that do it graphically 
SM|we've seen mathematical formulations where we did the axisymmetric and general cases,and the different predictions that you can do about these different motions and how things behave 
SM|last time,we derived the equations of motion of a rigid body 
EX|i got little cube with me here,it's somewhat rigid right now 
CD|how do we find the equations of motion of a rigid body,spencer 
CD|before you read too much 
AP|you use super particle theorem on this center of mass because it's rigid,so the center of mass shouldn't be changing position 
CD|true,if you worry about the translational part 
CD|at this stage of the class,really as we're talking about rigid bodies,we're going to start just dropping the translational,for most of it 
CD|if not i will make it very explicit 
CD|so if i'm talking about the equations of motion,i'm really just talking about the rotational side of it 
CD|so how do we find the rotational side of the equation 
NL|what are we actually looking for 
CD|what's the variable 
CD|yeah,we're actually looking for omega dot,right 
CD|that's the,omega is already a rate information so omega dot is the acceleration 
CD|that's your angular acceleration 
CD|once we have it we can integrate it 
CD|so whereas translation have OMITTED equals ma,you go straight from forces to acceleration of your position description,in attitude we have this kinetics and kinematics always broken up 
CD|we have somehow added to coordinate rates related to omega,and then an omega dot relates to forces and torques and everything acting on it,right 
CD|so you have this clear split that you have to do 
CD|so here we're looking for the second part,the kinetics 
CD|what's the fundamental property,robert,that we use to drive this 
CD|OMITTED OMITTED which principle did we apply 
CD|conservation of angular momentum 
CD|why is it conserved 
CD|why is the rotational motion of a rigid body,why does it have a conserved angular momentum 
NL|because ansel,can you help him 
CD|it's torque free 
CD|if it's torque-free,but i didn't mention torque-free motion 
CD|so let's assume it has torque,what do we need then 
CD|how do we get to an omega dot 
CD|OMITTED,which principles do we use to get equations of motion 
CD|like OMITTED equals the derivative of OMITTED time,or plus,omega cross 
CD|okay,you've taken the derivative of it already,but what is the inertial derivative of the angular momentum of the system 
CD|the right hand side of l,there we go,right 
CD|so like OMITTED equals ma,this is good for a continuum if we have center of mass,or,and here implied if i don't write a sub c,it's always implied to be center of mass in this notation,right 
CD|so we can use OMITTED,the key features is,this dot has to be an inertial derivative,like OMITTED equals ma,those a's have to be the inertial acceleration 
CD|and this OMITTED is the net sum of all the external ports acting on the system,which right now we're just writing as l. later on,that could be gravity gradient torques,it could be drag torques,it could be control torques with thrusters,or something like that 
CD|many ways to break it up,good 
CD|so let's review quickly,this is going to be a good,what is OMITTED of a rigid body 
CD|all right,once we said this thing wasn't blob and jello and flexing,it's solid,what did OMITTED become 
NL|was it,OMITTED 
NL|not sure 
CD|what is angular momentum 
CD|go back to your sophomore level class,fixed axis rotation 
CD|what is angular momentum 
CD|is it the inertia times yes,inertia times what 
CD|the regular rate 
CD|yes,and this is the NUMBER version of that 
CD|i omega,right 
CD|review this stuff,otherwise,hour and NUMBER minutes you're not going to have time to remember such things,okay 
NL|we're getting up to that exam point 
CD|so if OMITTED is this,this is the inertia tensor,right,we talked about that 
CD|this is written as is in a coordinate frame independent way,you just have to make sure if this is in the OMITTED frame,this needs to be also in the same OMITTED frame 
CD|and this gives you the answer in a rotating frame and the OMITTED frame but you could pick any frame you wish 
CD|good,now we need to do OMITTED dot 
CD|so OMITTED actually already got us on this track 
CD|we need an inertial derivative and we choose to take a body frame derivative of h. i won't go all the details,we did that last time 
CD|this is just a review 
CD|why do we choose to do a body frame derivative 
NL|OMITTED 
CD|why is that going to make our life easier dealing with this term 
CD|let's break it up,you're going to have chain rule 
CD|you're going to have the body frame derivative of this tensor times omega plus the inertial tensor times OMITTED the anglular velocity 
CD|and that's not OMITTED dot,let me just,scratch that 
CD|we're just doing,we're choosing to do the body frame derivative of h. so OMITTED,why do the body frame derivative of i omega easier 
CD|because then the derivative of the inertia matrix is going to be zero 
CD|exactly,and see by the body,every point to here,if you just lock your arms out and you start rotating,as you're rotating that arm is always to your left 
CD|the mass distribution,all those moments you computed,and you got the inertia tenser,they're fixed,as seen by the body 
CD|as seen by you guys as i tumble an object,the mass distribution is clearly changing 
CD|so if you did the inertial derivative directly on this,you'd have lots of extra terms 
CD|you'd have to map it to the inertial frame,dcn,dcn dots,dcn dots OMITTED minus omega til dcs 
CD|and it all looks much more complicated,but it's the same simple answer 
CD|this ends up being,as seen by the body observer,it's NUMBER so that's why we do this,what happens to this derivative 
NL|anybody remember 
NL|what happens to that,yes 
CD|it's just omega dot,because it's the same inertial frame 
CD|because this is really,if i write omega,it's short for omega OMITTED relative to n. we're typically dealing with OMITTED and OMITTED for the next several weeks so this becomes much easier 
CD|the OMITTED and the OMITTED frame derivative are the same,the cross product always drops out 
CD|good,so if you do all this stuff,then OMITTED dot as OMITTED was pointing out,really ends up giving you i omega dot plus i have to do the transport theorem so i have an omega crossed OMITTED and OMITTED is i omega,and that's equal to l. there we go 
CD|is this only true for particular coordinate frames,or is this true for any frame 
NL|daniel,what do you think 
CD|an inertial frame 
CD|that's two frames 
CD|yeah,this is really written in a very frame agnostic way again 
CD|we haven't picked anything,we just solved it,like we did earlier with positions and angular velocities 
CD|they're just vectors,we can start adding,subtracting them without ever specifying where does el really point 
CD|once you want to get a numerical answer,well you have to resolve the geometry and have all the right stuff 
CD|and so this is kind of the same way,this is a very,like a vector 
CD|we have vectors and tensors but they're written in a frame agnostic way 
CD|and when you do the math,just make sure everything's in the same frame 
CD|especially when we get to the control side,we'll be doing this a lot 
CD|this is how we'll be deriving our controls,but when you code it,you have to go,wait a minute 
CD|this will make a r,that's coming in,that's in the OMITTED frame and this stuff is in the OMITTED frame 
CD|well then implied,you're going to have to do some translations 
NL|OMITTED 
NL|i was writing when you wrote it,OMITTED and i don't remember from last time 
CD|where does the second term in that OMITTED equation come from 
NL|this one 
NL|yeah 
CD|i need OMITTED dot equal to l. and basically what we do is,we take the body frame derivative of h,but i need the inertial derivative,so you need omega crossed OMITTED as well 
CD|and omega cross,h is i omega,and omega cross OMITTED is the same thing as omega tilde i omega 
NL|that's the form we typically see it 
NL|cool,thank you 
CD|and then that's l. so you can see,in exam this is something that shouldn't take you more than three minutes if you know what you're doing 
CD|but there's lots of subtleties,if you just jump to the answer,the answer's in the equation sheet you guys have 
NL|just giving me the answer will give you zero points in the exam 
CD|it's all about the path and the details 
CD|so make sure every time we go through this,hopefully more and more will sink in 
NL|make sure you get this stuff 
CD|so,good,now we have very specific frames that make your inertia tensor diagonal 
NL|trevor,what do we call such frames 
CM|principle frames 
CD|was principle coordinate frames,are there an infinity of principle coordinate frames 
NL|you say no 
NL|and you slow down 
CD|OMITTED well,for a particular application,for a particular rigid body,it'll be the same 
CD|so,here's a nice rigid body,are there infinity of principal coordinate frames 
NL|mandara,you think so 
NL|why 
CD|because we have one axis as they symmetry axis,we can have the other two in the plane orthogonal too 
CD|okay but if it's a cube 
CD|then all of them are see,all of a sudden,ooh,wait a minute 
CD|OMITTED if it's a cube what happens to my principle inertias 
CD|they're all the same 
CD|yeah,they're repeated 
CD|right,all these easy questions at NUMBER in the morning 
CD|OMITTED i need more coffee 
CD|okay,so if they're all the same,why does it make you hesitate all of the sudden 
CD|because the vectors,the uniqueness 
CD|yeah,then you have to kind of,the eigenvectors form different ways that you can map to there 
CD|you have to take a closer look at it 
CD|if it's a body,let's go to a simpler body 
CD|this one has three distinct inertias 
CD|it's definitely rigid,right 
CD|are you going to have more than one principle coordinate frame 
NL|bryan,you don't think so 
NL|i think you probably,yeah,i think you probably could 
CD|it depends on the symmetry of the object 
CD|this is it,i'm showing you the object,there's no more depends,it is 
CD|right,but if you take the moment of inertia around one of those principal axis,negative moment of inertia on the other one 
CD|right,for every body,it doesn't actually depend on the shape,every body has at least some principal axis that will diagonalize it 
CD|and maybe an infinity,if it's a cylinder,that's kind of what you guys are thinking of,if it's a cylinder,there's definitely an infinity of ways that you have it 
CD|but if you have even three discrete ones like this,or it's something very amorphous it will still have three principal inertias,principal axis 
CD|but when you pick those eigenvectors,you remember wait a minute,i can have a positive direction but who says this isn't your principle axis 
CD|maybe you want a frame the points towards the tail because that's where your docking porter is or you want to port towards,find the points towards the nose because this is a flight frame and you kind of worry about where you're flying 
CD|there's immediately,well there's two options and then there's another one and so there's a kind of permutation you can go through,there's an infinity of principle frames that a general body would have 
CD|but there's definitely a finite set because you can always rearrange what's your first,what's your second,what's your third 
CD|and plus or minus,just always keep it right-handed,right 
CD|so yeah,there are several that we can pick and so if we look at that,we went through that actually 
CD|if this is diagonal,these simplify down to those three scalar equations we saw,and then we can do that 
CD|now,the last question we had we covered was integration 
CD|if you want to integrate the complete motion we have something and we give it a spin and it tumbles 
CD|how do we now numerically solve this 
CD|tosh,help us out,how do we now write an integrator for a complete NUMBER attitude dynamics 
CD|so you'd look at your omega dot and OMITTED 
CD|but besides omega dot,what else do you need 
CD|what describes the full attitude state of a rigid body 
CD|i guess,OMITTED general forces 
CD|nope,i'm asking for what describes,what coordinates do you need to fully describe the orientation of a rigid body 
CD|there's no other answer but mrps,i would say 
CD|not mrps,it was a good answer,definitely 
CD|OMITTED thanks for sucking up,i appreciate it 
CD|OMITTED so you need an attitude measure,right 
CD|just like if you have OMITTED equals ma,spring mass to amperes system,think back to that form 
CD|okay,we've got OMITTED double dots,that's nice 
CD|but i have,every integrator writes these things back into first order form 
CD|so you define that OMITTED is equal to x,and x2 is equal to OMITTED dot 
CD|and then OMITTED dot is equal,and you just do that classic stuff 
CD|we have to do the same thing for attitude,it's just we have different equations 
CD|so we still need the attitude measure,that was the integrator you wrote earlier in these classes,right 
CD|so you had something for mrps or quaternion or whatever you wish to,some attitude measure 
CD|so that means you have a state vector that is going to be now a,if it's an mrp it's six by one 
CD|if it's a quaternion it's a seven by one,right,this is what we have to propagate forward 
CD|otherwise this is very much what you did before,you have your current states 
CD|then you compute OMITTED is equal to the derivative 
CD|so if OMITTED dot is equal to an OMITTED function,depending on these,all right 
CD|then the first order one would just give me what's the derivative of these states 
CD|and then OMITTED is OMITTED OMITTED times delta OMITTED. or you can do a fourth order on the cut out or whatever you wish to integrate,right 
CD|it's the same integration that you're doing in those problems,you're just expanding now,now we have to keep track of attitude and rates 
CD|now there was some discussion that we had regarding,could we integrate attitude separately from our kinetics equation,from our omega dot equation 
CD|so,nick,do you remember the arguments 
CD|how does attitude actually couple into this differential equation 
CD|OMITTED i guess you could single out the omega dot term 
CD|no,omega is the state 
CD|it's not,i guess i don't understand the question 
CD|how does attitude couple into this equation 
CD|does this differential equation depend on my instantaneous attitude 
CD|no,well,i was confident 
CD|it was very confident,i give you kudos for that 
CD|it was completely wrong,but it was very confident,absolutely 
CD|why does attitude couple into this,where,right 
CD|because omega that's just another state,that's not the coupling itself 
CD|it's a derivative of some stuff 
CD|the interia tensor,well,that doesn't really,i don't have different mass because i point differently 
CD|it's a rigid body,it doesn't OMITTED on the orientation 
CD|the only thing left is l,how does attitude couple into OMITTED 
EX|what are some physical examples of torques 
NL|daniel 
CD|some torques are added to it independently 
NL|yes 
NL|drag,srp 
EX|drag,srp,gravity,gradience,or even our feedback control,you will see very much,that's where it couples 
CD|so while there's instances where you could just solve for omega first and then solve for the attitude as you did kind of 
CD|i just gave you the omegas essentially in earlier homeworks,right 
AP|when you code it,i highly encourage just to avoid that,just give the general answer,it's simple enough to do 
AP|and you want to solve your attitude and your omegas all simultaneously 
AP|later on in class we can even add other stuff like reaction wheels or,that quickly moves to NUMBER,the follow on class 
NL|OMITTED 
NL|OMITTED excuse me,i have a question about that equation on the last page 
CD|so when you were just asking that question i was thinking that you were pointing towards the i's because this is an inertial derivative and the inertial frame i will change 
CD|but are these is constant because we derived it in the body frame 
CD|these are just tensors 
CD|i mean if you say constant i have to ask constant as seen by what frame 
CD|the inertia is not a matrix like a dcm,where it's just a three by three grouping of cosines that we picked,right 
CD|we could have picked something else 
CD|this is really fundamentally a tensor 
CD|which means just like a vector it,when you numerically evaluate it you have to pick a coordinate frame 
CD|so i just said look this been a completely vectorial thing i can take the body frames derivative of this and what happens then is,well the body frame derivative of h,and OMITTED is i omega 
CD|you break it up into two parts,right 
CD|here,i can immediately say this part is going to go to zero,which simplifies it 
CD|and this derivative body frame is the same thing as the inertial derivative,as we discussed 
CD|so this OMITTED OMITTED frame derivative becomes nothing but i omega dot,that's this part 
CD|could then,to get the inertial derivative,i have to add omega cross h,which is equivalent to here 
CD|so this gives me the answer but i've never actually picked a particular courting frame 
CD|remember when we're using transport theorem and we say we're taking the derivative of vector as seen by this frame 
CD|it doesn't mean you have to write that vector in that frame 
CD|often we have,that's why we've chosen that frame 
CD|here,we haven't chosen the OMITTED frame derivative because we have a particular coordinate frame,we've chosen a OMITTED frame derivative because as seen by the OMITTED frame,the mass distribution for a rigid body is constant and that derivative goes to zero 
CD|i think this was my confusion,no OMITTEDer was i is,it's constant 
CD|it's constant,exactly 
CD|for any shape with asymmetries and whatever's going on,this is always true,right 
CD|the only thing is,it's rigid 
CD|that's the single rigid body and now we have this in a very general way 
CD|you can see this looks suspiciously simple in undergraduate stuff we go through this very,very quickly 
CD|but then all this,there's all these layers of details that are on top of this that take a little bit more time to sink in,so,work with this 
