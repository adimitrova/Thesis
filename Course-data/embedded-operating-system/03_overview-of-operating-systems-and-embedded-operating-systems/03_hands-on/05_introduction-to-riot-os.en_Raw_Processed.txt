music 
hello, is good to see you back 
this lesson 
in previous videos we explored kontiki 
tanjores, features advantages 
going to address 
another type iot embedded os 
right, seen an example 
a micro current design 
first i will give you 
an introduction to riot 
i will discuss features 
advantages 
riot is an open source 
embedded operating system 
is designed networked 
memory constrained embedded systems 
primary focus is lowpower 
wireless sensor network systems 
internet things devices 
a result this, 
is made lightweight enough to satisfy 
requirements embedded devices 
limited processing capacity, 
small main memory storage, 
powered battery 
kernel riot first developed 
several european academic institutions 
in , later various companies, 
individuals universities 
riot 
applications written in ansi c 
riot implements a microkernel 
architecture, inherited fire kernal 
in addition to fire kernels original 
features, powerful c libraries as, 
wise leaf algorithm framework 
tcpip network stack added in to riot 
primly mentioned, riot is built 
networked memory constrained systems 
therefore needs to save memory 
reduce size 
in order to address this, 
riot is designed in a modular way 
also tries to limit dependencies 
between modules small possible 
in addition, configuration 
system customized to meet 
a particular specification, 
thereby minimizing size kernel 
instance, a riot kernel require 
small a few hundred bytes ram 
program storage 
another benefit modularity is 
effect bugs is 
limited in module 
similar to kontiki a bug in a module 
cannot mess whole system 
in contrast to many operating 
systems, write a scheduler 
works without periodic events 
consider a tickles scheduler 
one benefit this is, to switch to idle 
threat, there pending tests 
in addition, idle threat contains 
a function to decide this looping duration 
a device, system 
this decision is made, based 
peripheral devices in use, this 
gives advantage that system 
stay in sleep state long possible 
subsequently, energy consumption 
significantly minimized 
interrupts wake system 
idle state 
moreover, kernel functions 
kept small possible 
thus allowing kernel to run even a 
small systems low clock speeds 
scheduler is sign to minimize 
occurrences threats 
thereby reducing overhead switch 
questions related to interrupts may 
popped in main software 
instance, interrupts 
awaken system a sleep state 
this would get handled 
in order to give you answers 
questions, im going to 
explain interrupt handling in riot 
interrupt handling is an important 
part riot failure to handle 
interrupts well a serious impact 
performance system 
is known that device drivers 
common real time 
wireless network designed 
to directly use interrupts 
however using interrupts 
is straightforward 
example, 
in a preemptively scheduled system, 
interrupt is passed kernel 
context switching must carried 
switching to interrupt, 
context running task must saved 
you see, 
is complicated to work 
in order to help programmers 
achieve this easily, 
riot provides an api is similar 
to common sensor net programming model 
in addition, riot is built 
targeting lowest possible 
interrupt latencies so that real 
time requirements fulfilled 
similar to embedded wireless 
network operating systems, riot supports 
various types hardware 
bit msp bit arm server 
one benefits riot 
is small footprint 
requires less 
five kilobytes rom 
two kilobytes ram to run a basic 
wireless sensor network application 
compare to contiki, riot is better 
in terms required minimum ram 
rom a basic task 
another advantage riot 
related to portability 
is in using advance 
features processors 
instance, 
arm processors powerful 
provide many complex features 
like vector interrupt controller 
features may suitable 
embedded network oss 
however, riot utilizes, 
virtue separation cpu code 
kernel implementation 
riots kernel is built in target 
achieving maximum reliability 
strong realtime characteristics 
therefore, riot supports multithreading 
zerolatency interrupt handlers 
minimum contextswitching times 
in order to assist system developers 
take advantage really easily 
riot provides a developer friendly api 
another advantage riot is that 
is allows developers to create 
many threads possible 
in addition, distributed systems 
easily implemented 
using kernel messaging api 
maximum number threads is 
limited available memory 
size stack threads, 
while computational 
memory overhead is minimum 
similar to embedded 
network operating systems, 
riot supports different 
network protocols 
resource constrains systems 
lowpan rpl 
in addition, ipv, 
ipv, udp 
tcp also fully supported 
similar to kontiki, 
network stack in riot is also modular 
this gives flexibility to exchange 
protocol layers hierarchy 
in addition, 
an adaptation layer is provided 
that offers an ieee 
complete interface 
there many interesting things riot 
unfortunately we cannot 
discuss here 
in order to cover features, 
advantages riot 
learn to program in detail, 
i suggest you to go 
commentation in suggested materials 
ending this section, 
going to take a look 
classic helloworld example in riot 
in this example, hello world will 
printed to terminal device 
in order to know details 
to write a program 
run applications in riot, 
please come back to lecture 
detailed videos 
this lesson, we concluded 
embedded operation systems model 
i hope you enjoyed watching 
