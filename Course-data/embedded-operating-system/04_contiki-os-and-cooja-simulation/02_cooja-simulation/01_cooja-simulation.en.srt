1
00:00:00,025 --> 00:00:06,052
[SOUND]
>> Hello and

2
00:00:06,052 --> 00:00:09,830
welcome to the last
lecture of this module.

3
00:00:09,830 --> 00:00:14,660
In previous videos, we studied the main
structures of Contiki Core, and

4
00:00:14,660 --> 00:00:16,620
other important features.

5
00:00:16,620 --> 00:00:20,440
We are now going to cover the last piece,
the Cooja simulator.

6
00:00:21,730 --> 00:00:27,070
Cooja is a simulation software for
wireless sensor network applications.

7
00:00:27,070 --> 00:00:28,990
It works with Kontiki seamlessly.

8
00:00:30,070 --> 00:00:34,540
By using Cooja simulator,
wireless sensor network applications

9
00:00:34,540 --> 00:00:38,500
running in Kontiki can be
ported to different platforms,

10
00:00:38,500 --> 00:00:43,740
such as TI 2258, SECUduino,
and sit one mode.

11
00:00:45,130 --> 00:00:50,730
The simulator allows several libraries to
be loaded in the same Cooja simulation.

12
00:00:50,730 --> 00:00:55,550
For example, a large wireless sensor
network application can be formed

13
00:00:55,550 --> 00:01:00,170
from heterogeneous sensor nodes,
which vary in terms of hardware platform.

14
00:01:01,600 --> 00:01:05,950
In addition, Cooja provides
several features for analyzing and

15
00:01:05,950 --> 00:01:07,710
controlling a Contiki system.

16
00:01:09,280 --> 00:01:15,750
Cooja can be used for different OSs,
including Windows, Linux, and even Mac OS.

17
00:01:17,340 --> 00:01:22,329
The Cooja simulator is located in the
tools folder of your Contiki distribution.

18
00:01:23,690 --> 00:01:27,820
For convenience, I will continue
the discussion with the latest version,

19
00:01:27,820 --> 00:01:30,240
which is Contiki 3.0.

20
00:01:30,240 --> 00:01:33,480
However, please note that all steps and

21
00:01:33,480 --> 00:01:37,100
commands performed here
are similar in Contiki 2.7.

22
00:01:37,100 --> 00:01:43,590
You start the Cooja simulator with the
following commands shown in this slide.

23
00:01:45,560 --> 00:01:49,180
If the simulator does not start
after the second command and

24
00:01:49,180 --> 00:01:51,960
shows an error, don't panic.

25
00:01:51,960 --> 00:01:58,990
The problem is that in the newest version,
Contiki 3.0, the folder mspsim is empty.

26
00:02:00,410 --> 00:02:05,440
In order to fix this issue,
you have to download MSP from this link,

27
00:02:06,630 --> 00:02:08,760
and then follow the shown steps.

28
00:02:10,530 --> 00:02:13,950
Once Cooja opens,
you create a new simulation

29
00:02:13,950 --> 00:02:18,530
by choosing File > New simulation.

30
00:02:18,530 --> 00:02:23,070
This opens a window to create a new
simulation, as shown in the slide.

31
00:02:24,840 --> 00:02:28,790
There are several boxes that allow
you to fine tune your simulation.

32
00:02:30,120 --> 00:02:34,490
They have default values, but you can
also set your application's requirements.

33
00:02:36,120 --> 00:02:42,040
For most applications,
unit disc graph medium, UDGM.

34
00:02:42,040 --> 00:02:45,140
Distance loss is suitable for
radio medium.

35
00:02:46,680 --> 00:02:53,940
The delay to start a mode is
set in Mode startup delay(ms).

36
00:02:53,940 --> 00:02:58,820
Final setting is the seed for
random number generator in Random seed.

37
00:03:01,180 --> 00:03:03,120
When you finish the settings,

38
00:03:03,120 --> 00:03:08,020
click on create butter to have your new
simulation open as shown in this light.

39
00:03:10,660 --> 00:03:12,890
The interface has five windows.

40
00:03:13,970 --> 00:03:17,380
These are: the network window

41
00:03:17,380 --> 00:03:21,170
in the upper left corner shows
the network's physical layout.

42
00:03:22,730 --> 00:03:26,550
The Simulation Control window
in the middle top part

43
00:03:26,550 --> 00:03:28,500
is used to control the simulation.

44
00:03:29,850 --> 00:03:33,210
You can stop, start, and
reload the simulation.

45
00:03:34,760 --> 00:03:41,629
The Mote Output window at the center shows
any serial output generated by all motes.

46
00:03:43,490 --> 00:03:46,060
The Timeline window at the bottom.

47
00:03:46,060 --> 00:03:51,200
Shows events that occur on each mode
over the timeline of the simulation.

48
00:03:53,160 --> 00:03:57,440
And finally the Notes window
in the right side for

49
00:03:57,440 --> 00:03:59,310
temporary notes in the simulation.

50
00:04:01,770 --> 00:04:07,170
Let's now start to setup a whole
network of a single RPL border router.

51
00:04:08,540 --> 00:04:11,140
We start by adding single border router.

52
00:04:12,350 --> 00:04:16,790
To do this, go to Motes then Add Motes

53
00:04:16,790 --> 00:04:21,570
followed by Create New Mote Type,
and select sky mote.

54
00:04:23,020 --> 00:04:25,500
In this example we work with the sky mote.

55
00:04:27,360 --> 00:04:31,580
You can choose any types of mote depending
on your application's requirements.

56
00:04:32,920 --> 00:04:36,090
Remember to give the mote
type a useful description.

57
00:04:37,870 --> 00:04:40,873
Create border router and several nodes

58
00:04:44,292 --> 00:04:48,220
Now the slide shows a form for
creating a new mode type.

59
00:04:49,390 --> 00:04:52,150
Now, we will need to fill all the boxes.

60
00:04:53,210 --> 00:04:55,020
The first one is the mode name.

61
00:04:56,060 --> 00:04:59,520
In this case,
we set the name as border router.

62
00:05:00,930 --> 00:05:04,470
In the second box, we provide
the path to the source of the node.

63
00:05:05,670 --> 00:05:08,100
There are two types of
sources we can provide here.

64
00:05:09,240 --> 00:05:14,670
The first one is the source file in C,
and the second one is a compiled file.

65
00:05:16,060 --> 00:05:20,780
In this example, we did not
compile any source for a sky node.

66
00:05:20,780 --> 00:05:25,680
Therefore we provide a c source
file of the RPL for the router.

67
00:05:27,430 --> 00:05:31,690
Now, we can compile the source file
by clicking the compile button.

68
00:05:33,740 --> 00:05:37,310
It is recommended that you
click clean before compiling.

69
00:05:38,670 --> 00:05:40,630
When the compilation is successful,

70
00:05:40,630 --> 00:05:44,740
you can create a border router
by selecting the Create button.

71
00:05:47,150 --> 00:05:49,740
Now, a new window appears.

72
00:05:49,740 --> 00:05:52,880
You must fill all the empty boxes.

73
00:05:52,880 --> 00:05:55,520
It is also fine to leave
the default settings here.

74
00:05:57,190 --> 00:06:04,390
The only box that you must fill or edit is
the box labeled as number of new nodes.

75
00:06:04,390 --> 00:06:09,090
In our network we only need one
border router, so the value is one.

76
00:06:10,880 --> 00:06:16,270
After choosing av node, a single border
router node appears in the network window.

77
00:06:17,560 --> 00:06:21,820
We need to repeat these same
steps to create additional nodes.

78
00:06:23,000 --> 00:06:27,830
The only two differences are the source
for the nodes and the number of nodes.

79
00:06:29,080 --> 00:06:33,600
In this case, we provide
Caesar's file from the directory,

80
00:06:33,600 --> 00:06:34,950
which you can find on the slide.

81
00:06:36,750 --> 00:06:40,760
Please follow the detailed steps
in the slide to add more notes.

82
00:06:42,540 --> 00:06:46,580
Once everything is successfully
done you will see a total

83
00:06:46,580 --> 00:06:51,380
of six randomly placed notes on
the network window as shown in the slide.

84
00:06:52,610 --> 00:06:56,830
Out of the six nodes,
node one is the border router.

85
00:06:56,830 --> 00:07:01,160
And the rest are the nodes which
will execute unicasts sender code.

86
00:07:02,530 --> 00:07:05,390
Note that you can click, drag nodes, and

87
00:07:05,390 --> 00:07:10,089
locate them at your preferred location,
to create your own network topology.

88
00:07:11,680 --> 00:07:16,220
When you click on a node, it also shows
the radio environment in green and

89
00:07:16,220 --> 00:07:16,880
grey color.

90
00:07:18,490 --> 00:07:21,580
Please note that to have
radio enviornment and

91
00:07:21,580 --> 00:07:26,010
network traffic displayed, you must
choose these options in the View menu.

92
00:07:27,600 --> 00:07:30,540
Even though the network
layout is now set up.

93
00:07:30,540 --> 00:07:31,780
It is not jet complete.

94
00:07:33,010 --> 00:07:38,200
Before starting the simulation a bridge
with the rpl network must be created.

95
00:07:39,320 --> 00:07:41,090
The bridge is responsible for

96
00:07:41,090 --> 00:07:43,990
the connection of the local
network with the internet.

97
00:07:45,230 --> 00:07:49,170
It means that bridging helps
the border router become connective

98
00:07:49,170 --> 00:07:50,210
with the outside world.

99
00:07:51,550 --> 00:07:55,580
Subsequently IP address of
the border router can be pinged.

100
00:07:57,300 --> 00:08:00,570
We create the bridge using
the command shown on the slide.

101
00:08:02,430 --> 00:08:06,180
And the results should be similar
to those shown on the bottom.

102
00:08:07,790 --> 00:08:13,622
We verify this using a web browser to
connect to the router using this address.

103
00:08:15,090 --> 00:08:20,190
If you also get a results similar to
the one shown here congratulations,

104
00:08:20,190 --> 00:08:23,770
you have successfully
created an RPL network.

105
00:08:23,770 --> 00:08:28,794
I hope that after this video you can
simulate your own one application with and

106
00:08:28,794 --> 00:08:30,964
use it for a capstone project.

107
00:08:30,964 --> 00:08:33,644
With this video we conclude the module.

108
00:08:33,644 --> 00:08:35,647
I hope you enjoyed watching.

109
00:08:35,647 --> 00:08:39,918
[MUSIC]