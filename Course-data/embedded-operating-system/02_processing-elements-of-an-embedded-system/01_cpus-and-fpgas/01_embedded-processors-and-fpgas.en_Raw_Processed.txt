music 
hello, i hope you 
a general idea embedded systems, 
challenges that lie in this field, 
main characteristics 
in this lecture, 
we will go details components 
embedded systems consist 
we going to start 
discussing processing elements 
in course, 
we will cover embedded processors 
field program level gate arrays, fpgas 
so in end course, 
you capable selecting 
a proper processing element 
to implement ideas 
so here, i would like to start 
giving you ideas 
embedded processors 
netfpgas 
well, we discuss embedded 
processors first 
so is a processor 
is an electronic device 
that works sequentially 
this means that a processor makes 
computations in a serial manner, 
one another 
computation, 
matter difficult is, 
split simpler, 
lets say subcomputations 
subcomputations might 
split even 
an elementary piece computation 
that cannot split anymore 
is called an instruction 
piece computation, given lets 
say programmer, in order to 
executed a processor, 
split a sequence instructions 
different kinds processors 
different instruction sets 
different example, 
in number instructions 
lets say in complex simple 
instructions in sets 
so is good this approach 
there oboisily something 
good in since nowadays processors 
widely used 
good thing is flexibility 
nearly, piece computation 
represented a sequence instructions 
therefore executed a processor 
that means we change behavior 
an embedded system 
changing sequence 
instructions processor executes 
in words, 
we change software 
there is need to change 
architecture processor 
generality approach is 
reason is used massively nowadays 
lets think huge number 
applications that run on, 
lets say, cortex processors, 
present in smartphones, 
servers many devices 
one metric processors, mentioned 
before, is instruction set, 
actually defines inner 
structure a processor 
if we compared reduced instruction set 
computers complex instruction set 
computers, we will notice that 
cisc instruction set is larger 
complex instructions, so 
influence 
complexity hardware 
we going to go 
deeply details, 
least we conclude 
that piece hardware 
that codes instructions 
complex cisc 
one prominent representative 
sisk is intels x processors 
though in this course, 
we targeting this kind 
big general processors 
i could mention a kind 
embeddable processors 
example risc micro controllers 
if we look atmels avr family we 
will find a large variety options 
embedded applications 
advanced risc, arm processors, 
mentioned 
widely spread nowadays 
theyve arrived cortex m to 
cortex a family meant 
different application domains in 
terms competition performance, 
energy efficiency others 
in lectures, we will give 
details processors in general 
microcontrollers in particular 
so instructions executed, 
peripherals used, 
platforms exist, so stay in 
that you an insight 
nature an embedded processor 
is we move to second 
representative processing elements 
fieldprogrammable gate arrays, fpgas 
well, is course 
an electronic device, 
unlike a processor is meant 
application specific designs 
so mean 
first, lets a quick 
look an fpga is 
fpga reconfigured a logic 
to make a simple example, 
lets say we two input gates 
kind logic we implement 
we example use one gate 
implement a simple logic function 
however, we implement a complex 
circuit if we use gates 
connected output first gates 
to one inputs gate 
so, if a certain application demands 
use two gates, we use 
this is a simplified way to explain 
done an fpga 
an fpga many logic blocks in sight, 

needed, blocks connected 
together to build complex circuits 
connections, inner structure 
fpga to configured 
according to applications 
requirements execution 
so, we deal an fpga, 
we make changes a hardware level 
fpgas hardware design is meant 
certain applications 
you see that there 
is flexibility 
fpgas there is processors 
we need to change hardware design 
an fpga every time there 
is a new application 
there is flexibility 
reasonable question 
is use an fpga 
flexibility comes cost 
performance, energy consumption 
indeed, in cases, 
application implemented an fpga, 
executes faster consumes less energy 
if implemented a processor 
there is one thing one needs 
to consider working an fpga 
an fpga design is parallel in a sense 
that there is sequence operations 
things happen in parallel 
a good example is a four loop 
if loop is executed a processor, 
will run one iteration another 
however, if loop is 
implemented fpga, 
a separate surrogate 
iteration will generated 
in a sense, iterations exist in parallel 
you probably conclude 
that a fpga is meant 
computationally heavy applications 
example, 
image processing big data analytics 
is also interesting that an embedded 
processor implemented an fpga 
in this case, 
a processor is application 
there several fpga vendors 
available in market 
living one is xilinx, 
a wide variety devices 
different characteristics 
we will discuss main ones well 
inner structure an fpga in 
following lectures, so 
there interesting things ahead 
well, to sum video, i would 
like to emphasize main differences 
between a processor an fpga 
differences will impact 
choice selecting a proper platform 
to work 
a processor a sequential nature 
core provides flexibility 
whereas, an fpga is application 
oriented provides hydro performance 
if main goal is efficiency, 
an fpga would probably a good choice 
hand, if we need 
to build a generic platform, 
we either specific application 
many applications in mind, 
a processor would a suitable solution 
also is worth mentioning 
that sometimes optimal solution 
lies between two limits 
so a combination a processor 
an fpga may a powerful tool 
thank you watching, 
see you in next video 
sound 
