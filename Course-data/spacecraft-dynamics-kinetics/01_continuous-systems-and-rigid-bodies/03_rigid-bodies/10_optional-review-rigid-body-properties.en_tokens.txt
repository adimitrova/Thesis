if
we
make
it
rigid
.
we
've
already
jumped
ahead
a
little
bit
which
is
good
.
sometimes
just
rearranging
your
order
helps
things
sink
in
more
,
right
?
if
it
's
rigid
,
what
is
the
key
differentiation
?
so
sheila
was
on
the
right
track
earlier
that
it
's
all
about
these
derivatives
,
especially
this
little
r
dot
.
and
if
it
's
rigid
,
then
the
derivative
of
this
vector
as
seen
by
the
body
frame
has
to
be
0.
so
you
just
end
up
with
omega
cross
r
,
right
?
if
it
's
not
rigid
,
then
this
little
mass
particle
is
maybe
deploying
,
it
's
moving
,
it
's
wobbling
,
it
's
doing
something
.
and
you
have
extra
turns
.
that
's
,
in
fact
,
what
you
'd
have
to
include
.
now
you
plug
this
in
,
and
we
only
focus
about
this
one
.
you
can
separate
this
also
for
rigid
body
,
like
this
plus
this
other
term
.
i
'm
not
going
to
do
that
here
.
but
in
the
end
,
the
angle
momentum
about
the
center
of
mass
ended
up
being
this
minus
r
tilde
,
r
tilde
,
dm
times
omega
.
what
did
we
call
this
big
bracketed
term
here
?
>
>
is
that
the
inertia
tensor
?
>
>
that
's
the
inertia
tensor
.
and
i
like
using
the
word
tensor
versus
matrix
,
because
there
's
a
difference
.
we
have
a
position
vector
but
then
we
use
a
matrix
to
define
the
vector
components
with
respect
to
some
frame
.
so
the
matrix
represents
a
vector
but
the
vectors
you
can
fundamentally
just
add
vectors
and
add
arrows
and
you
do
n't
have
to
assign
frames
.
same
thing
here
.
now
in
this
tilde
notation
,
this
is
basically
the
cross
product
operator
which
will
be
the
vector
equivalent
of
it
,
right
?
you
have
to
make
sure
that
r
tilde
.
you
have
to
take
this
vector
,
r
,
with
respect
to
some
frame
,
the
b
frame
,
as
an
example
.
this
would
be
in
the
b
frame
,
that
's
what
you
measure
.
now
it
's
apples
and
apples
and
you
can
do
all
your
matrix
math
.
you
would
n't
have
this
in
the
c
frame
and
this
in
the
b
frame
.
and
then
you
'd
be
mixing
frames
and
it
just
would
n't
work
out
well
,
all
right
?
so
we
have
to
do
the
integration
by
picking
a
body
frame
and
then
we
get
this
.
and
also
little
r
is
defined
relative
to
this
body
's
center
of
mass
.
that
's
how
we
defined
little
r.
what
if
we
have
a
different
point
?
maybe
this
thing
is
n't
spinning
about
its
center
of
mass
,
but
it
's
pivoted
to
an
end
of
an
arm
,
and
it
's
pivoting
like
this
.
all
of
a
sudden
,
i
need
the
inertia
about
this
endpoint
,
not
about
the
center
point
,
right
?
do
we
have
to
redo
this
integration
over
and
over
again
?
no
,
right
?
so
there
's
formulas
on
how
to
do
this
.
this
,
in
essence
,
is
my
inertia
tensor
times
omega
.
so
written
like
this
,
treat
this
as
a
completely
coordinate-independent
formulation
.
when
you
're
actually
numerically
evaluated
in
some
program
like
matlab
or
c
or
something
.
you
have
to
make
sure
it
's
the
same
frames
.
but
when
we
derive
controls
,
we
'll
just
write
it
this
way
and
not
assign
frames
yet
.
that
's
the
bookkeeping
you
do
at
the
very
end
.
so
good
,
that
was
the
inertia
tensor
.
so
let
's
wrap
up
some
final
things
.
what
if
we
have
a
,
let
's
just
flip
the
order
.
let
's
do
attitudes
first
,
just
to
mix
it
up
.
what
if
we
have
a
different
orientation
?
you
have
the
inertia
tensor
given
to
you
in
b
frames
but
i
want
the
inertia
tensor
in
frame
components
.
i
do
n't
have
to
redo
all
those
body
intervals
again
.
once
you
have
them
,
you
're
good
.
>
>
do
you
have
to
left
multiply
and
right
multiply
?
>
>
okay
,
so
give
me
the
two
letters
of
each
dcm
.
>
>
[
inaudible
]
>
>
so
it
would
be
be
,
right
,
or
no
eb
,
sorry
,
backwards
.
>
>
wo
n't
let
me
erase
.
okay
,
eb
,
and
the
next
one
is
?
>
>
[
inaudible
]
>
>
or
b.
i
like
to
remember
it
this
way
actually
.
because
this
way
if
i
know
be
,
great
,
then
have
to
transpose
this
one
.
if
i
know
eb
,
fine
,
you
have
to
transpose
that
one
,
right
?
but
it
's
basically
if
this
is
in
the
b
frame
,
then
it
's
a
two-dimensional
.
think
of
tensors
like
two-dimensional
vectors
.
so
instead
of
using
the
dcm
once
,
it
's
a
2d
thing
,
you
have
to
use
it
twice
.
and
you
're
absolutely
correct
,
it
's
a
left
and
a
right
multiplication
.
and
when
you
bump
them
up
like
that
the
letters
b
should
match
up
.
this
is
all
on
the
b
frame
.
and
then
what
's
on
the
outside
everything
's
being
mapped
to
the
e
frame
and
you
get
a
inertia
tensor
in
the
e
frame
.
so
a
different
rule
of
mnemonics
trick
that
you
can
help
to
remember
this
stuff
.
definitely
use
it
twice
.
good
,
so
that
's
how
we
avoid
,
once
we
have
this
in
some
body
fixed
frame
,
we
can
easily
map
it
to
any
other
body
fixed
frame
.
i
will
use
this
trick
several
times
,
especially
when
deriving
variable
speed
,
c
and
g
equations
of
motion
,
and
so
forth
.
so
what
do
i
mean
by
a
principal
coordinate
frame
?
is
it
tosh
?
what
does
that
mean
?
>
>
the
[
inaudible
]
?
>
>
mm-hm
,
so
let
's
say
f
is
principal
.
so
what
about
the
diagonals
?
>
>
of
the
principal
.
>
>
let
's
just
call
this
i1
,
i2
,
i3
.
what
about
the
off
diagonals
?
>
>
they
're
0
.
>
>
so
,
they
're
0.
if
this
is
a
principal
frame
,
you
have
a
coordinate
frame
such
that
you
get
a
nice
diagonal
form
.
chuck
,
can
we
always
do
this
?
or
are
there
assumptions
on
the
shape
that
allow
us
to
do
this
?
it
's
a
rigid
system
.
>
>
yes
,
you
can
always
do
it
.
>
>
you
can
always
do
this
.
that
's
why
for
analysis
very
often
you
see
papers
or
even
our
own
stuff
.
we
need
to
start
out
with
assuming
it
's
a
principal
frame
.
because
instead
of
having
nine
elements
to
track
and
now
with
symmetry
it
's
actually
six
,
but
still
it
's
about
i
can
go
down
to
three
.
three
principal
inertias
fully
define
the
mass
distribution
of
a
system
.
without
loss
of
generality
we
can
always
do
this
.
in
the
code
,
though
,
we
typically
solve
,
actually
we
do
control
problems
that
include
the
full
tensor
.
because
in
real
life
they
will
never
give
you
the
mass
balance
.
you
may
start
out
with
a
frame
that
's
perfect
,
and
at
the
very
last
minute
astronaut
a
and
b
switch
places
,
and
next
thing
you
know
your
cg
's
offset
.
crap
,
my
inertia
tensor
's
now
fully
populated
,
darn
astronauts
!
so
there
's
always
something
.
so
in
the
code
,
we
want
to
have
formulations
and
controls
that
handle
any
inertia
tensor
.
but
we
want
to
also
realize
for
analysis
and
we
design
it
typically
they
're
diagonal
or
nearly
diagonal
.
the
off
diagonal
terms
might
be
very
small
.
we
want
to
have
solutions
that
work
for
everything
.
so
good
,
this
is
symmetric
matrix
from
the
definition
.
could
you
have
inertias
,
i1
=
800
,
i2
=
20
,
and
i3
=
50.
i
'm
just
using
generic
units
.
i
'm
not
throwing
in
anything
particular
,
they
're
just
consistent
numbers
.
is
that
possible
?
so
we
did
n't
discuss
,
i
'm
just
curious
.
everybody
here
has
seen
inertia
tensors
before
.
are
there
constraints
in
the
principal
inertia
values
?
you
find
lots
of
publications
that
they
publish
stuff
,
where
they
throw
in
inertias
like
this
.
and
as
an
editor
i
can
go
,
hey
,
wait
a
minute
.
this
is
a
non-physical
system
.
there
are
limits
to
how
different
your
inertias
can
be
.
in
fact
there
's
an
inequality
constraint
that
says
,
the
i
,
principal
inertia
+
the
j
of
principal
inertia
have
to
be
greater
than
or
equal
to
the
kth
principal
inertia
.
so
if
you
sum
any
two
of
them
,
you
have
to
be
bigger
than
the
third
,
whatever
the
third
is
.
and
if
you
go
,
and
let
's
just
look
at
that
.
here
we
go
.
if
you
look
in
this
,
this
is
the
i1
,
i2
,
i3
.
these
off
diagonals
are
all
0
,
right
?
so
i1
i
r2
squared
and
3
squared
.
this
one
is
r1
squared
and
3
squared
.
so
summed
up
,
i
get
r1
squared
2
squared
and
2r3
squared
.
compared
to
the
third
,
it
's
just
r1
squared
and
2
squared
plus
an
r3
squared
.
that
squared
term
can
at
best
be
0
,
which
means
they
're
equal
.
but
if
anything
else
,
it
's
going
to
have
to
have
something
bigger
,
all
right
?
so
when
you
set
up
inertias
,
be
careful
that
you
actually
use
a
realistic
example
where
the
sum
of
82
principal
inertias
has
to
be
bigger
than
or
equal
in
a
limiting
case
to
the
third
one
.
so
there
's
different
kind
of
properties
that
you
can
pick
up
here
.
so
good
,
we
have
that
.
now
we
know
how
to
do
this
.
how
do
we
go
from
,
what
's
the
relationship
?
if
you
have
a
regular
3x3
matrix
and
you
're
trying
to
find
the
principal
inertias
.
how
do
you
go
from
the
3x3
tensor
matrix
representation
to
the
three
principals
?
what
was
back
row
scratching
your
head
.
what
's
your
name
?
>
>
mark
.
>
>
mark
,
thank
you
.
>
>
can
you
repeat
the
question
please
?
>
>
sorry
?
>
>
can
you
repeat
the
question
please
?
>
>
how
do
i
go
from
a
3x3
inertia
tensor
representation
to
a
diagonal
?
how
do
i
find
the
principal
values
of-
>
>
you
have
to
find
the
eigenvalues
and
the
eigenvectors
.
>
>
exactly
,
right
?
so
you
have
to
find
eigenvalues
,
eigenvectors
of
the
system
.
and
the
eigenvalues
,
of
the
3x3
,
they
are
all
of
the
principal
inertias
,
that
's
cool
.
and
then
the
associated
eigenvectors
are
the
axes
of
that
principal
inertia
.
and
are
relative
to
the
body
,
it
turns
out
.
this
is
a
principal
axis
,
and
this
is
a
principal
axis
,
then
you
'd
have
a
third
one
,
right
?
now
are
these
eigenvectors
always
going
to
be
unique
?
jordan
,
think
of
a
cylinder
.
if
you
get
this
math
,
i
can
give
you
a
nice
3x3
matrix
of
a
cylinder
with
some
weird
skewed
frame
.
you
find
principal
inertias
.
if
it
's
a
cylinder
,
what
should
you
expect
now
,
all
of
a
sudden
?
>
>
expect
one
to
be
up
the
axis
and
two
to
be
in
that
,
in
any
plane
.
>
>
right
.
>
>
anywhere
in
that
plane
.
>
>
so
you
will
have
a
repeated
eigenvalues
set
orthoganol
to
the
symmetry
axis
.
the
inertia
of
a
cylinder
about
this
axis
or
this
axis
is
just
going
to
be
the
same
.
so
you
get
a
repeated
eigenvalue
.
and
the
plane
is
unique
in
that
case
,
but
not
necessarily
the
values
,
right
?
so
this
is
how
these
things
all
relate
again
.
and
these
matrices
are
symmetric
,
turns
out
they
're
also
symmetric
definite
because
the
principal
inertias
have
to
be
positive
.
you
would
never
have
a
negative
principal
inertia
.
it
just
does
n't
make
physical
sense
.
so
,
okay
,
so
good
properties
there
,
good
!
now
,
the
last
thing
we
want
to
review
is
,
what
if
we
have
a
different
point
?
we
have
the
inertia
tensor
about
c
,
i
want
the
inertia
tensor
about
a
point
q.
how
do
i
go
from
this
to
this
,
without
redoing
all
the
math
,
all
the
integration
?
kevin
.
>
>
you
need
add
,
the
mass
of
the
whole
body
times
,
just
like
the
vector
between
the
two
points
?
>
>
yeah
,
so
let
me
just
say
that
c
relative
to
q
,
they
're
close
.
it
's
usually
a
parallel
axis
there
,
right
?
if
you
do
it
for
1d
rotation
it
was
always
easy
,
it
was
something
the
inertia
about
the
center
of
mass
plus
the
distance
.
so
if
i
have
the
inertia
about
the
center
of
mass
,
i
want
the
inertia
about
this
endpoint
.
i
do
mass
times
distance
squared
,
it
's
squared
i
think
,
that
i
get
there
.
this
is
essentially
mass
times
distance
squared
,
and
this
is
the
distance
between
those
two
points
that
you
'd
have
.
it
does
n't
have
to
be
an
inertia
point
,
it
could
be
another
point
as
well
,
like
base
point
.
now
what
are
some
the
trickeries
in
here
?
this
is
typically
given
to
you
in
the
q.
let
's
say
this
is
your
spacecraft
queue
,
star
trek
,
right
?
anybody
remember
q
?
that
was
one
of
the
characters
in
there
.
so
in
his
spacecraft
,
q
lives
in
a
very
q-centric
world
.
so
this
rc
relative
to
q
is
usually
given
to
you
in
a
q
frame
.
this
stuff
is
probably
given
to
you
in
the
body
frame
.
now
before
i
actually
can
do
this
math
,
what
do
you
have
to
do
with
these
quantities
?
>
>
you
have
to
change
them
.
body
frame
to
q
frame
.
i
'm
sure
,
but
body
frame
to
q
frame
.
>
>
so
you
have
to
map
this
to
the
q
,
is
that
the
only
way
to
do
this
math
?
warda
,
or
is
there
another
option
?
you
could
,
because
this
is
n't
the
q
,
everything
is
kind
of
in
the
q
space
,
you
'd
have
to
make
this
into
q.
what
else
could
we
do
?
this
is
n't
a
b.
is
there
any
way
you
can
make
this
in
the
b
frame
?
tony
,
what
would
you
do
?
>
>
do
a
rotation
matrix
on
the
r.
>
>
you
can
also
just
say
,
well
,
so
i
know
this
in
the
q
frame
or
i
can
also
find
c
relative
to
q
in
the
b
frame
.
which
is
bc
times
r
c
relative
to
q
in
the
q
frame
,
right
?
if
you
did
this
now
you
plug
these
in
here
,
and
then
this
.
just
make
sure
it
's
consistent
.
i
did
n't
say
we
have
to
have
the
answer
in
b
or
q
components
.
you
can
do
either
.
well
,
you
can
do
one
and
then
map
the
answer
back
into
the
frame
you
want
.
that
works
as
well
,
if
it
's
a
third
frame
that
's
not
either
c
or
q
or
b.
so
you
can
see
lots
of
different
ways
this
goes
.
this
is
the
general
math
but
if
this
is
the
coordinate
independent
way
,
a
coordinate
frame
independent
way
to
write
it
.
when
you
evaluate
it
,
still
make
sure
you
have
all
the
right
stuff
.
otherwise
,
nothing
works
.
okay
,
good
.
