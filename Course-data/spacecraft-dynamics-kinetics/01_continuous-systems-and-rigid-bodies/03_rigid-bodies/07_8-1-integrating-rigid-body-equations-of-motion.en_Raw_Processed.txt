so, we want to integrate in a coupled way 
so, lets talk this you 
writing code like that 
lets use sigmas 
im using attitude 
explicit here right 
set stakes that i 
to integrate omegas 
so, going to put in 
an omega b relative to n 
so, code youve written earlier to 
integrate attitude rates 
even omega 
works, instead omega 
looked in a separate sine 
cosines function, 
computed every time step 
updated well 
so you to 
everything simultaneously 
x dot equals to f function 
f is basically first part 
is nothing sigma dot 
second part is omega dot 
thats you to find 
in code, you already this part 
so you know that based 
current omega, integration, 
thats fine 
this one, 
also depends current omega 
also needs inertia 
tensor representation 
needs to know external 
torques thats 
so you see you 
nice clean writings set 
dynamical systems, 
we easily expand 
later if we reaction wheels, 
we to keep track, 
extra states, 
cmgs, extra states 
you start expanding state vector 
you build prior work, 
that makes life much easier, okay 
questions this 
so, basic equations motion 
h dot equal to l you saw 
like two lines 
right arguments, 
you get equations motion 
in a general tensor form 
