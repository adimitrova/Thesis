if we make rigid 
weve already jumped ahead 
a little bit is good 
sometimes rearranging order 
helps things sink in more, right 
if rigid, 
is key differentiation 
so sheila right track earlier 
that derivatives, 
especially this little r dot 
if rigid, derivative 
this vector seen 
body frame to 
so you end omega cross r, 
right 
if rigid, this little mass 
particle is maybe deploying, moving, 
wobbling, something 
you extra turns 
thats, in fact, 
youd to include 
you plug this in, 
we focus this one 
you separate this also rigid body, 
like this plus this term 
im going to that here 
in end, angle momentum 
center mass ended this 
minus r tilde, r tilde, dm times omega 
we call this 
big bracketed term here 
is that inertia tensor 
thats inertia tensor 
i like using word tensor versus 
matrix, theres a difference 
we a position vector 
we use a matrix to define vector 
components respect to frame 
so matrix represents a vector 
vectors you fundamentally add 
vectors add arrows 
you dont to assign frames 
thing here 
in this tilde notation, this is 
basically cross product operator 
will vector equivalent it, 
right 
you to make sure that r tilde 
you to take this vector, r, 
respect to frame, b frame, 
an example 
this would in b frame, 
thats you measure 
apples apples 
you matrix math 
you wouldnt this in c frame 
this in b frame 
youd mixing frames 
wouldnt work well, right 
so we to integration 
picking a body frame we get this 
also little r is defined relative 
to this bodys center mass 
thats we defined little r 
if we a different point 
maybe this thing isnt spinning 
center mass, 
pivoted to an end an arm, 
pivoting like this 
a sudden, 
i need inertia this endpoint, 
center point, right 
we to redo this 
integration 
no, right 
so theres formulas to this 
this, in essence, 
is inertia tensor times omega 
so written like this, 
treat this a completely 
coordinateindependent formulation 
youre actually numerically evaluated 
in program like matlab c 
something 
you to make sure 
frames 
we derive controls, 
well write this way 
assign frames yet 
thats bookkeeping 
you end 
so good, that inertia tensor 
so lets wrap final things 
if we a, 
lets flip order 
lets attitudes first, 
to mix 
if we a different orientation 
you inertia tensor 
given to you in b frames 
i want inertia tensor 
in frame components 
i dont to redo 
body intervals 
you them, youre good 
you to left multiply 
right multiply 
okay, so 
give two letters dcm 
inaudible 
so would be, 
right, eb, sorry, backwards 
wont let erase 
okay, eb, next one is 
inaudible 
b 
i like to remember this way actually 
this way if i know be, great, 
to transpose this one 
if i know eb, fine, 
you to transpose that one, right 
basically if this is in b 
frame, a twodimensional 
think tensors like 
twodimensional vectors 
so instead using dcm once, 
a d thing, you to use twice 
youre absolutely correct, 
a left a right multiplication 
you bump like that 
letters b match 
this is b frame 
whats outside 
everythings mapped to e frame 
you get a inertia 
tensor in e frame 
so a different rule mnemonics trick 
that you help to remember this stuff 
definitely use twice 
good, so thats we avoid, we 
this in body fixed frame, 
we easily map to 
body fixed frame 
i will use this trick several times, 
especially deriving variable speed, 
c g equations motion, so forth 
so i mean 
a principal coordinate frame 
is tosh 
that mean 
inaudible 
mmhm, so lets say f is principal 
so diagonals 
principal 
lets call this i, i, i 
diagonals 
theyre 
so, theyre 
if this is a principal frame, 
you a coordinate frame 
that you get a nice diagonal form 
chuck, we always this 
there assumptions 
shape that allow us to this 
a rigid system 
yes, you always 
you always this 
thats analysis often 
you see papers even stuff 
we need to start 
assuming a principal frame 
instead 
nine elements to track 
symmetry actually six, 
still i go to three 
three principal inertias fully define 
mass distribution a system 
without loss generality 
we always this 
in code, though, we typically solve, 
actually we control problems 
that include full tensor 
in real life will 
never give you mass balance 
you may start a frame thats 
perfect, last minute 
astronaut a b switch places, 
next thing you know cgs offset 
crap, inertia tensors 
fully populated, darn astronauts 
so theres always something 
so in code, 
we want to formulations 
controls that handle inertia tensor 
we want to also realize 
analysis 
we design typically theyre diagonal 
nearly diagonal 
diagonal terms 
might small 
we want to solutions that work 
everything 
so good, this is symmetric 
matrix definition 
could you inertias, i , 
i , i 
im using generic units 
im throwing in anything particular, 
theyre consistent numbers 
is that possible 
so we didnt discuss, im curious 
everybody here seen 
inertia tensors 
there constraints in 
principal inertia values 
you find lots publications 
that publish stuff, 
throw in inertias like this 
an editor i go, 
hey, wait a minute 
this is a nonphysical system 
there limits to 
different inertias 
in fact theres an inequality 
constraint that says, i, 
principal inertia j principal 
inertia to greater 
equal to kth principal inertia 
so if you sum two them, 
you to bigger third, 
whatever third is 
if you go, 
lets look that 
here we go 
if you look in this, 
this is i, i, i 
diagonals , right 
so i i r squared squared 
this one is r squared squared 
so summed up, i get r squared 
squared r squared 
compared to third, r 
squared squared plus an r squared 
that squared term best , 
means theyre equal 
if anything else, going to 
to something bigger, right 
so you set inertias, careful 
that you actually use a realistic example 
sum principal 
inertias to bigger 
equal in a limiting case to third one 
so theres different kind 
properties that you pick here 
so good, we that 
we know to this 
we go from, 
whats relationship 
if you a regular x matrix 
youre trying to find 
principal inertias 
you go x tensor matrix 
representation to three principals 
back row scratching head 
whats name 
mark 
mark, thank you 
you repeat question please 
sorry 
you repeat question please 
i go a x inertia 
tensor representation to a diagonal 
i find principal values 
you to find eigenvalues 
eigenvectors 
exactly, right 
so you to find eigenvalues, 
eigenvectors system 
eigenvalues,of x, 
principal inertias, 
thats cool 
associated eigenvectors 
axes that principal inertia 
relative to body, 
turns 
this is a principal axis, 
this is a principal axis, 
youd a third one, right 
eigenvectors 
always going to unique 
jordan, think a cylinder 
if you get this math, 
i give you a nice x matrix 
a cylinder weird skewed frame 
you find principal inertias 
if a cylinder, 
you expect now, a sudden 
expect one to axis 
two to in that, in plane 
right 
anywhere in that plane 
so you will a repeated eigenvalues 
set orthoganol to symmetry axis 
inertia a cylinder this axis 
this axis is going to 
so you get a repeated eigenvalue 
plane is unique in that case, 
necessarily values, right 
so this is 
things relate 
matrices symmetric, 
turns theyre also symmetric 
definite principal 
inertias to positive 
you would never 
a negative principal inertia 
doesnt make physical sense 
so, okay, so good properties there, good 
now, last thing we want to review is, 
if we a different point 
we inertia tensor c, 
i want inertia tensor a point q 
i go this to this, without 
redoing math, integration 
kevin 
you need add, 
mass whole body times, 
like vector 
between two points 
yeah, so let say 
that c relative to q, 
theyre close 
usually a parallel axis there, right 
if you 
d rotation always easy, 
something inertia 
center mass plus distance 
so if i inertia 
center mass, 
i want inertia this endpoint 
i mass times distance squared, 
squared i think, that i get there 
this is essentially mass 
times distance squared, 
this is distance between 
two points that youd 
doesnt to an inertia point, 
could another point well, 
like base point 
trickeries in here 
this is typically given to you in q 
lets say this is spacecraft queue, 
star trek, right 
anybody remember q 
that one characters in there 
so in spacecraft, 
q lives in a qcentric world 
so this rc relative to q is 
usually given to you in a q frame 
this stuff is probably given 
to you in body frame 
i actually this math, 
you to 
quantities 
you to change 
body frame to q frame 
im sure, body frame to q frame 
so you to map this to q, 
is that way to this math 
warda, is there another option 
you could, this isnt q, 
everything is kind in q space, 
youd to make this q 
else could we 
this isnt a b 
is there way you 
make this in b frame 
tony, would you 
a rotation matrix r 
you also say, well, 
so i know this in q frame 
i also find c relative 
to q in b frame 
is bc times r c relative 
to q in q frame, right 
if you this you plug 
in here, this 
make sure consistent 
i didnt say we to 
answer in b q components 
you either 
well, you one map 
answer back frame you want 
that works well, if a third 
frame thats either c q b 
so you see lots 
different ways this goes 
this is general math 
if this is coordinate independent way, 
a coordinate frame 
independent way to write 
you evaluate it, still make 
sure you right stuff 
otherwise, nothing works 
okay, good 
