okay, our next topic is desktop icons.
and what we will introduce here is called bubble clusters.
so the topic we discuss here, is a management of desktop icons.
so, suppose you have a desktop and the one possible way, the organized desktop is viewed special aggregation or special clusters.
so, you put system icons here and shortcuts here and some documents here and documents on other topic here.
so, this way people can manage, various information in limited space.
however, a program is at this kind of visual cluster.
is not comprehensible from a computer.
so they're just icons for a computer's point of view.
so, whenever you have, you walk on this kind of a layout, you have to explicitly select group of objects.
so, that's one problem.
another problem is that you have to, if you put too many icons in a same location, it can cause a cluster.
and if you want to grab one icon hidden, behind these icons, you have to move other icons away.
so that's a problem we want to address.
let me describe the program.
so here, you be, clearly see four groups here.
however, system does not understand these kind of clusters.
so, you have to manually select and move around and then you should get a new group.
then you again, you have to manually select.
though, this can be very tedious.
also, if you have, a big cluster, like this and there you have to pick up, icon hidden it.
hidden behind it.
you have to manually move out and then pick one object.
so, this is very tedious.
so, what we propose is, bubble clusters.
so, bubble clusters is automatic grouping of nearby icons.
and then visualization of them as in a bubble.
and also, additionally, we introduce automatic spreading of cluster to pick up on hidden icon.
so let me go back to the demonstration.
so here, you have three grids, and if you enable bubble clusters, you will see the three bubbles, and then if you grab a bubble, you can drag them around by, just by grabbing a bubble, without manually selecting a group.
[sound] and bubble, is automatically computed, as soon as you place these two icons nearby.
and there's a little bit very small details but interesting details.
here, these two and these two, are in the same distance, however you know, if these two icons are previously separated.
they will resist to be merged fast.
but as soon as they are merged, then they start to resist to be splitted.
so, this is, kind of history resist and it is very useful.
and then you can, you know, move around and pick up many icons.
and then, if you have a hidden icon, like this.
then you can double click here, and then you would temporarily spread icons and then you grab icon and the system go back to the original state.
so, this is a bubble causal technique.
and a bubble clusters technique, and then same idea can be applicable to this kind of digital ink.
so, if we were walking on digital ink system.
you know, you probably do not want to manipulate individual strokes.
rather than that, each cluster has a meaning grouping.
and then, whenever you draw strokes, the system automatically groups nearby strokes together.
and you can move around these strokes, by grabbing blue area.
and if you connect together, it'll be one object, and then you can draw line and you will split them, so this is very useful for a discussion or a discussion on whiteboard or digital inks because that's a demonstration.
let me briefly describe the essence of implementation.
so, we, i will first describe clustering algorithm.
so, we use very, very simple pair-wise distance threshold.
so, for all objects on the screen, first we assign each object to one cluster.
so, cluster of object is like this.
and then, for all object pairs, oi on the oj.
if the distance is smaller than threshold.
then they will merge to object.
here's a view.
so for each paper, each pair, we check the distance, against the one threshold.
and if it is smaller, we merge them.
and interesting part is here, the threshold.
so, if the, if previously, in the previous frame, if the object in the different cluster, then the threshold becomes very small.
so, difficult to merge together.
and then, if the two objects are from the same cluster, in the previous step, then it becomes larger, which means very easier to merge together.
and after having a cluster, we regenerate a visualization of the bubble.
and here, what technology we use here, is 2d implicit surface.
so, implicit surface, is, to compute potential field.
field around each element, and then place iso-surface over the field.
so, suppose you have one, two, three, four, five object and then we generate this kind of potential field around it, kind of height field.
and then we aggregate them together and then compute iso-surface.
and here is a visualization.
[sound] so, if you have this kind of icons.
and then this will, this one showings potential field.
as you see, if you aggregate more and more object it becomes brighter which means high potential field.
and after that, we just trace.
lines, with the same height, heights.
and, however, it's very time-consuming, to process individual pixels.
so, we compute potential field values at grid cells, like this.
and after computing potential fields at the grid cells, then we, out of, we, extract iso-surface by a technique called marching cubes.
so, here's a summary of this video.
so, the program we discuss here, is a management of spatially organized mini-icons on desktop.
and then solution here.
what we propose here, is automatic clustering of nearby icons as a bubble.
and here's a pointers for further learning.
so, original paper was published as a bubble cluster, clusters: an interface for manipulating spacial aggregation of graphical objects.
and the technique we use here, is called implicit surfaces.
and implicit surfaces are very popular technique in computer graphics, to represent liquids and [inaudible] object.
and the first publication was at siggraph 82 by jim blinn.
and then also, iso-surface extraction technique, called marching cubes was published at and this is a very basic literature, and i recommend that, to take a look at them.
thank you.
