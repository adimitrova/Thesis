hello, our topic here is voice interaction, and the work we introduce here is voice and sound.
so here the background motivation, we see there are two aspects in our voice.
so one is verbal information.
and the other is non-verbal information.
and typical speech interactions use verbal information such as they convert your speech into recognizable command and then do something.
but however, on the other hand, our voice also contains non verbal information such as pitch, volume, speed, and so on.
so these are non-verbal information has been ignored in traditional speech recognition.
but here, what we want to do is leverage, leverage these non-verbal information in your voice.
and here is a kind of concept.
so, interaction turn-around is very long in traditional voice or speech recognition.
so you say something, and then computer tries to understand it, and then you say something, and the system tries to do something.
and this is, this is very, very, very time-consuming.
and it's very discontinuous.
on the other hand.
for example if you are working on a, mouse, if you grab an object, you continuously move your mouse cursor and then the system continuously provides feedback.
so this kind of direct manipulation experience is what we want to achieve, as in computer.
so we, in our technique, the user continuously produce makes your voice, and then system continuously provides feedback to your vocal input.
so let me show you a video.
so, here, we introduce three techniques.
the first one is more simple.
on/off button.
so here, your voice works as on/off button.
so if you say nothing, it's off.
so if you say something continuously it means you press button.
here's an example.
so here, typical approach is voice recognition.
so if you want to move this node, say, maybe you say 30 degree, and you get result here.
and so, 90 degree, you get result here.
but again if you use voice recognition, interaction can be very discontinuous.
here your voice is a switch, so if you make voice this one starts moving, as you, as soon as you stop speeching, speaking it will stop.
so you can continuously see the visual feedback [sound].
so as you see, you can continuously get feedback, so if you get a satisfact result, satisfactory result, you just stop speech and you get a result.
and if the voice is very annoying or difficult to produce you can make any noise, so you can use a breath.
to control a system.
>> down.
>> and if you combine this with traditional speed recognition, you can do something like this.
[sound] again, traditional approach is to say, like, 100 meter.
away, or one kilometer away, and so on.
but it's kind of difficult to understand what's going on.
but here, you just speech, and then stop speaking.
and this especially useful for zooming.
you know, zooming 1.2 is very difficult to imagine.
but here, you just see it.
>> bike.
zoom out.
out.
up.
up.
>> okay so that was a fast technique and here is the second one.
second one is addition to on and off, you control, control a parameter using a voice, using a pitch of your voice, so you let me see.
[noise] so you control a slider with the pitch of your voice.
[noise] it's very, very st, stable, that's a most important part [noise].
>> up.
down.
down.
>> so, here, in addition to controlling the distance, you can also control a speed of the scrolling.
>> up.
right.
up.
>> [noise] again, higher the voice, the faster you move.
so, so far, i showed very continuous control parameters, but here, the last one is discontinuous discrete control by tonguing.
so suppose you want to change tv channel, or something like that.
>> [sound] down.
[unknown] left.
[unknown] up.
[unknown] right.
[unknown] down [unknown].
>> so here we use very, very basic signal processing, so you can do any noise, so you can also clap your hands to control it.
>> down.
[sound] right.
right.
[sound].
[blank_audio].
so those three techniques we introduced.
and then next we, i will show you a couple entertainment applications of these techniques.
the first, okay, the first one is jumping game using your voice.
up, up, up, up, up, up, up, down.
>> so next one is using pitch control to control the vertical position of this fish.
[inaudible] so last one is, like punching game using your voice.
[unknown].
[sound] so that, that's it and let me go back to the slide.
so let me briefly describe the implementation of this kind of system.
first, where we use a signal processing techniques.
and we use existing.
a fourier transform library.
so it transforms input voice signal data into frequency domain.
and then application is control's implemented in java.
and the first technique, on and off control is very, very nice.
implement this and we use.
it just checks total volume, total power.
or was the input signal.
and if it's, we check whether the total volume is larger than the threshold or not.
one implementation detail is that we ignore low frequency part to subtract, separate background noise.
an important part is pitch detection, so.
we con, we use voice pitch to control parameter up and down but this needs to be very, very stable.
a naive approach is to use identify absolute pitch for each voice.
so here's an input signal and then try to identify the dominant pitch.
however this is very very difficult.
it's very ambiguous, noisy, and unstable.
please imagine that at this kind of frequency signal, is changing all the time and then it is very difficult to identify a peak.
so some t, at some point this is the highest.
but at nex,next moment this one gets highest, so it's very unstable.
so this naive approach is not works very well.
so our approach is to just all checks slightly up or slightly down of each frame.
so in this way the result is very stable.
so we only check whether the pitch is getting high or lower, a little bit.
so here's a detailed algorithm.
suppose you have this kind of spectrum of time t0.
so the vertical, horizontal axis is frequency, low frequency to high frequency, and for each frequency you get amplitude.
and then you get another thing now of t0 plus dt.
and then your task is to detect whether this frequency signal is shifting downwards or upwards.
so in order to do it, we get this we aggregate this signal into a vector, and then in the next time.
for the next fray, we get a vector for the shifted upwards and also shifted downwards, so you have three vectors.
and then we just compute dot products between them.
so this one is dot product between v and v minus.
and then you compute also v and v plus.
so if v minus is higher, then v minus is more closer to v, so which means that the pitch is shifted over.
and then if this thought product of v plus is higher than v minus, which means that v plus is closer to v, which means the spectrum is, gets higher.
so this very, very simple implementation.
returns a very, very stable result.
so here's a summary.
so we discussed problem of controlling object continuously, using your voice, using non-verbal features.
and then our approach is to use a non-verbal aspect of your voice.
and the original paper was published as voice as sound, non-verbal voice input for interactive control.
and multi-modal interface using gesture and voice is also a very popular topic in your field, and very original paper was called put, put that there so you say, put and then say that, showing some object.
and then again say there.
and they're showing another object using your gesture.
and then you get the task.
and the video is available on the youtube.
so i recommend you to take a look at it.
and also there are a couple of interesting voice based interaction techniques.
and one recommendation for you is speech completion.
and this one tries to complete.
your speech in the middle.
and also video is available, so i recommend you too take a look at it.
thank you.
so this is the end of week one.
some topic we discuss in this week was graphical user interfaces.
and then we discuss scrolling interfaces, the manageable desktop icons.
pointing techniques on the large screen.
and management of digital ink.
and then finally, we discuss voice interaction.
thank you.
