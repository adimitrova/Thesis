1
00:00:00,800 --> 00:00:05,120
Next topic we discuss is, Spatial Key
Framing for character animation.

2
00:00:06,260 --> 00:00:07,920
And, the work we introduce here was

3
00:00:07,920 --> 00:00:12,347
published Spatial Key Framing for
Performance-driven Animation.

4
00:00:13,650 --> 00:00:15,980
So the motivation here is, creation

5
00:00:15,980 --> 00:00:19,000
of character animation is tedious and
difficult.

6
00:00:19,000 --> 00:00:21,760
So here's a list of, popular techniques,

7
00:00:21,760 --> 00:00:26,015
so Key framing, Motion capture, Physics
and Scripting.

8
00:00:26,015 --> 00:00:28,980
Keyframe is by the way the most popular
technique.

9
00:00:28,980 --> 00:00:32,070
So you set key bodies of each time frame.

10
00:00:32,070 --> 00:00:34,160
So, as a program we want to address here

11
00:00:34,160 --> 00:00:37,840
is the creation of character animation is
tedious and difficult.

12
00:00:37,840 --> 00:00:40,320
Here are a list of current popular
techniques

13
00:00:40,320 --> 00:00:44,300
of Key framing, Motion capture, Physics,
and Scripting.

14
00:00:44,300 --> 00:00:47,220
So by ways the most popular technique is
key framing.

15
00:00:47,220 --> 00:00:50,267
So you get a character and for each time
you place a pose

16
00:00:50,267 --> 00:00:55,040
like time zero, this pose, time one, this
pose, time two, this pose.

17
00:00:55,040 --> 00:00:56,470
So individual key framing.

18
00:00:56,470 --> 00:00:59,870
But however, this is very difficult to do.

19
00:00:59,870 --> 00:01:05,080
Especially, for now we use to get a smooth
animation using this key framing.

20
00:01:05,080 --> 00:01:08,660
If you do it poorly, it's like a robotic
motion.

21
00:01:08,660 --> 00:01:10,890
And the another popular technique is
motion capture.

22
00:01:10,890 --> 00:01:15,590
You can directly record body motion using
the tracking systems.

23
00:01:15,590 --> 00:01:20,567
However this one requires special device,
special space,

24
00:01:20,567 --> 00:01:24,968
and also scale, skilled actors which is
difficult.

25
00:01:24,968 --> 00:01:27,830
The physics simulation is also used for

26
00:01:27,830 --> 00:01:31,479
but not good for designing character
animation.

27
00:01:31,479 --> 00:01:34,069
And scripting is also used for a robotic

28
00:01:34,069 --> 00:01:37,690
motion, like change angle this to change
this angle.

29
00:01:37,690 --> 00:01:42,290
However, this is not good for expressive
character animation.

30
00:01:42,290 --> 00:01:45,580
So what we want to do is easily sketch

31
00:01:45,580 --> 00:01:50,930
or create, you know dynamic form motions
or character.

32
00:01:50,930 --> 00:01:53,200
So the basic idea is very simple.

33
00:01:53,200 --> 00:01:56,360
We believe that the best, easiest way is
to

34
00:01:56,360 --> 00:02:00,140
directly manipulate a character in front
of the camera.

35
00:02:00,140 --> 00:02:02,670
And then press record, and then
manipulate, and then

36
00:02:02,670 --> 00:02:05,650
stop and play back and do the same thing.

37
00:02:05,650 --> 00:02:09,680
So direct recording of performers should
be the best way to do it.

38
00:02:09,680 --> 00:02:16,600
One problem here is that the typical input
device is very limited degree of freedom.

39
00:02:16,600 --> 00:02:18,983
So for example, if you use a mouse, you

40
00:02:18,983 --> 00:02:22,290
only have X and Y inputs, two dimensional
inputs.

41
00:02:22,290 --> 00:02:25,865
However, character usually has a high
degree of freedom.

42
00:02:25,865 --> 00:02:27,840
So each joint has three degrees of

43
00:02:27,840 --> 00:02:30,960
rotation freedom, and you have many many
joints.

44
00:02:30,960 --> 00:02:33,690
So you have to control many joints with
single

45
00:02:33,690 --> 00:02:38,860
mouse, which can be very difficult for a
performance-based recording.

46
00:02:38,860 --> 00:02:41,045
So our proposal is to use spatial

47
00:02:41,045 --> 00:02:45,070
key-framing, so user or designer first
specifies or

48
00:02:45,070 --> 00:02:48,630
prepares key poses in the 3D space and

49
00:02:48,630 --> 00:02:52,450
then blend them, depending on the control
handle.

50
00:02:53,940 --> 00:02:55,070
So let me show you a demo.

51
00:02:56,590 --> 00:02:59,560
So, here is a character in the 3D space

52
00:02:59,560 --> 00:03:01,850
and then we make an animation of this
character.

53
00:03:03,120 --> 00:03:05,720
And as I said, difficult project is key
framing.

54
00:03:05,720 --> 00:03:10,660
You know, this time, this pose, next time,
this pose, next time, this pose and so on.

55
00:03:10,660 --> 00:03:14,479
And it's very, very tedious to do this for
a long animation sequence.

56
00:03:16,320 --> 00:03:20,170
So, our process is to directly record a
motion.

57
00:03:20,170 --> 00:03:24,360
Particularly, if but, if you use one by
one, it's very tedious.

58
00:03:24,360 --> 00:03:26,519
In this you can only head, arm, or

59
00:03:26,519 --> 00:03:30,650
leg, but you cannot manipulate all of them
together.

60
00:03:30,650 --> 00:03:34,040
So our approach is to use a predefined key
frame.

61
00:03:34,040 --> 00:03:37,808
So you say, this pose is associated with
this

62
00:03:37,808 --> 00:03:44,170
position, and then next pause is
associated with this position.

63
00:03:44,170 --> 00:03:46,660
And then, so you have two key frames.

64
00:03:46,660 --> 00:03:50,110
So, standard key frames associate with
timeline.

65
00:03:50,110 --> 00:03:53,518
But here, key frames are associated with
spatial locations.

66
00:03:53,518 --> 00:03:56,402
And by clicking you can jump to the key

67
00:03:56,402 --> 00:04:00,480
frames and by dragging you can plan these
too.

68
00:04:00,480 --> 00:04:04,240
So now, you can only control three joints
by a single mass.

69
00:04:05,240 --> 00:04:10,090
An interesting point here, is that you can
add more, and more key poses very easily.

70
00:04:10,090 --> 00:04:12,580
So, you know have three key poses.

71
00:04:12,580 --> 00:04:16,500
And they blend together, and then you get
a reasonably interesting motion already.

72
00:04:16,500 --> 00:04:20,748
And you can add more, and more operation
of

73
00:04:20,748 --> 00:04:24,880
key poses, like a kick and kick and so on.

74
00:04:24,880 --> 00:04:26,960
All right, let me show you a couple more
examples.

75
00:04:30,400 --> 00:04:31,460
So, so

76
00:04:37,000 --> 00:04:42,200
here, again, individual poses are not so
complicated.

77
00:04:42,200 --> 00:04:47,830
However, if you hide, and then start
moving around the ball, now you can

78
00:04:47,830 --> 00:04:52,659
make this teddy bear doing the juggling,
just by using a two-dimensional mouse.

79
00:04:57,700 --> 00:05:00,860
And then another example is this one.

80
00:05:00,860 --> 00:05:05,700
So again, each individual coordinates are
not so expressive.

81
00:05:05,700 --> 00:05:10,768
However, as you start moving them around,
you can make him dance like this way.

82
00:05:10,768 --> 00:05:18,532
So here you know, your hand motion is
directly

83
00:05:18,532 --> 00:05:23,540
appears in the character motion, so that
the resulting motion is very expressive.

84
00:05:23,540 --> 00:05:29,230
So of course, you can let go of this
motion: you know, one, two, one, two, mm.

85
00:05:31,680 --> 00:05:35,910
So now you can get this animation and then
now you get a motion.

86
00:05:35,910 --> 00:05:36,410
So

87
00:05:39,030 --> 00:05:42,370
you can see it from many different
locations.

88
00:05:47,280 --> 00:05:47,970
Okay.

89
00:05:47,970 --> 00:05:50,370
Now let me show you a couple more
examples.

90
00:05:50,370 --> 00:05:52,750
So here is a kicking motion.

91
00:05:52,750 --> 00:05:56,130
So you have many, many couple of key
poses.

92
00:05:56,130 --> 00:05:59,550
And then by dragging this lead ball you
can make the

93
00:05:59,550 --> 00:06:02,780
teddy bear make a high kick, as well as a
low kick.

94
00:06:02,780 --> 00:06:09,085
And this is a mushroom, jumping, so you
have five or six key bodies

95
00:06:09,085 --> 00:06:15,418
and then by directly manipulating that
ball you can make this animation.

96
00:06:15,418 --> 00:06:24,553
[BLANK_AUDIO]

97
00:06:24,553 --> 00:06:29,670
And this is a teddy bear in trouble, I
think six key poses.

98
00:06:29,670 --> 00:06:35,750
And then, you know, he says no first, and
they get idea, and be happy.

99
00:06:35,750 --> 00:06:39,205
So, you can make this kind of expressive
emotion

100
00:06:39,205 --> 00:06:43,009
by using your hand motion integrated into
the final.

101
00:06:43,009 --> 00:06:52,318
[BLANK_AUDIO]

102
00:06:52,318 --> 00:06:57,455
Here this eyeballs also have a separate
joint so you can control their rotation.

103
00:06:57,455 --> 00:07:04,085
[BLANK_AUDIO]

104
00:07:04,085 --> 00:07:08,019
Okay, so let me briefly describe the
algorithm to do this.

105
00:07:09,360 --> 00:07:12,650
So input to this system is handle
coordinates.

106
00:07:12,650 --> 00:07:14,710
So, you have 2D mouse, and then you

107
00:07:14,710 --> 00:07:18,470
control the lead ball position using a
mouse.

108
00:07:18,470 --> 00:07:21,280
And the output is the orientation of each
joint.

109
00:07:21,280 --> 00:07:23,702
So, you have many in rotation angles.

110
00:07:23,702 --> 00:07:29,040
So, the question here is how to represent
orientation angle, rotation joint angle.

111
00:07:29,040 --> 00:07:32,020
And there are a couple ways to represent
joint angles like euler

112
00:07:32,020 --> 00:07:38,390
angles or quaternions but here we use a
rotation matrix, so nine elements.

113
00:07:38,390 --> 00:07:41,850
Like this way, so each joint has a three
by three

114
00:07:41,850 --> 00:07:47,660
matrix for these represents also on our
axis for each joint.

115
00:07:47,660 --> 00:07:51,070
And then what we need to control these
nine

116
00:07:51,070 --> 00:07:54,010
parameters for each joint depending on the
user input.

117
00:07:56,190 --> 00:07:57,350
So let's take this joint.

118
00:07:59,010 --> 00:08:04,590
So, this joint has suppose we have three
special key frames,

119
00:08:04,590 --> 00:08:08,890
and then each key frame has this nine
parameters for each joint.

120
00:08:08,890 --> 00:08:13,070
And then as user specifies the new handle
position and then we

121
00:08:13,070 --> 00:08:17,870
need to compute three by three matrix for
this position for this joint.

122
00:08:17,870 --> 00:08:23,910
To do this we basically blend these nearby
three key poses.

123
00:08:23,910 --> 00:08:25,780
So you won't have to do this.

124
00:08:25,780 --> 00:08:30,630
Let's take, we compute interpretation for
individual elements

125
00:08:30,630 --> 00:08:33,750
or individual entry of these three by
three matrix.

126
00:08:33,750 --> 00:08:37,530
So this is just a simple skeletal body
interpolation and

127
00:08:37,530 --> 00:08:43,110
here we use a technique called radial
basis function interpolation.

128
00:08:43,110 --> 00:08:47,780
So this is a scattered data interpolation
using radial basis functions.

129
00:08:47,780 --> 00:08:49,330
This is a kind of stand out technique

130
00:08:49,330 --> 00:08:52,870
and you can use as a possible
interpolation techniques.

131
00:08:52,870 --> 00:08:55,750
This is very easy to implement, very easy
to use.

132
00:08:55,750 --> 00:08:57,340
The idea is very simple.

133
00:08:57,340 --> 00:09:03,640
So for a supposed example you have three
skeletal bodies with special location.

134
00:09:03,640 --> 00:09:08,335
And then for each location, we have a
kernel function.

135
00:09:08,335 --> 00:09:12,640
Kernel function, and then we eh, compute

136
00:09:12,640 --> 00:09:18,340
most appropriate waiting or coefficients
for each kernels.

137
00:09:18,340 --> 00:09:20,550
And then just by adding them together,

138
00:09:20,550 --> 00:09:24,390
you will get a very smooth, interpolating
function.

139
00:09:24,390 --> 00:09:26,568
And if you want to know more, you can, I

140
00:09:26,568 --> 00:09:29,740
recommend you to take out paper by Turk in
2002.

141
00:09:29,740 --> 00:09:30,240
So

142
00:09:32,310 --> 00:09:37,360
after computing this up line, this
skeletal body interpolation for individual

143
00:09:37,360 --> 00:09:41,050
elements, you have nine elements in a
three by three matrix.

144
00:09:41,050 --> 00:09:45,980
But unfortunately, if you apply our
interpolation independently to these

145
00:09:45,980 --> 00:09:52,390
entries in resulting matrix, is not
necessarily orthonormal, you know.

146
00:09:52,390 --> 00:09:56,150
Rotation matrix needs to be, orthonormal.

147
00:09:56,150 --> 00:09:59,010
And also perpendicular to each other and

148
00:09:59,010 --> 00:10:01,590
also the directions should be equal to
one.

149
00:10:01,590 --> 00:10:06,250
So after that we apply orthonomalization
operation to

150
00:10:06,250 --> 00:10:09,520
these three by three matrix to get this
one.

151
00:10:09,520 --> 00:10:11,210
I always skip details of this

152
00:10:11,210 --> 00:10:13,770
orthonormalization but there's a standard
approach.

153
00:10:16,110 --> 00:10:17,270
Okay, so here's a summary.

154
00:10:17,270 --> 00:10:19,530
So we introduce spatial key-framing for

155
00:10:19,530 --> 00:10:22,780
creating character animation quickly and
easily.

156
00:10:22,780 --> 00:10:25,160
As a user defines key poses in the screen

157
00:10:25,160 --> 00:10:30,160
space, and then the system automatically
blends nearby key poses.

158
00:10:30,160 --> 00:10:33,990
In order to do so, we use rotation matrix
and then

159
00:10:33,990 --> 00:10:38,820
we use radial basis function interpolation
for each element in the matrix.

160
00:10:40,470 --> 00:10:42,800
So to learn more, original paper

161
00:10:42,800 --> 00:10:46,190
was published as Spatial Keyframing for
Performance-driven

162
00:10:46,190 --> 00:10:48,270
Animation, and if you want to learn

163
00:10:48,270 --> 00:10:51,750
more about interpolation by radial basis
functions.

164
00:10:51,750 --> 00:10:56,710
There's a paper titled Modeling with
implicit surfaces that interpolate.

165
00:10:56,710 --> 00:10:57,710
Here's an example.

166
00:10:57,710 --> 00:11:01,070
So use a space prior positions in 3D
space.

167
00:11:01,070 --> 00:11:02,620
And then this technique generates a

168
00:11:02,620 --> 00:11:08,270
very beautiful smooth surface
interpolating these points.

169
00:11:08,270 --> 00:11:15,404
And interpolation of 3D angles is popular
topic discussion in graphics community.

170
00:11:15,404 --> 00:11:19,510
And the popular technique used is
Quaternion interpretation.

171
00:11:19,510 --> 00:11:25,996
And then I recommend you take a lot of
original paper published in SIGGRAPH 85.

172
00:11:25,996 --> 00:11:27,345
Thank you.