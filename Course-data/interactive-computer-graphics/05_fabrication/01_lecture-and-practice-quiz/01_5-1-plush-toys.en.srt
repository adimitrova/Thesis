1
00:00:09,294 --> 00:00:13,050
hello, this is week 5 of
interactive computer graphics.

2
00:00:13,050 --> 00:00:15,500
A topic we discuss here is fabrication.

3
00:00:17,000 --> 00:00:22,770
So, so far, we have been working on,
introduced, discussed computer graphics.

4
00:00:22,770 --> 00:00:25,570
So display imagery on the screen.

5
00:00:25,570 --> 00:00:29,200
Everything was on the computer
screen inside of a computer.

6
00:00:29,200 --> 00:00:34,860
So this week, we discussed trying to
going out of the computer screen and then

7
00:00:34,860 --> 00:00:39,320
try to work on the physical object we can
touch and manipulate in the real world.

8
00:00:40,960 --> 00:00:44,200
And the background motivation is here,
so you know there are so

9
00:00:44,200 --> 00:00:48,970
many possible publication machines
getting available, getting cheaper.

10
00:00:48,970 --> 00:00:55,015
So if you have a 3D model inside
a computer, you can easily directly print.

11
00:00:55,015 --> 00:00:57,270
3D models are the physical objects.

12
00:00:57,270 --> 00:01:01,390
For example, if you have a 3D printer,
you can get a 3D model.

13
00:01:01,390 --> 00:01:05,850
Similarly, milling machines
automatically mills, material and

14
00:01:05,850 --> 00:01:07,760
then you get the 3D model.

15
00:01:07,760 --> 00:01:10,080
And so you have, 3D dimensional patterns.

16
00:01:10,080 --> 00:01:13,467
You can easily send it to the laser
cutter, our cutting machine and

17
00:01:13,467 --> 00:01:16,750
you will get nice three,
two dimensional shapes out of the box.

18
00:01:18,710 --> 00:01:22,000
So, here's the list of
topics we discussed here.

19
00:01:22,000 --> 00:01:24,550
We discussed design with plush toys and

20
00:01:24,550 --> 00:01:29,450
design with beadworks and chairs and
also discussed soft folding or

21
00:01:29,450 --> 00:01:32,940
crossing materials, and
also interactive packing, packing method.

22
00:01:34,500 --> 00:01:36,200
So first one is a plush toy design.

23
00:01:37,710 --> 00:01:39,610
So this one is called Plushie.

24
00:01:41,120 --> 00:01:44,990
So the program is address is that it
is very difficult for non experts, for

25
00:01:44,990 --> 00:01:49,452
us to design 2D pattern who
are stuck [INAUDIBLE] appropriately.

26
00:01:49,452 --> 00:01:50,030
You know?

27
00:01:50,030 --> 00:01:53,179
You want to get a three-dimensional
stuffed animal,

28
00:01:53,179 --> 00:01:56,480
you need to design
two-dimensional clothes patterns.

29
00:01:56,480 --> 00:02:00,020
For experts, it may be easy to
understand the relationship, but

30
00:02:00,020 --> 00:02:04,030
for novice users or no-experience people,

31
00:02:04,030 --> 00:02:09,090
it's very difficult to go back on course
between 2D to 3D and then 3D to 2D.

32
00:02:10,690 --> 00:02:15,830
So, for the sketch-based 3D modeling and
automatic close pattern generation.

33
00:02:15,830 --> 00:02:19,060
So this is extension of
teddy system we introduced.

34
00:02:19,060 --> 00:02:21,940
So you just sketch desired shape, and

35
00:02:21,940 --> 00:02:24,990
the system generates a three dimensional,
geometry.

36
00:02:24,990 --> 00:02:26,520
But at the same time,

37
00:02:26,520 --> 00:02:30,350
system also generates
a corresponding 2D cloth pattern.

38
00:02:30,350 --> 00:02:34,910
So if the user print them, cut them,
stitch together, and it's ready.

39
00:02:34,910 --> 00:02:37,490
And then you'll get the 3D,
physical 3D shape.

40
00:02:37,490 --> 00:02:38,940
So that's the idea.

41
00:02:38,940 --> 00:02:41,120
Let me show you a video.

42
00:02:41,120 --> 00:02:46,450
So here's the overview.

43
00:02:46,450 --> 00:02:50,590
The user input is three-dimensional
sketching input on computer screen.

44
00:02:51,808 --> 00:02:55,950
And then, giving the user input system
automatically generate a 3D shape and

45
00:02:55,950 --> 00:02:58,878
then corresponding 2D equals patterns.

46
00:02:58,878 --> 00:03:02,550
And then after having closing patterns,
the user sew together and

47
00:03:02,550 --> 00:03:04,128
then you get the physical stuffed animal.

48
00:03:04,128 --> 00:03:05,616
There are operational.

49
00:03:05,616 --> 00:03:11,020
The user interface is very similar
to the original Teddy system.

50
00:03:11,020 --> 00:03:14,450
User just get his outline,
and the system But

51
00:03:14,450 --> 00:03:19,990
at the same time you get
a two-dimensional cross pattern, and

52
00:03:19,990 --> 00:03:26,600
what's happening here inside is that we
learn a simple physical simulation inside.

53
00:03:27,700 --> 00:03:32,770
So the system predicts what happens
if you stitch them together and it.

54
00:03:32,770 --> 00:03:35,455
And the system shows
a predicted 3D geometry here.

55
00:03:38,945 --> 00:03:42,720
And after having some geometry,
you can interact and edit it.

56
00:03:42,720 --> 00:03:48,100
Like like any system, you can cut object
and the system automatically gets

57
00:03:48,100 --> 00:03:55,040
3D shape and as well has
a two-dimensional close pattern.

58
00:03:55,040 --> 00:03:57,056
So user continuously edits the shape, and

59
00:03:57,056 --> 00:04:00,630
the system continuously presents
a two-dimensional shape.

60
00:04:00,630 --> 00:04:02,676
This is a operation.

61
00:04:02,676 --> 00:04:07,208
So here we generate two
possible operations.

62
00:04:07,208 --> 00:04:11,580
So one is like this one.

63
00:04:11,580 --> 00:04:15,210
So last base are these holes and also,

64
00:04:15,210 --> 00:04:20,660
we also support [INAUDIBLE] this
is useful for making an ear.

65
00:04:24,720 --> 00:04:29,180
We also implemented a cover of editing
operations such as pulling the shape.

66
00:04:29,180 --> 00:04:32,965
So here the system concurrently edits,

67
00:04:32,965 --> 00:04:38,160
modifies the 3D shape and
also two-dimensional patterns.

68
00:04:38,160 --> 00:04:42,213
Now this is in, in, interesting so
you can actively add or

69
00:04:42,213 --> 00:04:45,129
erase a seams on top of a colored pattern.

70
00:04:49,334 --> 00:04:50,930
So this is interesting I think.

71
00:04:50,930 --> 00:04:56,560
So, now you have, we have three pieces and
a single 3D object.

72
00:04:56,560 --> 00:05:00,310
But if,
here the user tries to erase the seam,

73
00:05:00,310 --> 00:05:04,170
which means that these two
parties will be merged together.

74
00:05:04,170 --> 00:05:06,630
So you will end up having two parties.

75
00:05:06,630 --> 00:05:10,385
Our system outlines this
computation in real time.

76
00:05:10,385 --> 00:05:15,584
So as user erases a patch boundary, the
system merges the two patches together,

77
00:05:15,584 --> 00:05:18,870
and then you will have now a two,
patches, and

78
00:05:18,870 --> 00:05:23,015
the system also applies the physical
simulation to the result.

79
00:05:26,675 --> 00:05:30,096
So user can also operate
directly on the 2D pattern, and

80
00:05:30,096 --> 00:05:32,460
then you will get a modified 3D shape.

81
00:05:32,460 --> 00:05:38,720
So you can easily directly
working on 3D shape,

82
00:05:38,720 --> 00:05:41,340
or you can work,
directly working on 2D pattern.

83
00:05:42,620 --> 00:05:45,230
So this two way agent
can be very flexible.

84
00:05:46,270 --> 00:05:48,690
And this is an example
of modeling sequence.

85
00:05:49,710 --> 00:05:53,120
So use a fast generator base shape, and

86
00:05:53,120 --> 00:05:57,070
then you operate cut operation
to get more control.

87
00:06:01,310 --> 00:06:04,250
So basically by repeating
simple sketching,

88
00:06:04,250 --> 00:06:07,830
editing operations, you can generate
reasonably complicated shape.

89
00:06:09,210 --> 00:06:14,120
Here we, we did not show in this video,
but in the actual printout, system also

90
00:06:14,120 --> 00:06:20,950
gives, hints or information, which,
which edge to be connected with which end.

91
00:06:20,950 --> 00:06:25,977
So, the construction is also guided by
the computer generated annotations.

92
00:06:32,938 --> 00:06:38,184
So after having this 3D model,
the user print this pattern into paper or

93
00:06:38,184 --> 00:06:43,050
cloth and then you will manually
create 3D stuff animal.

94
00:06:43,050 --> 00:06:50,240
So this is 3D model, and then this is
a generated real physical stuffed animal.

95
00:06:50,240 --> 00:06:54,009
So you take four or
five hours to get this.

96
00:06:56,310 --> 00:07:00,180
Yeah, you can also create a big
one by using, you know, inflation.

97
00:07:00,180 --> 00:07:05,220
So this is a big balloon,
like two meter size, a big balloon.

98
00:07:05,220 --> 00:07:09,850
So traditionally this kind of balloon is
designed by professional designers, and

99
00:07:09,850 --> 00:07:13,390
it requires many testing and
trials and the prototyping.

100
00:07:13,390 --> 00:07:16,800
But here, the computer can take care
of the prototyping or simulation.

101
00:07:16,800 --> 00:07:22,280
So even any inexperienced people can
design it, so, his or her own balloons.

102
00:07:24,330 --> 00:07:26,000
So we learned our simple study.

103
00:07:26,000 --> 00:07:30,040
So, we asked kids to design
their own stuffed animal.

104
00:07:31,320 --> 00:07:35,580
So traditionally,
these people can buy existing pattern and

105
00:07:35,580 --> 00:07:37,800
they create, the stuffed animal.

106
00:07:37,800 --> 00:07:42,870
It was almost impossible to design new
original character, stuffed animal.

107
00:07:42,870 --> 00:07:49,110
But here, you know, even students,
kids can design their own stuffed animal.

108
00:07:49,110 --> 00:07:55,114
And after finishing the design, you know
print then cut and then stitch together,

109
00:07:55,114 --> 00:08:00,111
and then you will get a final 3D model,
oh no, no, final press toy.

110
00:08:00,111 --> 00:08:03,367
So, you can design their
own original model.

111
00:08:13,891 --> 00:08:16,624
Yep.

112
00:08:16,624 --> 00:08:19,620
So, let me briefly,
describe the algorithm.

113
00:08:19,620 --> 00:08:24,100
For the inflation algorithm, for
the inflation simulation, we use a very,

114
00:08:24,100 --> 00:08:26,476
very simple, basic mass-spring method.

115
00:08:26,476 --> 00:08:31,780
So, close 3D model mesh vertices
move outward over the time

116
00:08:31,780 --> 00:08:35,010
by air pressure or cotton pressure.

117
00:08:35,010 --> 00:08:36,472
So it tries to inflate.

118
00:08:36,472 --> 00:08:39,679
But at the same time the system
tries to pull them back,

119
00:08:39,679 --> 00:08:41,509
depending on the edge length.

120
00:08:41,509 --> 00:08:44,160
If edge length is too long
then it will pull back.

121
00:08:44,160 --> 00:08:46,718
And then we repeat these two processes,
and

122
00:08:46,718 --> 00:08:49,290
then at the end you will
get a stable result.

123
00:08:50,570 --> 00:08:54,720
We must say that this simulation is not
accurate simulation of real physics.

124
00:08:54,720 --> 00:08:59,812
There will be more other bonds physical
simulation methods, but you can get more

125
00:08:59,812 --> 00:09:04,338
accurate result by using more accurate
methods but it is also interesting to

126
00:09:04,338 --> 00:09:08,602
see that you can get basic result
with basic simple simulation method.

127
00:09:10,882 --> 00:09:16,540
And another interesting issue is that
adjustment to the sha, to the patterns.

128
00:09:16,540 --> 00:09:20,857
So, so, algorithm first takes user inputs,
this red one and

129
00:09:20,857 --> 00:09:24,430
then direct to the,
use it as a 2D pattern.

130
00:09:24,430 --> 00:09:27,642
However, if you start with 2D pattern and
inflate it,

131
00:09:27,642 --> 00:09:31,170
you know,
inflated you inflate in Z direction but

132
00:09:31,170 --> 00:09:36,470
if you pull in D direction then X Y
frame become's get's smaller right?

133
00:09:36,470 --> 00:09:38,484
So in order to prevent it,

134
00:09:38,484 --> 00:09:44,542
the system tries to adjust the shape
to compensate this difference.

135
00:09:44,542 --> 00:09:48,130
So after, after the initial configuration,

136
00:09:48,130 --> 00:09:52,980
system tries to gradually
inflate the 2D pattern so

137
00:09:52,980 --> 00:09:59,286
that the resulting 3D inflation result
matches exactly to the 2D input sketch.

138
00:09:59,286 --> 00:10:03,500
So that's, you know,
inflation algorithm you saw in the video.

139
00:10:05,530 --> 00:10:08,160
So this shape adjustment
is very important.

140
00:10:08,160 --> 00:10:12,590
You know, if user draw let,
box, as a input, and

141
00:10:12,590 --> 00:10:16,870
if you dive to use this
box as a 2D cross pattern,

142
00:10:16,870 --> 00:10:22,330
then if you generate a 3D shape or
2D shape, you will get shape.

143
00:10:22,330 --> 00:10:27,030
So resulting shape is not
exactly match this rectangle.

144
00:10:27,030 --> 00:10:30,740
But if we apply the shape
adjustment maths algorithm,

145
00:10:30,740 --> 00:10:34,610
then system automatically
inflates the input to the shape.

146
00:10:34,610 --> 00:10:39,420
Then physical result will,
publication result matches,

147
00:10:39,420 --> 00:10:41,710
more closer to the rectangle.

148
00:10:41,710 --> 00:10:42,960
So, yeah, this is interesting.

149
00:10:42,960 --> 00:10:46,610
So if you want to have a rectangular,
pillow,

150
00:10:46,610 --> 00:10:52,050
you should start with this kind
of pattern, not start from here.

151
00:10:52,050 --> 00:10:55,610
So, to learn more,
original paper was published as Plushie,

152
00:10:55,610 --> 00:10:58,430
an Interactive Design System for
Plush Toys.

153
00:10:58,430 --> 00:11:03,640
And this work, it was strongly inspired
by previous work on paper craft model.

154
00:11:03,640 --> 00:11:06,830
So this work making the paper
craft toys from meshes using

155
00:11:06,830 --> 00:11:09,070
strip based approximate for unfolding.

156
00:11:09,070 --> 00:11:11,780
So this one starts from giving 3D model,

157
00:11:11,780 --> 00:11:16,170
and then automatically generates
a 2D paper craft pattern.

158
00:11:16,170 --> 00:11:20,870
So you can generate interesting,
3D shapes just by using a paper craft.

159
00:11:22,110 --> 00:11:28,480
We use a surface flattening method
to generate moving from 3D to 2D.

160
00:11:28,480 --> 00:11:32,690
And surface flattening is also a very
popular topic in computer graphics.

161
00:11:32,690 --> 00:11:37,790
It's been used to compute a texture map
co-ordinates, and if you learn more,

162
00:11:37,790 --> 00:11:41,540
one starting point would be this
mesh parameterization method and

163
00:11:41,540 --> 00:11:42,332
the applications.

164
00:11:42,332 --> 00:11:45,880
So that's [INAUDIBLE] this week and
this video.