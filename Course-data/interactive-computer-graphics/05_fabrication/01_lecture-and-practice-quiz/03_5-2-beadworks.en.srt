1
00:00:00,655 --> 00:00:02,860
Okay, next topic is beadwork design.

2
00:00:02,860 --> 00:00:06,075
So the work we introduce here is a beady.

3
00:00:06,075 --> 00:00:09,430
Interactive beadwork design and
construction.

4
00:00:09,430 --> 00:00:12,516
The program here is beadwork design.

5
00:00:12,516 --> 00:00:16,930
so, bead work is add or
connecting beads together by wires.

6
00:00:16,930 --> 00:00:18,440
So, this is an example.

7
00:00:18,440 --> 00:00:24,070
So you have a 3D structure by connecting
small pieces connected by a single wire.

8
00:00:24,070 --> 00:00:30,380
And construction is given, supplies given
like this kind of two dimensional figure.

9
00:00:30,380 --> 00:00:34,230
So people are looking
at this instruction and

10
00:00:34,230 --> 00:00:37,780
then put piece together
one by one using a wire.

11
00:00:37,780 --> 00:00:39,770
And to design or construct design and

12
00:00:39,770 --> 00:00:44,750
construction of this kind of 3D bead
work is extremely difficult and hard.

13
00:00:44,750 --> 00:00:47,800
Suppose you have this kind of shape and
then tries to,

14
00:00:47,800 --> 00:00:51,150
want to make this head bigger,
or this arm longer.

15
00:00:51,150 --> 00:00:57,770
In order to do it you cannot insert
a bead at art arbitrary location.

16
00:00:57,770 --> 00:00:59,730
You know?
This is very hard,

17
00:00:59,730 --> 00:01:03,990
complicated, hard,
heavily constrained program.

18
00:01:03,990 --> 00:01:06,020
So this is a program we want to address.

19
00:01:06,020 --> 00:01:10,770
So how to design this shape and how to
guide the user to construct the shape.

20
00:01:12,280 --> 00:01:13,590
And our approach is two ways.

21
00:01:13,590 --> 00:01:18,350
So one is an interactive and design,
an interactive design and construction.

22
00:01:18,350 --> 00:01:23,870
So, a user designs this in, interesting
bead work design shapes by gestural,

23
00:01:23,870 --> 00:01:28,310
same photo-gestural interaction, and
that system automatically constructs

24
00:01:28,310 --> 00:01:33,370
appropriate beadwork structure and
also system provides interactive guide to

25
00:01:33,370 --> 00:01:37,852
generate a physically construct,
physical beadwork.

26
00:01:37,852 --> 00:01:43,570
On the inside, we, the system applies
a wire path planning algorithm to

27
00:01:43,570 --> 00:01:48,740
compute most efficient and also easy
to create the wire path structure.

28
00:01:49,810 --> 00:01:50,870
So, let me show you a demo.

29
00:01:54,170 --> 00:01:57,960
Okay, here's our demonstration system, and
the modeling starts with a base shape.

30
00:01:57,960 --> 00:02:01,040
So you, we prepared a couple base shapes,
let's use this one.

31
00:02:03,820 --> 00:02:07,480
And then, after having this shape,
you already have a simple shape.

32
00:02:07,480 --> 00:02:12,660
So here, the left one, so
this one is a structure design mesh,

33
00:02:12,660 --> 00:02:14,010
so it called design mesh.

34
00:02:14,010 --> 00:02:17,651
So you work on this structure
level to design a mesh.

35
00:02:17,651 --> 00:02:22,780
So this represents,
basic core structure of a final bead work.

36
00:02:22,780 --> 00:02:26,418
On the right hand side
is a simulation result.

37
00:02:26,418 --> 00:02:29,110
Result, or actual bead work model.

38
00:02:29,110 --> 00:02:32,770
So individual, shape is represent here.

39
00:02:32,770 --> 00:02:37,398
And the system shows what we
generated from this design, to this,

40
00:02:37,398 --> 00:02:39,650
the other result.

41
00:02:39,650 --> 00:02:42,170
And we provide gesture operation.

42
00:02:42,170 --> 00:02:45,310
I click here, and
then you add another primitive.

43
00:02:45,310 --> 00:02:47,600
And then you instantly get more structure.

44
00:02:47,600 --> 00:02:53,340
And the system is internally learning
continuously simple physical simulation so

45
00:02:53,340 --> 00:02:56,420
that, that the resulting
shape is always valid.

46
00:02:58,120 --> 00:03:03,460
And then we implemented a couple simple
gestures like this is extrusion,

47
00:03:03,460 --> 00:03:06,140
and then you'll get extruded shape.

48
00:03:06,140 --> 00:03:08,550
An Extrusion, and the extruded shape.

49
00:03:08,550 --> 00:03:12,330
And then you can crop the vertices,
and then crop vertices.

50
00:03:13,350 --> 00:03:14,610
And then you will get this shape.

51
00:03:16,750 --> 00:03:21,640
And then you can also split edge and
the connect edge.

52
00:03:21,640 --> 00:03:26,011
So essentially, the user is editing
the topology of the mesh, and

53
00:03:26,011 --> 00:03:31,410
then physical simulation automatically
compute the geometry of the shape.

54
00:03:34,080 --> 00:03:39,240
Because what user can specify is just wire
structure, connection between this and

55
00:03:39,240 --> 00:03:42,250
the final shape is automatically
defined by physics,

56
00:03:42,250 --> 00:03:43,750
by putting these piece together.

57
00:03:46,710 --> 00:03:49,300
And then you can also
put this kind of shape.

58
00:03:49,300 --> 00:03:53,060
So in this way, you can generate
reasonably interesting shape just by

59
00:03:53,060 --> 00:03:57,560
editing the topology with simple,
very simple gesture operations.

60
00:03:57,560 --> 00:04:00,160
And the system computes the 3D shape.

61
00:04:00,160 --> 00:04:01,740
And then you'll get the wire structure.

62
00:04:02,880 --> 00:04:05,400
And then after that you can paint them.

63
00:04:05,400 --> 00:04:09,180
For example you put eyes here, and so.

64
00:04:09,180 --> 00:04:12,810
And the after having this character,
the system computes the,

65
00:04:12,810 --> 00:04:16,220
you should press this Plan button.

66
00:04:16,220 --> 00:04:19,370
System automatically
computes wire plus and

67
00:04:19,370 --> 00:04:22,440
then the system starts
to giving instructions.

68
00:04:22,440 --> 00:04:25,240
So this, now this is an instruction.

69
00:04:25,240 --> 00:04:31,400
So, here you can see the total steps and
then your current position.

70
00:04:31,400 --> 00:04:36,270
And then system also provides feedback
about the lengths of the wires.

71
00:04:36,270 --> 00:04:37,448
And then this is the instruction.

72
00:04:37,448 --> 00:04:42,790
This says that, please put
a single bead in a long wire here.

73
00:04:42,790 --> 00:04:47,870
And then press next and
the system shows how to place next bead.

74
00:04:47,870 --> 00:04:49,700
Then next and next.

75
00:04:49,700 --> 00:04:53,130
So of course, construction is
to be done manually by you.

76
00:04:53,130 --> 00:04:54,970
So you put these one by one.

77
00:04:54,970 --> 00:04:58,870
And after each step, you press next and
the system shows a visualize that is out.

78
00:05:00,590 --> 00:05:04,660
So yeah memorizing 3D graphics
it's much more easy to

79
00:05:05,890 --> 00:05:10,590
associate current physical bead in your
hand with, graphics on the screen.

80
00:05:10,590 --> 00:05:15,016
So the, watching this instruction,
you put bead one by one, and

81
00:05:15,016 --> 00:05:18,250
then you will eventually
get the final result.

82
00:05:20,710 --> 00:05:22,220
And let me show you a video.

83
00:05:31,724 --> 00:05:33,970
So, again, this is overview of the system.

84
00:05:33,970 --> 00:05:40,420
So, the system allows the user to generate
more than by simple gesture operations.

85
00:05:40,420 --> 00:05:43,250
And then the system provides
construction guide.

86
00:05:43,250 --> 00:05:46,861
And then you will get the final bead
work model, and the physical bead work.

87
00:05:59,721 --> 00:06:03,350
So, yeah, geometric modeling is
a process I just demonstrated now.

88
00:06:03,350 --> 00:06:05,266
So let me skip these processes.

89
00:06:11,695 --> 00:06:20,610
So after that system it shows a step by
step construction guide like this one.

90
00:06:20,610 --> 00:06:24,450
So this is a situation
of a real construction.

91
00:06:24,450 --> 00:06:29,349
So use a piece one by one into the wire
according to the instruction shown on

92
00:06:29,349 --> 00:06:30,130
the screen.

93
00:06:32,490 --> 00:06:35,994
Now let me skip, so I'll go here now.

94
00:06:35,994 --> 00:06:38,380
And let me show you a couple of results.

95
00:06:39,780 --> 00:06:43,109
So yeah, we created a couple bead works,
original designs.

96
00:06:46,320 --> 00:06:50,350
And traditionally, I think design
completed in your bead work is so

97
00:06:50,350 --> 00:06:51,040
difficult so

98
00:06:51,040 --> 00:06:56,090
when you go, we actually visit couple
stores selling these bead works.

99
00:06:56,090 --> 00:07:00,870
But many, many stores sells
exactly the same designs.

100
00:07:00,870 --> 00:07:04,360
And but here, you know,
you can design your own things.

101
00:07:04,360 --> 00:07:08,580
So, this can be a very interesting
gift for your friends.

102
00:07:11,400 --> 00:07:18,820
So, yeah, here's an example, like penguins
or lizards or mouse or a teddy bear, so.

103
00:07:18,820 --> 00:07:21,620
So, let me briefly describe
the core algorithm.

104
00:07:23,120 --> 00:07:24,650
So, here's a view.

105
00:07:24,650 --> 00:07:26,370
So this is your design mesh.

106
00:07:26,370 --> 00:07:29,670
So you design this a mesh, using gestures.

107
00:07:29,670 --> 00:07:34,820
And then, after this design mesh,
we convert this to a big work model.

108
00:07:34,820 --> 00:07:36,810
The first step is like this.

109
00:07:36,810 --> 00:07:39,610
So each edge is actually a single bead.

110
00:07:39,610 --> 00:07:43,660
So the reason why we considered
using a vertices outside the edge,

111
00:07:43,660 --> 00:07:48,210
but actually, you know, a bead,
it has a wire passing through.

112
00:07:48,210 --> 00:07:50,800
So it actually correspond to it on a edge.

113
00:07:50,800 --> 00:07:52,850
So edge becomes a bead.

114
00:07:52,850 --> 00:07:57,180
And then bead is connected by wire,
to the neighboring beads, like this way.

115
00:07:57,180 --> 00:07:59,905
So, first step is combine single input,

116
00:07:59,905 --> 00:08:05,640
combine design polyhedron to a more
complicated structure model.

117
00:08:05,640 --> 00:08:09,650
And then, next task is to put a wire seat.

118
00:08:09,650 --> 00:08:16,670
And then this wire is given as a Eulerian
Circuit on this structure graph you know.

119
00:08:16,670 --> 00:08:21,150
Eulerian Circuit is visit
individual how to say.

120
00:08:22,150 --> 00:08:25,720
In this case,
basic individual edge, one by one.

121
00:08:27,930 --> 00:08:32,190
So, yeah, here's a brief
overview computing wire paths.

122
00:08:33,300 --> 00:08:36,810
But, however, one problem is
that arbitrary Euler cycle, or

123
00:08:36,810 --> 00:08:39,510
Euler socket is not stable.

124
00:08:39,510 --> 00:08:40,347
Stable is,

125
00:08:40,347 --> 00:08:44,760
this, this is difficult to explain but,
suppose you have this structure.

126
00:08:44,760 --> 00:08:46,464
Yeah?
You have five faces and

127
00:08:46,464 --> 00:08:51,700
then you have this red path goes through
and then blue path goes through.

128
00:08:51,700 --> 00:08:54,990
And by connecting these in
the final configuration,

129
00:08:54,990 --> 00:08:56,900
you will get final stable shape.

130
00:08:56,900 --> 00:09:00,390
But in the, in the middle,
while you are creating, you have,

131
00:09:00,390 --> 00:09:02,070
also, an intermediate shape.

132
00:09:02,070 --> 00:09:06,120
But in this intermediate shape,
all beads are moving around.

133
00:09:06,120 --> 00:09:08,920
It's very difficult to manually construct.

134
00:09:08,920 --> 00:09:10,450
So in order to be,

135
00:09:10,450 --> 00:09:14,810
make it easier to manually construct,
the process should be like this.

136
00:09:14,810 --> 00:09:20,680
The individual, the wire should close
one by one, based on individual faces.

137
00:09:20,680 --> 00:09:27,460
So, in, what they were in the intermediate
status, faces are closed one by one.

138
00:09:27,460 --> 00:09:29,060
So you won't have to do this.

139
00:09:29,060 --> 00:09:32,300
The system actually first
computes a face strip,

140
00:09:33,660 --> 00:09:39,210
on the design mesh and then compute
a wire, place wires along this face strip.

141
00:09:39,210 --> 00:09:44,344
And this face strip computation
is given as a Hamiltonian path on

142
00:09:44,344 --> 00:09:46,920
the graph consisting of faces.

143
00:09:49,260 --> 00:09:52,253
So, yeah,
this is a result of stripification, or

144
00:09:52,253 --> 00:09:54,070
computed Hamiltonian path.

145
00:09:54,070 --> 00:09:59,320
So, this path visits faces one by one,
and then we then put wires, so

146
00:09:59,320 --> 00:10:03,010
that wires completes these
faces in this order.

147
00:10:05,730 --> 00:10:10,910
So, yeah, that's it and the original paper
was called BD and published in 2012.

148
00:10:10,910 --> 00:10:15,060
And the step by step in,
instruction used in our work,

149
00:10:15,060 --> 00:10:20,240
was inspired by a previous method designed
for instructions, step by step for

150
00:10:20,240 --> 00:10:22,983
the furniture,
core selection like this one.

151
00:10:22,983 --> 00:10:27,939
And also our method also
contains a conversion of 3D,

152
00:10:27,939 --> 00:10:33,080
existing 3D mesh model to
a simple bead work mesh.

153
00:10:33,080 --> 00:10:38,130
And this work is in, in this part
is related to mesh simplification.

154
00:10:38,130 --> 00:10:43,750
And then good one example paper is this
one: Variational shape of approximation.

155
00:10:43,750 --> 00:10:46,580
So getting very detailed 3D mesh and

156
00:10:46,580 --> 00:10:50,080
these simplification methods be
done the very simplified mesh.

157
00:10:50,080 --> 00:10:51,950
And this may be interesting
thing to learn.

158
00:10:53,120 --> 00:10:53,620
Thank you.