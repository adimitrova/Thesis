[SOUND] Hi, this is Interactive Computer Graphics, week three. The topic we discuss here is 3D geometric
modeling. So the challenge behind this is user
interface is still mostly two-dimensional. So, the question is how to compliment in
missing information? So, mainly depths here. So use [UNKNOWN] 2D and how to get 3D from
2D. There's lots of problem with our progress
here. Our solution, in general, is a user interface, an automatic inference
leveraging domain specific knowledge. So if you do not know what you do, it's
almost impossible to infer dips, but if you know what you want to do, if you limit the domain and you can get
reasonable results. That's the basic idea behind the works I
will introduce here. And here are the topics that we will
discuss in this week. So first one is suggestive user interface
for modeling of architectural models. And then there's sketch-based modeling of
larger and stuffed things. And then we discuss shape control by
curves, and then flower modeling, and then
volumetric texture synthesis. The first one is suggestive interface. So, the work was published as Chateau, a
suggestive interface for 3D modeling. The motivation is here. So current graphical user interface is
dominated through these many buttons, menus, and even more,
nested menus. It's very hard to find design command
[UNKNOWN]. [UNKNOWN]
About the operation on what you want to do on the main screen, the
main field. So if we were working on 3D modeling and
if you want to do related to these three elements in the scene you can just
highlight these three, which hints the computer to infer
the request. And then computer looks at the hints, and then provides proposal, for the data
operations. In this case, the system proposes a box,
and those are our two possibilities. So, in other words, review the first given
arguments for the command, and then system
automatically infer the command. So let me show you a demo. So here is a three-dimensional modeling
system with a 3D space inside, and then you can sketch
lines in this way. But here, instead of using many commands
on the menu. We simply allow the user to highlight
lines. And then, for these highlights or hints,
system pro, pro presents some suggestions. Well, why is drawing a plane and another
is drawing triangle, the other is drawing a
left angle. And you can also ignore them and then
create more. And then given the in-sweep of [UNKNOWN]
lines, system predicts, or suggests to make a rectangle,
a box. And then, again, if you do a line here, then given this hint, system suggests to
cut a box. You can also go back and then add more
lines. And then given this hint, system suggests
to cut a corner. So in this way, user provides the hints to the system and then the system presents
suggestions. So, this way, user does not really quiet
the space [UNKNOWN] one, in the huge command [UNKNOWN], And then you can
forecast the visual content of the task. And if you highlight this, then the system
predicts, or suggests drawing plane, and the user draws for
example rectangle, triangle here. And if you highlight these three, system
suggests to make a face inside. And then if you highlight one more, the
system suggests extrusion. And one interesting operation is like this
one. If you highlight these two and also one
line here, about a third. And this is, it was exactly dividing to
the three. We use again also the line somewhere here,
and this is [UNKNOWN] divided into four. So in this way a user can generate this kind of diagram just by, computing
operations. [BLANK_AUDIO] And after some time operations, you can
get these kinds of results. And this kind of operation is very useful
for repetitions, and also some symmetric
structures and so on. Now, let me describe, briefly describe,
the implementation behind the, system. So, this is the input scene. So highlighted elements and then no
highlighted elements. So, taking this example input scene then system is equipped with multiple
suggestion engines, they kind of parallel engines working
independently and then each engine consists of two
parts. One is examination part and one other is
generator. And the examiner examines the scene, and
then tests whether the scene matches with
expected rule. And then if it passes examination, and then the generator generates the resulting
scene. So this is a very hardcoded program,
program module provided the programmer. But they all works in parallel. And then specific engine and the act of
specific input configuration. And here's our list of suggestion engines. We input method in this application. One is [UNKNOWN] given a hint. System generator [UNKNOWN] passing through
the hint. And also if you highlight closed roof, it
suggest polygon, perpendicular two lines suggest rectangle, [UNKNOWN] suggest a
box, and system suggest extrusion and pyramid
shape. Now these are resizing and bridges,
connecting two, two polygons and the extrusion and this is
a cutting out and also corner cutting and trimming and
intersection, duplication, repetition, mirror image and
so on. And the philosophy or concept is defined
as this. Standard user interface is like this. So the user provides very explicit command or very explicit instruction to the
computer. And then the computer just blindly, simply
follows the instruction. However, what we provide is more friendly,
human to human like interactions. So the user is working on the visual task
directly, and then computer implicitly observes the action and then
provides help and solution, and I think this kind of walking
style can be useful. One possible application is like this, so
in your PowerPoint or in any presentation, you
have alignment show. Alignment to is hidden somewhere in the
menu, and it's not easy to find. For example, in this PowerPoint, you can
get there from some way around. Home, and somewhere, I don't know [LAUGH]
height, alignment, and somewhere. But it's not easy to find. However, if you highlight these four
almost aligned element, I think it's pretty reasonable,
and also useful for the system suggest particular
alignment, in align left or align center, and suggest to the
user. And if the user likes it, then it just
create it, and it gets the result. And this can be a very powerful help for
the user. So that's it and the original paper was
published in 2001. And this work, our work is strongly
inspired by a previous system called the SKETCH
system. So this SKETCH system takes two
dimensional gestures and the system will automatically generate this
kind of three dimensional scene. So what they do is very interesting. So you input this 2D and you need to infer
3D position. To do it the system uses a [UNKNOWN] of
every object that has to be put on top of every
object. In this way, the computer computes 3D
depths and measures. Showing multiple candidates for values to
choose is also presented before, the presented work is called Design
Galleries and published in 1997. I also recommend you to take a look at
this work. Thank you.