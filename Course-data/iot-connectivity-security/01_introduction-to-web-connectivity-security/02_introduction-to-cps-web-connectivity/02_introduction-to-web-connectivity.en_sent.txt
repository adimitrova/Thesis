[sound] welcome back to the video lectures on web connectivity and security in cyber-physical systems.
in this lecture, we'll go through the basics of the internet and web connectivity, including some background information on the internet and the nuts and bolts of its operation, especially the internet protocol suite.
the basic communication protocol of the internet and its layer design will be discussed.
let's start with the internet.
a group of connected computers is a network.
a group of connected networks from a very large scale became the internet.
one way of understanding new technology is to look into its origins, why was it developed?
this is a technique we'll also use in later videos when we learn different protocols.
so to understand why there is a huge network of connected computers, let's look at its history.
the internet came out of the desire to have a robust, fault-tolerant network of computers.
there are two key takeaways here.
first, the network had to be robust and full tolerant, and second, it was for computers.
we see both in the modern internet.
we have a pocket base network where each pocket can take a different route to the destination.
and the effect of being designed for computers is that it's essentially not what we would call lightweight and power efficient.
take for example ethernet, designed for computers at a time when power was not a requirement.
it is one of the most power hungry connectivity technologies for cyber-physical systems out of the ones that we will discuss in this course.
we have been moving from an internet of connected computers to an internet of connected devices or things.
this requires new technologies or changes to the current ones to suit the needs of the new breed of systems.
the internet is the network of computers, but what actually carries information on top of this network?
one of the ways to carry and display information over this network, and here we mean internet, is the world wide web.
the world wide web is a way to organize and present information for people.
this is a common distinction that many of us generally get wrong.
internet connectivity means becoming a part of this large worldwide network.
web connectivity, on the other hand, means leveraging the web technologies to now share information over this network.
at the heart of these web technologies are hypertext, the hypertext transfer protocol or http, a web server, and a browser.
we need internet connectivity for these web technologies to work, and therefore, we will talk about both.
the technologies that enable us to connect our cyber-physical systems to the internet and the technologies that enable us to access and share over the web.
here is a short overview of the web and the internet.
the internet enables the existence of the world wide web.
the world wide web facilitates interaction and information sharing over the internet.
if the internet is a highway, the web is the moving cars.
let's continue a bit with the analogy of the internet being a highway and the web being the moving cars.
there can be more than just one type of cars moving the highway.
for example, there can be buses, trucks, vans, and motor bikes.
likewise, there is more than just web traffic on the internet.
there is e-mail, usenet, file transfer protocol, peer-to-peer sharing, and so on.
but what enables all of these to share the same network?
the technology that enables different types of traffic to share and go through the same network is tcp/ip or transmission control protocol/internet protocol, or commonly known as the internet protocol suite.
a protocol is a set of rules and methods.
you can think of it as the grammar of a spoken language.
these rules and methods facilitates a standard way of communicating and interacting.
the tcp/ip protocol suite is therefore a set of standards and methods that allow different devices and systems to communicate over the internet.
because of the standard, it doesn't matter what system, operating system, or application you have.
as long as it can say, speak tcp/ip language, it can communicate with others on the internet.
tcp/ip is divided into layers for simplicity and understanding.
as there are multiple technologies that make up tcp/ip, the classification into layers makes it easy to comprehend this inherent diversity.
it also enables the decoupling of one technology from another.
imagine having a wine glass with a detachable base and body.
you could change the base depending on the surface you'll be using.
if you need grip, you would use rigid base while the body would remain the same.
and if you want to taste different kinds of wine, you just change the body on the top.
in the same way with tcp/ip layers as you go from the top to bottom, you can decide which technology to use from each of the layers, the technology that best suits your needs.
and if you develop your own technology, you can place it in the appropriate layers for others to use.
there are four layers in the tcp/ip model, application, transport, internet, and link.
we will discuss them next.
here is an overview of each of these layers and their functions.
we will discuss the protocols on each of these layers, and their specifications in detail later on.
the top-most layer is the application layer.
if you are designing a protocol that allows different applications to communicate, it will be placed on this layer.
we are not talking about the specific application software but the methods that the application software will use to communicate with another application software over the network.
an example is one chat client sending a message to another chat client.
if both these clients use the chatting protocol at xmpp, it doesn't matter who designed the chat client or what platform it is running on.
they will be able to send and receive messages.
here, the application layer protocol is xmpp.
the layer beneath the application layer is the transport layer.
its purpose is to establish host-to-host communication from one device to another.
it receives data from the application layer, it doesn't care what this data is, and transmits the data to another process on another host computer.
imagine you have three browsers, chrome, firefox, and internet explorer.
and on the first one you entered google, on the second one you entered yahoo, and bing on the third one.
in this case, you send three http requests from three separate applications.
http is an application layer protocol.
the responses for these requests are appropriately provided to each application.
chrome gets the google page, firefox gets the yahoo page, and internet explorer gets the bing page.
now, all of them send similar requests, but the data didn't get mixed up.
why?
the transport layer, which provides the data to the application layer, is responsible for ensuring that each process receives what was intended for it.
moreover, this layer is responsible for reliability, congestion control, and multiplexing.
at the internet layer, which is the next lower layer, the source and destination addresses are attached to packets coming from the higher layers.
this layer is responsible for addressing and routing.
also, when a packet is received, it is the internet layer's responsibility to forward it to the appropriate transport layer protocol.
the link layer at the bottom of the protocol stack specifies the standards and methods that handle the physical link.
these protocols reside on the local link, meaning that they are limited to the scope of the local network.
for example, arp, or address resolution protocol, is used to figure out the physical address, that is the media access control or mac address against an internet protocol or ip address.
this is how your computer knows which local device an ip packet should be forwarded to.
a distinction to make here is that you need a mac address to send data in a local network and an ip address to send data across networks.
sending data across networks is an internet layer operation, and sending data within local network is a blink layer operation.
the tcp/ip link layer doesn't assume anything about the type of the physical medium and its issues.
it just assumes that an underlying physical link exists.
therefore, the link layer represents any media access protocol, including wireless protocols such as wi-fi, gsm, and bluetooth.
here are some example protocols for each layer.
as a recap, in this lesson, we looked at the internet, the world wide web, and the basics of the tcp/ip model.
in later videos, we will have a more detailed look at the different layers and their respective protocols.
[music]
