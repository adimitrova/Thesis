[MUSIC] Welcome to the final lesson on
the basics of TCP IP suite. So far we have looked into protocols that
help applications understand each other and protocols that help applications
build a communication link. Tn this video lecture,
we will look at the TCP IP layers and protocols that helps devices or
machines connect and exchange package. We will look at how you get the data
that applications have generated and take it out of the local machine and carry
it over the network to another device. This is where the Internet, or
network layer and link layer come in. First, the Internet layer. This layer is responsible for
addressing, routing, error handling, and of course, managing
data flow to the layer beneath it. The IP part in TCP/IP means the Internet
Protocol which operates on this layer. We will look in to
the Internet Protocol and see how it offers the functions that
the internet layer is supposed to provide. So, IP stands for the Internet Protocol. And it's the protocol that
everyone in the TCP IP suite relies on to transmit data
packets over the network. No matter what transport layer
protocol you use, whether TCP or UDP The data eventually is handled by IP. Like UDP,
it is a connection-less protocol meaning each data packet is considered unique and
there is no context maintained. Sending the current packet has no
relation to the previous or next packet. It's not a reliable transport mechanism. There is no guarantee that the packet
will be successfully delivered. As there is no link establishment
in advance and no assured delivery, the packet can take any path over
the network to reach a destination. This helps against link failures. If a router or a physical link goes down, the back end just takes
an alternative path. The Internet Protocol is
available in two versions. IPV version 4 or IPv4. And IP version 6 or IPv6. Both offer the same service, but
in a slightly different way. The very basic difference
between them is addressing. We will look into this later on. IP is also responsible for routing,
meaning finding a path for a packet to move around the networks
until it reaches the destination. If the receiving node is on the same
network, the packet is delivered directly. This is called local delivery. If the receiver is on another network, then the protocol delivers the message
to a device called a router. If the receiver is connected to
the router the message is passed to it. Otherwise, it is sent to the next
router and then to the next and so on. A jump from one router to
another is called a hop. It is theorized that you can reach
anywhere on the internet with a maximum of 64 hops, and reach more than
99% of the internet using 32 hops. Some protocols might have
their own limitations. For example, the routing information
protocol, or RIP, has a limit of 15 hops. Other routing protocols are, for example, open shortest path first, or OSPF and
Border Gateway Protocol or BGP. The Internet Control Message Protocol,
or ICMP, is used for reporting errors in
the delivery of IP packets. It is part of the IP Suite. Think of it running in parallel
with the normal IP functions. Imagine running two network
cables between the nodes A and B, the first one carries data from A to B. The second one carries
an error message from B to A. Only if the path between A and
B is blocked or unreachable. In this example, the network cable between
A and B represents standard IP packets and the network cable between B and
A carrying error messages represents ICMP. Whenever an IP packet can't be delivered,
the router on that point generates an ICMP packet,
and forwards it to the sender. IP doesn't act on the error message, but
sends it to the transport layer protocol, TCP or UDP. And they can then decide whether to
retransmit the lost data or not. Another important protocol
of the IP suite is IPSec. IP Security is a set of protocols for
securing communication between devices. Unlike, TOS and DTLS mentioned earlier,
this one operates in the internet layer. It will be discussed further
later on in the course. A little bit about the IP version 4. This is the most common version
of the internet protocol. The one you will most likely encounter. It has a 32 bit address space and can have 4.29 billion unique addresses. IPv4 address space is divided
into different portions, each portion is reserved for
a special purpose. Have you ever wondered why the default
IP address of every broadband router that you buy is 1.92.168.01? That's because the range is reserved for
private use. To build your own home network for
example. IPv4 addresses have a dotted
decimal notation and example at risk is shown here. IPv version 6 is the new version
of the internet protocol suite. The basic attributes and
functionalities are the same as in IPv4. But IPv6 has a 128 bit address space instead of 32,
and twice the header size. It's designed to replace IPv4. One particular problem with IPv4
is that there are more devices connected to the Internet then there are
available at vertices that you can assign. With IPv4, that unit is 4.29 billion. With IPv6, it is, well, try to count
the number of zeros on the screen. With more and more smart devices
connected to the Internet, reaching 50 billion by 2020
according to estimations. You need a large address pool. IPv6 provides you
the needed address space. Here's an example of an IPv6 address. Clearly it's not readable for human eyes
in the same way as the IPv4 address. Here you see the difference
between the IPv4 and IPv6 headers. The large address field of the IPv6
header is instantly noticeable. On the other hand the overall structure
of the IPv6 header is simpler. In the IPv4 header,
the fields with great text, the IPv4 attributes that
were not carried to IPv6. Remember, IPv6 is
designed to replace IPv4. They are not interoperable. This ends our discussion
on the internet layer. Now, we will have a quick layer of
the TCP-IP model, the link layer. So far, we have seen how data moves
across programs and networks. And now, we will look into how it goes
from one local network point to another. The link layer is the lowest
layer in the TCPIP model. It's responsible for
transmitting information from one point in the local network to
another point in the same network. So, in theory,
with the presence of this layer, you would be able to create
a local area network. Or be able to communicate locally even if
you don't implement the internet layer. The link layer acts as an interface
between the lower physical hardware implementation of the network and
the upper, more logical, software-focused implementation
of the network. The link layer has several functions. First, it provides local addressing. Let's look at ethernet, a system of connecting computers
in a local area network. Each ethernet adapter has a specific, unique address assigned by
the manufacturer called a MAC Address. A MAC Address is how a network adapter
knows who is who on the network. The difference between a MAC address and
an IP address is that MAC address are used for
identifying devices on the local network. And IP address are used to identify
devices across networks even globally. You can change your IP
address several times but still the data packet intended for
your device reaches you, how? Well, that's because of the MAC address. A link layer protocol called ARP or
address resolution protocol, has the job of identifying which IP
address corresponds to which MAC address. So when you change your IP address,
ARP updates the local table and puts the new address
against your MAC address. The link layer also provides
local error detection of errors that could have been caused
by noise on the network channels. The most common method is adding
cyclic redundancy check or CRC Codes. When you take the data from
the upper layers add the local MAC addresses of the destination
on yours add CRC codes for error detection and any other fields
required by the local lead protocol. This new packet of data is called a frame. Frames are what you then send
over the physical medium. Now, concerning the physical medium, there needs to be a way to handle
communication on the local network. To decide who has the right to use
the network cable for instance. Who can talk and for how long. And to assure there are no
collisions of signals. All of this is called media
access control, or MAC. Yes, this is where the name
MAC at risk comes from. Media Access Control includes
different methods to ensure successful communication, but these methods
are out of the scope of this lesson. The actual transmission of the data
bits over the network takes place in the form of signals. Electrical signals in
the case of ethernet and electromagnetic signals
in the case of WiFi. This is not actually regulated or
described in the TCP/IP model. The TCP/IP model doesn't care
about the physical characteristics of the network technology. This however does present
an interesting problem. What about standards like WiFi that
define both a physical layer and media access control. Where would you put WiFi
in the TCPIP model? Well As already stated in
another video lecture, for the sake of simplicity we will put
all the machine to machine, or M to M connectivity protocols like WiFi,
Bluetooth, and ZigBee under the umbrella
of the link layer. Here is an overview of what
we studied in this module. To your left is the TCP/IP Layered model,
and to the right are some of the associated
protocols at rest in the lectures. I hope you have now a better understanding
of all these layers and an idea of what the basic properties of a protocol
are when it belongs to a specific layer. In the next module, we will have
a closer look at the protocols that we sign on the application and link layers. [MUSIC]