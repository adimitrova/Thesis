music 
welcome to lesson 
transport layer protocol 
previously, we looked 
application layer protocols 
protocols designed to help programs 
services understand 
in this lesson, 
we will look transport layer protocols 
take date 
application layer services 
make sure reach service 
process destination end 
one thing that us 
familiar is an ip address 
an ip address is associated 
a machine host 
a way to make data 
reach that specific host 
multiple processes running 
that machine, outlook mail, 
firefox browser, ftp server, 
secure shell, remote desktop 
now, host got data 
you make sure that 
process receives data 
that intended 
this is transport 
layer protocols come in 
receive information 
lower layers 
pass to right user 
application service 
in this way, you multiple 
services applications running 
machine, although you one 
ip address network interface 
transport layer protocols 
a lot that 
establish manage 
connections between processes, 
divide data user 
applications chunks so 
that easier to transport 
transport layer protocols 
also offer congestion control, 
analyze network 
adjust throughput 
moreover, offer error 
correction to detect 
correct errors that occurred 
data transmission 
also offer 
services like reliability 
making sure that 
data is transferred 
received in order 
initially sent 
transport layer protocols dictate 
a packet is sent network 
simply hand data to 
lower internet layer, 
pick data internet layer 
in essence, operate end nodes, 
network 
therefore also 
called end to end protocols 
so a short round services that 
a transport layer protocol provide 
establish, manage, 
terminate connections 
handle flow data in case 
receiving end is slower 
smaller buffers 
make sure packets sent 
arrow free 
avoid much traffic network 
we will look two 
main transport layer protocols, 
mainly tcp udp 
transmission control protocol is 
a connection oriented transport 
layer protocol 
in internet protocol suite tcpip, 
this is acronym 
tcp comes from, 
a fairly complex protocol 
especially compared to 
counterpart udp, 
simply multiple 
services provides 
distinctive 
features tcp are, 
tcp offers ability to receive 
exactly numbers 
packets will send 
in order 
tcp packets therefore 
numbered making easier 
end system to regroup in order 
reliability tcp uses acknowledgements, 
transmission is 
acknowledged receiver 
if packet is acknowledged in 
a certain time frame, is retransmitted 
receiver also inform sender 
specific packets received 
tcp delays sometimes high 
upper layer application 
tcp waits 
data to received, 
puts data in order 
forwards to upper layer 
reliability is reason 
application layer protocols offer 
reliable communication 
structures rely tcp instead 
tcp offers bidirectional communication, 
parties send 
receive packets 
simultaneously 
tcp offers flow control, 
if receiver buffers small, 
tcp reduce rate transmission in 
order to avoid overflowing end system 
if receiver buffers full, 
receiver will start dropping packets, 
meaning sender will 
get acknowledgements 
this lack acknowledgments 
acts an indicator 
sender to either slow stop 
network congestion is reduction 
throughput 
much traffic network 
tcp offers a mechanism called slow start, 
starts transmitting 
lower number packets gradually 
increases until congestion occurs 
an indication congestion is 
lack acknowledgements 
that means either sender 
reached networks 
transmit capacity 
receiver cant handle anymore packets 
in cases scales back, 
this is a method to prevent host 
causing immediate congestion 
finally, to tcp 
organizes sends data 
tcp sends data in streams bytes 
takes data application layer, 
lets say bytes, 
chops pieces 
example, ten pieces bytes, 
sends pieces to network 
internet layer transmission 
hand take data in 
multiple bytes application layer 
example, ten pieces, 
bytes, 
send , bytes packet 
tcp is slow due to 
reliability controls 
another reason tcp slow 
is threeway handshake uses, 
initiator sends a synchronized packet 
receiver, 
upon reception synchronized packet, 
sends a synchronized acknowledge packet 
lastly, connection initiator 
sends an acknowledge packet 
this is we call tcp 
a connection oriented protocol, 
first establishes a proper connection 
we want to close a connection, 
there is even 
comprehensive four way handshake 
transport layer security, 
tls, is another transport layer 
protocol that secures 
communication between two parties 
a part tcp 
relies tcp, 
is we mentioning here 
this protocol will discussed later 
tcp is a reliable means 
communication therefore, 
used in situation 
a sure delivery is required 
this assured delivery 
comes cost time 
tcp is slow delays long 
will wait to reorder packets 
thats might best option 
time dependent applications 
http doesnt offer builtin 
reliability mechanisms but, 
runs top tcp, 
tcp handles that 
file transfer protocol, ftp, 
chatting protocol, xmpp, also use tcp 
xmpp is a chat protocol, so 
if you send a good night message 
message expression 
love to someone via xmpp 
you dont want message to get 
lost never reach destination 
tcp ensures that receiver 
gets emotions, 
well maybe a little late, 
will get 
tcp handle that networks 
congestions 
in unreliable network situations 
better to use tcp 
netflix uses tcp to send 
a movie to device 
you might say that 
movies real time 
tcp is slow, i dont want stuttering 
well, avoiding that stuttering 
is reason netflix uses tcp 
first tcps congestion 
control mechanisms will probe 
network use available 
bandwidth between you netflix 
secondly, tcp uses buffers to 
temporarily store received data 
therefore, local application 
prefetch data netflix servers 
well, this tcp, 
we will look udp 
user datagram protocol 
udp is another transport layer protocol 
unlike tcp, 
doesnt offer congestion control, 
reliable 
doesnt send data in packet streams 
also doesnt assure inorder delivery 
care if you receive duplicates 
also, there is three 
way handshake is so 
far good thing 
we said udp 
so exist 
would anyone use 
first all, things 
doesnt do, simple 
this makes light 
doesnt care connections 
handshakes, fast 
is stateless, meaning doesnt 
maintain session connection state 
request is treated 
a separate unique entity 
this also makes suitable 
simple request response queries 
tcp sends numbered packet streams 
reassembles end 
udp treats packet 
an individual complete message 
sends one complete message 
receives one complete message 
every sent receive request 
to show you difference 
between tcp 
udp formats, this is a byte tcp header 
this is an byte udp header 
this shows relative size differences 
between two simplicity udp 
udp use cases, 
is used real time streaming, 
timing is important 
in order delivery 
reliability is 
that important one 
two lost frames affect 
end user experience 
therefore, udp is suitable 
time sensitive applications 
voice ip 
multiplayer online games 
smaller header size udp compared to 
tcp makes udp suitable 
bandwidth constraint environments 
also, a lower processing 
overhead is beneficial 
small low power devices 
connectionless, udps good 
broadcasting well, 
especially iptv streaming 
server doesnt to 
maintain a separate state, 
session information connection 
treats message 
an independent entity, udp is generally 
good 
simple request response style operations 
protocols that employ benefit 
udp domain name service, dns 
dynamic host configuration protocol, 
dhcp, network time protocol, ntp 
in these, you send a query 
receive a response 
one message is sent, 
one message is received 
there is dtls 
datagram transport layer security 
is part udp 
used in conjunction udp 
this security protocol 
will discussed later 
in this lesson, we discussed basic 
functionalities transport layer 
we also looked transport 
layers protocols, tcp udp 
in another lesson, 
we will look internet layer 
see data is moved 
host network 
so far, we dealing data 
that is still local machine 
sound 
