1
00:00:00,079 --> 00:00:05,703
[MUSIC]

2
00:00:05,703 --> 00:00:07,924
Hello, welcome back.

3
00:00:07,924 --> 00:00:12,844
In this lesson, we will look into
the concept of public infrastructure, and

4
00:00:12,844 --> 00:00:15,796
learn about its two
important applications,

5
00:00:15,796 --> 00:00:19,369
namely digital signatures and
digital certificates.

6
00:00:20,420 --> 00:00:23,500
A public key infrastructure, or PKI,

7
00:00:23,500 --> 00:00:28,980
is a fundamental component of many
security protocols of the web.

8
00:00:30,600 --> 00:00:35,450
A PKI is a collection of all software,
hardware, people,

9
00:00:35,450 --> 00:00:39,860
policies, and
processes that aim to manage, generate,

10
00:00:39,860 --> 00:00:44,710
distribute, and revoke cryptographic
keys and digital certificates.

11
00:00:46,250 --> 00:00:49,946
Digital certificates
are documents that are used to

12
00:00:49,946 --> 00:00:52,555
prove the ownership of public keys.

13
00:00:55,481 --> 00:00:58,620
Public key cryptography
is a powerful tool,

14
00:00:58,620 --> 00:01:02,100
which is widely used in
many security solutions.

15
00:01:03,520 --> 00:01:08,330
One of the most important uses of
public key cryptography is to provide

16
00:01:08,330 --> 00:01:13,700
confidentiality for the information
in electronics communications.

17
00:01:14,880 --> 00:01:17,530
This is made possible
by encryption of data.

18
00:01:19,770 --> 00:01:25,400
Public key cryptography can also be
used for the following purposes.

19
00:01:25,400 --> 00:01:31,640
First, ensuring the integrity of
data in digital communication.

20
00:01:31,640 --> 00:01:35,277
Second, identification and authentication.

21
00:01:35,277 --> 00:01:41,745
Third, ensuring non-repudiation
in digital communications.

22
00:01:41,745 --> 00:01:47,440
Non-repudiation associates
the actions to individuals,

23
00:01:47,440 --> 00:01:50,370
so that they cannot deny
the actions they have performed.

24
00:01:52,230 --> 00:01:56,220
Fourth, facilitating
the establishment of trust

25
00:01:56,220 --> 00:01:58,950
between two parties that
don't know each other.

26
00:02:00,590 --> 00:02:04,960
Fifth, sharing a session key
in encrypted communication.

27
00:02:06,300 --> 00:02:11,640
As symmetric encryption is faster and
computationally simpler,

28
00:02:11,640 --> 00:02:16,660
the actual data is typically
encrypted using symmetric ciphers.

29
00:02:16,660 --> 00:02:20,321
While asymmetric or
public key ciphers are used for

30
00:02:20,321 --> 00:02:26,040
exchanging encryption keys of symmetric
ciphers in a communication session.

31
00:02:27,830 --> 00:02:32,451
Next, we are going to learn how
public key encryption is capable of

32
00:02:32,451 --> 00:02:34,525
providing these solutions.

33
00:02:37,800 --> 00:02:44,701
Along with encryption of data or session
keys, which provides confidentiality,

34
00:02:44,701 --> 00:02:50,430
public keys systems can also be used for
making digital signatures.

35
00:02:51,740 --> 00:02:57,853
Similar to normal signature on a paper,
a digital signature is a technique for

36
00:02:57,853 --> 00:03:03,136
providing authentication and
non-repudiation for the sender and

37
00:03:03,136 --> 00:03:07,878
ensuring integrity of data in
electronic communications.

38
00:03:11,829 --> 00:03:14,200
Let's see how a digital signature works.

39
00:03:16,670 --> 00:03:20,340
Suppose Alice and
Bob want to communicate with each other.

40
00:03:22,020 --> 00:03:26,840
Both of them have a pair of keys,
including one public key and

41
00:03:26,840 --> 00:03:27,640
one private key.

42
00:03:29,300 --> 00:03:31,340
Alice has Bob's public key.

43
00:03:32,970 --> 00:03:38,080
So, as she can encrypt her
message using his public key and

44
00:03:38,080 --> 00:03:40,690
send the encrypted message to him.

45
00:03:42,350 --> 00:03:47,348
As we have mentioned in another lecture,
no one, including Alice herself,

46
00:03:47,348 --> 00:03:53,110
can decrypt the message, except the one
who has the corresponding private key.

47
00:03:54,880 --> 00:04:01,731
So, Bob receives the message, and
decrypts it with his private key.

48
00:04:01,731 --> 00:04:07,766
In fact, anyone who has Bob's public key
will be able to communicate with him,

49
00:04:07,766 --> 00:04:12,824
so Bob needs to make sure that
the message was really sent by Alice.

50
00:04:16,416 --> 00:04:20,182
In a paper based communication,
Alice could sign the paper so

51
00:04:20,182 --> 00:04:23,450
that Bob could authenticate
her with her signature.

52
00:04:24,610 --> 00:04:27,360
Likewise in digital communication,

53
00:04:27,360 --> 00:04:31,280
Alice needs to associate her
digital signature with her message.

54
00:04:34,240 --> 00:04:40,476
To do that she computes the hash
value of the whole message,

55
00:04:40,476 --> 00:04:43,979
which is called message digest.

56
00:04:43,979 --> 00:04:49,107
Then she needs to encrypt the message
digest using her private key.

57
00:04:51,423 --> 00:04:54,473
The result is Alice's digital signature.

58
00:04:57,968 --> 00:05:02,204
The message itself is encrypted
with Bob's public key.

59
00:05:04,560 --> 00:05:09,763
Now she can append the digital
signature to the encrypted message and

60
00:05:09,763 --> 00:05:10,935
send it to Bob.

61
00:05:14,203 --> 00:05:19,392
Bob receives both message and
Alice's digital signature.

62
00:05:19,392 --> 00:05:23,453
First, he decrypts the message
using his own private key.

63
00:05:26,218 --> 00:05:30,348
Then he computes the message
digest of the received data,

64
00:05:30,348 --> 00:05:33,138
using the same hash function as Alice.

65
00:05:36,949 --> 00:05:42,896
Then he decrypts the digital
signature with Alice's public key and

66
00:05:42,896 --> 00:05:45,200
gets the message digest.

67
00:05:48,130 --> 00:05:52,200
He then compares the two versions of
the message digest with each other.

68
00:05:54,460 --> 00:05:56,650
And if they are identical,

69
00:05:56,650 --> 00:06:00,029
Bob can conclude that the message
has been sent by Alice.

70
00:06:01,500 --> 00:06:04,660
Moreover, he can also ensure
that the message has not

71
00:06:04,660 --> 00:06:06,610
been altered before he received it.

72
00:06:08,900 --> 00:06:12,920
Since Alice has signed
the message with her private key,

73
00:06:12,920 --> 00:06:19,060
anyone who has her public key can
verify if she has sent the message.

74
00:06:19,060 --> 00:06:22,698
Therefore, she will not be
able to deny her signature.

75
00:06:22,698 --> 00:06:27,100
This guarantees non-repudiation
of Alice's message.

76
00:06:28,550 --> 00:06:34,510
So, we learned how a digital signature,
which employs public key encryption,

77
00:06:34,510 --> 00:06:38,684
can ensure authenticity,
integrity and non-repudiation.

78
00:06:40,260 --> 00:06:43,190
Now, consider the same Alice and
Bob scenario.

79
00:06:44,860 --> 00:06:49,260
Before communication starts,
Alice needs to get Bob's public key.

80
00:06:50,860 --> 00:06:55,180
Imagine that before Alice has
received Bob's public key,

81
00:06:55,180 --> 00:07:00,940
an adversary breaks into the system and
sends Alice another public key,

82
00:07:00,940 --> 00:07:03,890
which he has created pretending to be Bob.

83
00:07:05,420 --> 00:07:07,050
So the question is,

84
00:07:07,050 --> 00:07:11,090
how can Alice authenticate
the public key she has received?

85
00:07:12,300 --> 00:07:15,420
How can she be sure that
it really belongs to Bob?

86
00:07:17,070 --> 00:07:19,480
Well, the solution is rather obvious.

87
00:07:20,550 --> 00:07:27,047
Alice can rely on a trusted third
party to certify Bob's public key.

88
00:07:27,047 --> 00:07:34,272
This third party is called
a certificate authority, or CA.

89
00:07:34,272 --> 00:07:38,718
And the document that contains
the verified public key is

90
00:07:38,718 --> 00:07:41,223
called a digital certificate.

91
00:07:41,223 --> 00:07:46,899
CAs are usually companies that issue
certificates and charge their customers.

92
00:07:50,509 --> 00:07:53,040
Let's see how a digital certificate works.

93
00:07:54,760 --> 00:08:00,980
Suppose that Bob wants to
send his public key to Alice.

94
00:08:00,980 --> 00:08:07,180
Both Alice and Bob know a CA and trust it.

95
00:08:07,180 --> 00:08:11,105
So Bob sends his public key and

96
00:08:11,105 --> 00:08:16,924
his identification information to the CA.

97
00:08:16,924 --> 00:08:22,899
The CA verifies Bobâ€™s identity,
and then generates a certificate,

98
00:08:22,899 --> 00:08:28,784
which contains Bob's public key and
some additional information.

99
00:08:28,784 --> 00:08:33,130
The CA signs the certificate with
its private key and sends it to Bob.

100
00:08:36,550 --> 00:08:39,540
Now instead of sending
the public key as such,

101
00:08:40,720 --> 00:08:43,949
Bob sends his public key
certificate to Alice.

102
00:08:45,200 --> 00:08:48,020
Alice can then check the certificate and

103
00:08:48,020 --> 00:08:52,300
get Bob's authentic
public key by decrypting

104
00:08:52,300 --> 00:08:57,170
the CA's signature in the digital
certificate with the CA's public key.

105
00:08:59,630 --> 00:09:04,390
The CA manages public keys
it has certified by, for

106
00:09:04,390 --> 00:09:07,980
example, revoking compromised keys and

107
00:09:07,980 --> 00:09:12,480
setting validation and
suspension periods for keys.

108
00:09:12,480 --> 00:09:15,570
This kind of status information
is part of a certificate.

109
00:09:16,950 --> 00:09:20,796
In this lesson,
we learned how public key encryption and

110
00:09:20,796 --> 00:09:26,408
mechanisms that use public key encryption
can ensure authenticity, integrity,

111
00:09:26,408 --> 00:09:31,680
non-repudiation, and establishment
of trust between two parties.

112
00:09:31,680 --> 00:09:37,509
In the next video lecture, we will
learn how the public key infrastructure

113
00:09:37,509 --> 00:09:43,631
can be used in communication security
protocols such as DLS, SSL, and DTLS.

114
00:09:43,631 --> 00:09:47,529
[MUSIC]