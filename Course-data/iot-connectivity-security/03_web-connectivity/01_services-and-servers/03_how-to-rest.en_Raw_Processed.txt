music 
welcome to lesson 
restful web services 
in this video lecture, 
we will a deep look rest 
is rest, actually 
rest, representational state transfer, 
is an architectural style 
a set guidelines to 
serve network applications 
specifies a set constraints 
developing web services, 
if constraints met 
we call that service restful 
first constraint is separation 
client server functions 
architectures 
client doesnt care 
task executed server 
example, database access 
memory management 
server doesnt care 
client operates 
this way 
developed independently 
clients send multiple requests, 
requests 
independent 
responses clearly identified 
cacheable noncacheable 
this is a performance constraint 
multiple clients might request 
resource, in this case, 
caching will help in reducing response 
time reducing a server load 
there a uniform way 
identifying accessing resources 
resource must a uri 
representation 
representation in json xml 
last constraint is that 
an application multiple layers 
layers between client server, 
like cash servers load balancers 
if there is a load balancer 
between a client a server, 
client shouldnt see 
beyond load balancer 
server shouldnt concerned 
load balancer is talking to 
this restriction reduces complexity 
makes easy to add remove layers 
a design consideration 
rather a constraint, 
there one to one 
mapping between crud operations 
that is create, read, update, 
delete operations, 
operations provided server 
in light constraints, 
lets look http fits rest 
https is stateless, 
a clientserver model, 
supports caches, 
uses urls to identify resources 
last design consideration 
is mapping craft operations 
this done a http 
methods shown in table 
we see that is simple to build 
a restful web service via http 
we use rest exposing 
functionality an embedded 
cyber physical system to web 
first all, 
a central idea rest is a resource 
a resource is a component 
an application 
that uniquely identified 
logic applies 
to embedded systems 
we resources in 
form sensor 
actuators, need to 
individually identified accessed 
identification is achieved via uris, 
theyre representation via json 
an access comes a http 
methods like get post 
in rest, we call crud operations, 
create, read, update delete 
in cases, 
operations that we need sensors 
create stages, 
update them, shut 
rest json, used together, 
create a lightweight 
representation resources 
lightweight makes 
power efficient 
statelessness rest means that 
is memory efficient a server 
doesnt store main information 
state connection 
so, rest fulfill 
design considerations, 
also fulfills realworld considerations 
related to limited power memory 
we looked rest, applicability 
to embed in systems in general 
we will talk best practices 
to follow designing 
webenabled embedded systems 
first all, identify sensors 
functionalities that available to you, 
decide ones you 
would like to enable a resource 
resources 
a simple 
focused uri to identify access 
finally, actions would you like 
to allow resources 
to better understand, we will look 
an example development board 
screen, you see a texas 
instruments smart rf evaluation board 
an accelerometer, 
light sensor, lcd display, 
an sd card slot, 
push buttons leds 
in this case, 
is easy to identify resources 
mentioned 
components resources 
that uniquely identified 
accessed 
next step is to assign 
one a unique logical uri 
here you see an example mapping 
uris resource 
next step is to specify 
operations you would allow 
resource 
so you enter in a browser url 
whichever sensor you want to access, 
response will depend whether 
specific http method is allowed 
if allowed you will 
get an okay status message 
value sensor 
if method is allowed, you will get 
method allowed status message 
screen you see an example 
mapping methods to resources 
we will reading data 
accelerometer 
licencer, method 
we use is get 
an led a get method 
to tell us status 

a put method to change that status 
lcd updated to output certain 
information, that we need put 
if we reading writing to sd 
card, we methods, 
create a file, update a file, 
read it, delete 
in this lesson, we looked 
rest style designing web services 
is beneficial 
cyber physical systems, 
we described an example mapping 
rest to an embedded development board 
next we will learn another type 
service called cloud computing 
music 
