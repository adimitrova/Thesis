sound 
this week im going to talk physics 
engines 
now, physics engines a really 
powerful tool to get animation 
action in in, in interactive programs 
great things physics engines is 
that use mathematics, physics, to 
simulate movement objects 
so you get objects that move 
like in real world 
really if youve got a physic sense 
you dont to write much code 
that animation, 
physics engine will handle a lot 
you 
theyre hard code to write yourself, 
youve got that mass 
encapsulated 
you create objects will 
behave much would in real 
world 
youre going to work a physics 
engine called boxd, 
everything in two dimensions 
so, slightly simpler a 
three dimensional physics engine 
suits our, needs well 
its, writing d d 
programs, in this course 
used extensively 
probably famously in game angry 
birds which, youve probably heard 
considering one 
successful video games time, 
now, i expect 
so, is a physics engine 
a physics engine works objects, 
moves objects around 
so here we a circle rectangle, 
objects moved forces 
so in physical world, forces 
types objects that causes to 
move around 
well talk in detail 
things in this lecture 
first i need to sort talk a bit 
whole world is represented 
now, you actually need to an 
explicit representation physics 
world well objects in 
ill come back to you create 
i say that theres something a 
little different physics 
world is represented weve done 
until 
to weve upcentered everything in 
terms pixels screen, thats 
fine 
thats, dealing screen 
we work distances 
pixels 
this is real world isnt broken 
squares 
if you really want to simulate 
real world properly 
you to seem like theres a 
continuous world, things dont change 
that much 
you get rid grid 
youre still using x y position 
longer whole numbers, 
fractional 
x y still fundamental 
representation positions 
directions to work 
ill talk a little bit to 
discuss x y deeper 
mathematically 
that will help a little bit 
discussing physics engines 
i wont get heavily mathematical, ill 
prepare you a few things 
x y arent really separate things 
they, a way 
representing a position an object 
screen 
we combine together a 
single thing we call a vector represented 
this line in this diagram 
so here we a vector 
well showing like v 
we think an x a y, 
thats position 
we also think 
direction a length 
looks like an arrow, 
pointing in a certain direction 
looks align, a certain length 
we called length align filled 
two hallow bars, across it, we might need 
that notation much 
weve got vectors, theyre 
representations x ys 
mathematically vectors also include a 
bunch mathematical operations we 
them, quite 
powerful 
so, example if we negate a vector, 
minus v, is minus x minus y, 
points in opposite direction 
if we multiple vector a number, 
say vector multipled is 
times x, times y 
we change length vector gets 
longer in this case we go 

if weve got a vector representing a 
position, weve got another vector 
we put that vector starting 
end points end point 
original one p, except v starts 
end point p 
we take it, take us to a new 
position 
that position is actually 
resulting taking p, taking v 
adding together 
so we add a vector v to vector p 
get a new vector p, if we that, 
we opposite subtract 

so if p is px, py, p is px, py we 
know we done that p is 
equal to p plus v 
well that means that v is equal to p 
minus v 
so we subtract p, p p 
again, subtracting p, p px 
that, if you look diagram 
here, v is vector that goes 
point p to point p 
so subtracting one, vector one 
point vector another point we 
get vector that goes between 
two 
i use that in a couple slides to 
a calculation 
so back to physics engine, cough, 
i said, weve got objects 
weve got forces applied to them, 
exist in world 
lets look first objects 
so weve got a physics object this is 
a simplified representation an object 
a shape, a simple shape 
say that we mostly deal circles 
rectangle occasionally well deal 
complex objects 
i think example i think 
in circles rectangles 
got a position, got an angle, 
going to take unknown 
got a mass, is a physical 
quantity is much resists 
forces 
so you need for, if got a high mass, 
youll need force to push 
so things that define 
physics objects 
physics object exist within a world 
so, this is you create a world 
create a new physics world by, an 
object, you available physics equals 
new physics 
you give size world, 
is width height the, 
the, window normally 
we use this, which, basically this is 
a representation program 
so passing, putting, passing this 
physics world, youre linking to 
program 
then, the, next thing we to 
physics world is set density 
thats quite important used 
to set mass objects, so 
you dont need to set mass an 
object explicitly 
will calculate big 
object is based density, so 
bigger an object, mass 
going to 
density is going to control 
massive objects is 
so if you increase density, 
objects going to resist movement 
more, youre going to need bigger forces, 
theyre going to move a bit less 
exception to that is if you set 
density to zero 
if you set density to zero, youre 
obviously going to get affected 
forces 
so theyr going to move, theyre 
going to static in physics 
implementation 
you automatically creates you 
static objects sides 
screen, so things bounce sides 
screen 
so weve seen created that physics 
world, we start creating objects 
thats a little bit like drawing 
objects in, in processing 
weve got a function physics 
createrect, so physics object 
thats creating rectangle 
creating a rectangular object 
in processing, to create a 
rectangle we need four numbers, 
a little bit different, like in placing 
first two numbers top left 
next two numbers bottom 
right rectangle, height 
width, so that something to 
remember 
is that top left bottom 
right rather top left weidth 
height 
we also create circule objects 
a different function creates 
circle 
thats three parameters, x y 
positioned center circle 
radius circle, big 
circle is 
great thing is, weve 
created physics objects, will 
part simulation 
physics world will carry 
simulating you dont really need to 
much 
youll already get quiet 
compelling interaction 
problem is, 
physics world, theres nothing graphical 
screen 
so, for, physics objects you 
also need to create a graphical object 
a graphics objects is much we, 
is used to 
theyve complex shapes, theyve got 
colors 
could images, so this is exactly 
drawing 
now, necessarily going to 
a representation an object in there 
going to use 
drawing trechniques that weve using 
to 
ill show you an example to 
that 
important thing you need to 
is link physics to graphics 
so you need to get precision 
rotation physics bodies 
apply that to whatever graphics 
youre going to 
so, first we get objects position, 
bodygetworldcenter 
so thats center object in 
worlds coordinates 
so if you remember i went back weve got 
pixel coordinates that we use 
screen 
weve got a set vector coordinates 
that using behind scenes in 
physics engine 
sometimes you want to 
different 
in fact, time youre likely 
to want youre one unit per 
pixel is a bit small 
roughly physics world works in meter 
so one unit is a meter in terms 
physical simulation 
so one meter per pixel seems 
really small, so you might want 
even 
so, to get coordinates back 
pixels, you call physicsworldtoscreen, 
so world coordinates to screen 
coordinates, screen coordinates to 
pixels 
result that is a vector, 
vec type, so a variable vec, 
is a vector, a position 
you also get angle object, 
physicsgetangle, you pass in 
object 
you use translate 
rotate, we saw last week 
so, you need to get x y 
positions vector, plus x, plus 
y, put in translate, 
you rotate angle 
ive converted that in to radiance, 
we saw last week 
so we dont, original angles 
degrees, ive putting in a minus sign 
directions 
in physics world, different 
directions in the, in screen worlds 
put that in, we 
whatever we like to 
in this case, im drawing an image 
you must remember to put pressure pot 
matrix around to make sure that 
objects move independently 
music 
