1
00:00:03,350 --> 00:00:17,882
[SOUND]. 

2
00:00:17,882 --> 00:00:21,221
Hello. 
In this lesson I'm going to teach you how 

3
00:00:21,221 --> 00:00:25,880
to access accelerometer data from your 
mobile device. 

4
00:00:25,880 --> 00:00:30,150
most mobile devices have an accelerometer 
in which essentially it allows you to 

5
00:00:30,150 --> 00:00:35,040
figure out what angle the device is being 
held at. 

6
00:00:35,040 --> 00:00:39,655
And of course, we're going to use this 
for creative purposes, to control sound 

7
00:00:39,655 --> 00:00:47,024
and visualization. 
The accelerometer will give you three 

8
00:00:47,024 --> 00:00:53,960
values which relate to the various angles 
from the phone, so it can be twisted like 

9
00:00:53,960 --> 00:01:00,680
this or like this, or like this. 
So lets have a look at those. 

10
00:01:02,370 --> 00:01:06,924
So, here's some code which will, will 
create an accelerometer and print out 

11
00:01:06,924 --> 00:01:11,184
some data from it. 
So, let's run this on the phone, and see 

12
00:01:11,184 --> 00:01:15,710
what comes out. 
First of all, I'm going to type it in, so 

13
00:01:15,710 --> 00:01:18,145
we need at the top, we create a global 
variable. 

14
00:01:18,145 --> 00:01:23,430
And the type of the variable is 
accelerometer. 

15
00:01:24,840 --> 00:01:30,510
And this is a built-in class for those of 
you who've done a bit more programming. 

16
00:01:30,510 --> 00:01:33,835
Which comes with our audio and graphics 
API. 

17
00:01:33,835 --> 00:01:37,900
Let's call, I'm going to call it XL. 
So in set-up. 

18
00:01:37,900 --> 00:01:43,311
As usually we create teh variable XY 
equals new acceleromter. 

19
00:01:43,311 --> 00:01:47,304
Okay so that's. 
What we're going to do and now I can 

20
00:01:47,304 --> 00:01:51,870
quere that accel to now get some 
information. 

21
00:01:51,870 --> 00:01:58,170
So lets just for example print out the X 
value. 

22
00:01:58,170 --> 00:02:07,160
Okay so I has an X Y and Z value. 
Well we put them all out actually and 

23
00:02:07,160 --> 00:02:17,702
we'll do X is Y is, and Z is. 
Okay. 

24
00:02:17,702 --> 00:02:21,780
And I just need to edit this. 
So that is getX, getY, and getZ. 

25
00:02:21,780 --> 00:02:25,490
So I've got 3 lines in my draw method 
there. 

26
00:02:25,490 --> 00:02:30,770
So every time draw gets called it's going 
to ask the accelerometer, what is your 

27
00:02:30,770 --> 00:02:35,410
current X position? 
What's your current Y position? 

28
00:02:35,410 --> 00:02:39,388
What's your current Z position? 
Okay, so let's run that on the device, 

29
00:02:39,388 --> 00:02:42,694
and we're going to just look at the 
console to see the numbers that are 

30
00:02:42,694 --> 00:02:49,182
coming out. 
Right, there are the numbers coming out 

31
00:02:49,182 --> 00:02:53,305
of the device. 
That's telling me the current position of 

32
00:02:53,305 --> 00:02:55,380
the device. 
Now if I pick it up. 

33
00:02:56,640 --> 00:03:01,465
And start moving it around. 
You can see depending on which angle I'm 

34
00:03:01,465 --> 00:03:04,290
changing at different numbers are 
produced. 

35
00:03:05,320 --> 00:03:09,800
And basically the range is from minus ten 
through to ten. 

36
00:03:09,800 --> 00:03:15,930
So when you're at the most extreme angle 
the numbers will go up to ten. 

37
00:03:15,930 --> 00:03:21,010
And, when you're at the opposite extreme 
they'll get a minus ten. 

38
00:03:22,420 --> 00:03:25,192
So the values that come out from the 
accelerator are in the range minus ten to 

39
00:03:25,192 --> 00:03:28,940
ten depending on the different angles 
you're holding the phone at. 

40
00:03:31,410 --> 00:03:35,220
So how can we use this creatively? 
Well, first of all let's just see if we 

41
00:03:35,220 --> 00:03:40,010
can use it to set the color of the 
background. 

42
00:03:40,010 --> 00:03:43,755
So we're going to do this. 
So we'll create some variables, which are 

43
00:03:43,755 --> 00:03:49,270
going to be our red, green and blue. 
And we can set the red value using the 

44
00:03:49,270 --> 00:04:00,870
accelerometer data. 
And then the green, and blue. 

45
00:04:00,870 --> 00:04:09,952
Right. 
But remember, these values are in the 

46
00:04:09,952 --> 00:04:19,020
range minus 10 to 10. 
And the range, the range that we need 

47
00:04:19,020 --> 00:04:25,030
for, colors is 0 to 255. 
So well done if you've spotted that 

48
00:04:25,030 --> 00:04:33,520
already now what can I do here so to get 
into the range 0 to 255 so I add 10. 

49
00:04:33,520 --> 00:04:41,170
Okay that puts it in the range 0 to 20. 
And then, I can just. 

50
00:04:41,170 --> 00:04:43,820
Do an approximation here and just times 
it by 10. 

51
00:04:43,820 --> 00:04:46,920
So it goes up to 0 to 200. 
Okay. 

52
00:04:46,920 --> 00:04:51,317
That's near enough. 
You can calculate that accurately by 

53
00:04:51,317 --> 00:04:55,524
dividing 10 by 
255 by 10. 

54
00:04:55,524 --> 00:05:01,670
sorry, 255 by 20. 
so we could do that. 

55
00:05:01,670 --> 00:05:05,350
We could do 255 by 20 to do it really 
accurately. 

56
00:05:05,350 --> 00:05:11,000
[SOUND]. 
Okay. 

57
00:05:12,230 --> 00:05:14,050
So let's do that with the other ones as 
well. 

58
00:05:14,050 --> 00:05:14,550
[SOUND]. 
Right. 

59
00:05:21,010 --> 00:05:25,735
And then, now this, remember that these 
that come out are things like 0.15 or 

60
00:05:25,735 --> 00:05:35,000
-9.3 which are floating point numbers. 
But I've declared my RGB's as integers. 

61
00:05:35,000 --> 00:05:40,124
So what I need to do is then cast it, 
convert it to an integer before I can use 

62
00:05:40,124 --> 00:05:45,620
it. 
Finally, I'm going to set my background 

63
00:05:45,620 --> 00:05:52,634
color using these values R, G, B. 
Okay so, we've used the accelerometer 

64
00:05:52,634 --> 00:05:57,209
data to set up some red green and blue 
value and then we're going to use that to 

65
00:05:57,209 --> 00:06:02,850
set up the background color so lets hit 
play. 

66
00:06:02,850 --> 00:06:10,975
And see what happens to the background 
color of the screen as we move the device 

67
00:06:10,975 --> 00:06:13,928
around. 
[SOUND]. 

68
00:06:13,928 --> 00:06:26,820
Okay. 
So we pick up the device. 

69
00:06:27,880 --> 00:06:37,080
And as I move it around, you can see the 
background color changes. 

70
00:06:37,080 --> 00:06:40,797
Now it, it seems to be changing kind of 
slowly, so it kind of jumps from one 

71
00:06:40,797 --> 00:06:45,520
color to the next. 
That's because the accelerometer data 

72
00:06:45,520 --> 00:06:49,215
updates quite slowly. 
So remember, for example, the audio, what 

73
00:06:49,215 --> 00:06:51,780
we did with audio data, that updates very 
fast. 

74
00:06:53,070 --> 00:06:57,030
so you know, that's very smooth and very 
rapid, but it's, other types of data are 

75
00:06:57,030 --> 00:06:59,924
slower. 
So, for example, the frame rate in 

76
00:06:59,924 --> 00:07:03,475
processing, which is the number of times 
a second it cause a draw function is, is, 

77
00:07:03,475 --> 00:07:07,730
the default is 60. 
Whereas the number of samples a second is 

78
00:07:07,730 --> 00:07:12,034
44,100 when you're dealing with audio. 
So there's all these different rates of, 

79
00:07:12,034 --> 00:07:14,644
of data flow. 
So what we're dealing with is a flow of 

80
00:07:14,644 --> 00:07:19,320
data from a sensor in the phone which is 
coming in at certain rate. 

81
00:07:19,320 --> 00:07:26,980
that's not very high rate in this case. 
Okay so that, that's dealing with 

82
00:07:26,980 --> 00:07:29,870
accelerometer data and sending it to the 
background color. 

83
00:07:33,100 --> 00:07:37,452
In the next section, I'm going to talk 
about how we can map that accelerometer 

84
00:07:37,452 --> 00:07:41,611
data to a playback control. 
So there's a line here which if you're 

85
00:07:41,611 --> 00:07:44,244
quick you're going to. 
Pause the video and quickly go and type 

86
00:07:44,244 --> 00:07:47,901
it in, see what it does. 
So lets just lets just put the extra code 

87
00:07:47,901 --> 00:07:50,946
we need to be able to do this line here. 
OK. 

88
00:07:50,946 --> 00:07:55,053
So back to here. 
So now I need to create an audio player 

89
00:07:55,053 --> 00:08:01,400
and I want to control the speed with the 
accelorometer. 

90
00:08:01,400 --> 00:08:04,586
So I can twist the phone around and it 
will slow down and speed up the, the 

91
00:08:04,586 --> 00:08:10,067
playback of the audio. 
So we do the usual thing, create the 

92
00:08:10,067 --> 00:08:16,298
maxim variable, create an Audio Player 
variable, and then initialize it, maxim 

93
00:08:16,298 --> 00:08:21,170
equals new, maxim. 
This should be familiar by now. 

94
00:08:21,170 --> 00:08:25,868
Oops. 
And audio so player equals 

95
00:08:25,868 --> 00:08:35,685
maxim.loadFile, and the name of the file. 
So, I'm going to use the, the beat we've 

96
00:08:35,685 --> 00:08:38,560
been using. 
Okay, so thats the player. 

97
00:08:38,560 --> 00:08:44,300
So in the draw method, we just make sure 
the player is playing. 

98
00:08:44,300 --> 00:08:47,420
In fact we can. 
So we do player play. 

99
00:08:47,420 --> 00:08:50,750
If the player is already playing we would 
just ignore that. 

100
00:08:50,750 --> 00:08:56,568
Just make sure its playing. 
then, what we're going to do is say, 

101
00:08:56,568 --> 00:09:03,480
player, and set the speed. 
Now, let's, let's do a calculation here. 

102
00:09:03,480 --> 00:09:06,693
We're going to do this as a float, 
because remember speed so if we pass in a 

103
00:09:06,693 --> 00:09:10,008
speed of two, then it will playback the 
audio twice as fast, so its going to skip 

104
00:09:10,008 --> 00:09:14,680
through all those samples twice as 
quickly. 

105
00:09:14,680 --> 00:09:17,830
If we, if we set the speed to one it will 
play back at the normal speed so it will 

106
00:09:17,830 --> 00:09:23,309
sound as it was originally recorded. 
now, so, the kind of, an interesting 

107
00:09:23,309 --> 00:09:27,430
range for speed, as we've seen with the 
DJVJ. 

108
00:09:27,430 --> 00:09:31,420
It might be zero through to two. 
So we need to get that accelerometer 

109
00:09:31,420 --> 00:09:34,220
data, and scale it to the range, zero to 
two. 

110
00:09:34,220 --> 00:09:37,612
Just an organizational note, that I've 
just placed these variables from the 

111
00:09:37,612 --> 00:09:40,845
middle of the code up to the top of the 
method. 

112
00:09:40,845 --> 00:09:45,720
Now, everyone has their own way of doing 
things when it comes to programming. 

113
00:09:45,720 --> 00:09:48,880
There's many ways to, to program and to 
organize your code. 

114
00:09:48,880 --> 00:09:51,381
For me, I quite like to put my variables 
at the top of the method so that it's 

115
00:09:51,381 --> 00:09:54,160
really clear. 
All of the variables I'm going to use in 

116
00:09:54,160 --> 00:09:57,563
that method. 
its a, its a neater way to do it in my 

117
00:09:57,563 --> 00:10:00,058
mind. 
So, so I've just placed those at the top 

118
00:10:00,058 --> 00:10:03,790
there. 
Now, the speed. 

119
00:10:03,790 --> 00:10:07,550
Remember, I said an interesting range for 
the speed was, say, zero to two. 

120
00:10:07,550 --> 00:10:13,910
So what we're going to do is take that 
accelerometer data like, this, okay? 

121
00:10:13,910 --> 00:10:19,310
And we're going to scale it to the range, 
zero to two. 

122
00:10:19,310 --> 00:10:21,930
So we're going to do add ten. 
So that puts it in the range zero to 20 

123
00:10:21,930 --> 00:10:27,139
again. 
And then we can just divide it by 10 and 

124
00:10:27,139 --> 00:10:32,950
that will put it in the range 0 to 2. 
So then we use that set the speed. 

125
00:10:32,950 --> 00:10:40,364
So lets see how that goes. 
I'm using X so that's me twisting the 

126
00:10:40,364 --> 00:10:45,562
phone like this. 
So hopefully what this is going to do is 

127
00:10:45,562 --> 00:10:48,978
is if you like replace what we did last 
week which is the having to touch the 

128
00:10:48,978 --> 00:10:52,450
screen to change the speed now we can 
actually just move the phone to change 

129
00:10:52,450 --> 00:10:56,929
the speed. 
So it becomes maybe a more embodied 

130
00:10:56,929 --> 00:10:59,595
experience. 
More like a real instrument where you 

131
00:10:59,595 --> 00:11:03,976
move around and it changes the sound. 
So lets lets run that. 

132
00:11:03,976 --> 00:11:15,460
[MUSIC] Okay so I pick the phone up and 
you can hear the speed's already changing 

133
00:11:15,460 --> 00:11:26,978
now if I tip it that way, [SOUND] you can 
see it's. 

134
00:11:26,978 --> 00:11:31,820
 >> [MUSIC] It's now going really fast. 
And I'll twist it back around. 

135
00:11:37,020 --> 00:11:41,510
I can take it to a stop. 
So let's just try and play with that a 

136
00:11:41,510 --> 00:11:48,828
bit. 
[SOUND] So, you can see it becomes a 

137
00:11:48,828 --> 00:11:52,260
really fun thing to do and, and once you, 
if you got a few sounds going, you can 

138
00:11:52,260 --> 00:11:55,796
start really jerking the phone around and 
getting quite creative with the way you 

139
00:11:55,796 --> 00:12:01,024
perform with that thing. 
So it becomes like a rather than it 

140
00:12:01,024 --> 00:12:04,966
being, if you like. 
An interface that you tap on becomes an 

141
00:12:04,966 --> 00:12:08,990
instrument that you can, you can really 
try to perform with. 

142
00:12:08,990 --> 00:12:12,650
I would recommend that you try some 
different sounds in there. 

143
00:12:12,650 --> 00:12:16,412
Try just record tones, try recording 
anything really and sticking in there and 

144
00:12:16,412 --> 00:12:20,060
see if you can map different properties 
of the sound to the tellurometer data 

145
00:12:20,060 --> 00:12:22,122
there. 

146
00:12:22,122 --> 00:12:31,760
[MUSIC] 