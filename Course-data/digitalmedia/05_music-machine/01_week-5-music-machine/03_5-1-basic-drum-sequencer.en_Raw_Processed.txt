sound 
wow, whats this 
a drum machine 
so what, what, a drum machine 
work 
well, lets figure 
so, a drum machine a pattern, pattern 
specifies rhythm going to 
play 
way that you, you, you input that 
pattern is using colored buttons 
bottom, okay, so this is, this is a 
traa, classic drum machine 
you see, youve got buttons 
bottom there 
so if you, if you press a button, a 
light comes on, that means that 
that beat youre going to trigger a 
sound 
then, a clock will step 
beats, if sees that button 
is on, will play a sound 
so, going to try is 
emulate that kind behavior 
we call step sequencing inside 
processing 
so, going to to figure 
going to represent that sequence 
int memory, going to to 
figure to clock 
various things 
really nice if you 
this low level you complete 
control sequencer works 
that means you a much wider 
range possibilities to get creative 
so, lets get code 
so, ive got a basic starter code here 
you see ive got usual maxim 
object 
ive got an audio player, im 
calling snare 
will obvious shortly 
then, so i create maxim 
i create snare 
so, im loading in wav files 
so, this is i believe a sample 
roland tr drum machine 
you obviously use samples 
youd like 
certainly a drum machine you 
probably want to using short samples 
so, thats snare sample 
then, frame rate, im setting to 
that could be, that could set to 
anything 
im setting to , so 
really explicit timing is 
working 
okay 
then, ive got this variable called 
playhead, im setting to 
playhead is, is im going to 
figure when, to trigger events 
okay 
so, draw gets called, happens 
repeatedly 
remember, draw is called 
time 
playhead is going to go one 
then, im going to check if 
playhead, far playhead gone, 
if gone to , in words 
if i, if i take remainder 
playhead in then, , that 
means that must got three 
calls to draw, sorry, calls to draw 
so, that means frames a 
second that means one second passed 
so, this little if statement here, checks 
if a second passed, okay 
so, one second passes, i queue 
snare drum sound i play 
so, the, sound we expect to hear 
this is a snare drum triggered 
a second 
sound 
okay, there you 
now, thats really best rhythm 
ive ever heard 
so, i think quite a few songs arent that 
far that rhythmically, we can, 
we better 
so, we need to is, is address 
that problem i mentioned earlier is 
to represent a sequence in 
memory 
so, way im going to is im 
going to take a boolean array call 
snare, snseq, like that, so im giving 
a kind short variable name so i dont 
to keep typing in, okay 
so, snare sequence 
yes to reiterate a boolean, 
so thats going to contain trues 
false values 
idea is that it, remember 
buttons that drum machine we 
saw beginning theyre either 

so, boolean is fine 
an array so that means you 
install several booleans in one place, 
makes convenient 
so, lets initialize 
snare sequence equals new boolean 
im going to put four slots in it, 
im going to put a rhythm in 
equals true 
so, going to play a snare 
first beat, lets put four beats in, one, 
two, three, this, theyre going to 
miss second beat 
going to trigger two, 
going to two 
so, idea this rhythm, true 
false true true 
so, going to like this 
sound 
okay 
so, we get three in a row, a, 
a gap 
right, so lets, so problem is i now, 
i need to look that array my, 
my, ticking clock, you know, 
playhead 
every time playhead gets to zero, i need 
to figure i in array 
so, im going to need another variable 
is going to called 
snseqpos, okay 
so, snseqpos is going to start , 
okay 
im going to, want to is every 
time playhead tells time 
to, to, to play a sound, im going to 
increase my, sequence position 
one 
right, then, im going to check if 
gone fast, snseqpos 
so, ill a check 
if, snseqpos is equivalent to 
snseqlength, so in words, if ive 
got to four is a remember 
marcos lectures arrays that arrays 
zero index 
so, we dont want index to go 
four this is index 
so, so we check if gone that far 
if gone that far we reset 
okay, so that, that code there is, if you 
like, a simple thing steps 
zero to three goes back to zero 

so, we check that code by, 
testing, so lets print line position 
lets print out, snseqpos 
okay, so we see going zero, 
one, two, three, zero, one, two, three 
so, lets run that 
save run 
sound 
okay, so you see thats going, thats 
counting zero, one, two, three, back 
to zero 
okay 
so, weve got in, so we use 
that to index array 
so, we go snseq 
so, going to is 
basically if theres a true value in 
in sequence there, we trigger 
sound 
so, snare sequence, seq snseqpos 
this is equivalent to true, we 
actually, we dont need equivalent 
true we put directly 
remember in an if statement you 
put a boolean directly in there 
lets make really explicit 
theres different styles coding, 
explicit others, so lets 
really explicit 
check if true, 
going to play snare 
so, remember that beat i mentioned 
earlier 
so, one, two, three, gap, one, 
two, three, gap 
okay 
so lets see if we get that that 
going 
so, im going to run 
sound 
so, you hear got that gap, 
slow so im going to speed 
right 
so, im actually going to double 
frame rate that speed 
okay, lets save 
sound 
okay, so the, rhythms a little bit 
irregular 
thats im a screen capture 
time 
so, if youre running this in a 
normal browser fine 
okay, so, so we defined a basic 
sequencer we we use to 
trigger different sounds 
so sounds different times 
so programmer edit 
sequence make longer so 
you make a really elaborate rhythm 
sequence 
obvious that you also add 
another boolean array 
you need another another 
position counter, you an add 
tracks 
so, that will allow you to build a full 
multitrack drum machine 
ill leave you to go a go 
that, and, well show you a 
kind fully worked example later 
music 
