[sound].
[music].
okay so we've created a slider which  allows us to vary the speed of the  playback, and you saw that there's  immediately some quite pleasing creative  effects you can achieve with that.
what we want to do now is add another  control which is to play and stop the  sound, so we can completely switch it  off...  and switch it back on again.
it's a little bit more complicated,  you're going to do it with a button.
so we'll basically make the top part of  the screen into a button which can switch  the play back on and off.
and then we'll make the bottom part of  the screen into the slider that we used  earlier.
here's the sketch with the slider.
so first of all i'm going to go to  trigger this code.
if the mouse y position is greater than  the height of 2.  okay so if we're in the bottom half of  the screen, we'e in the bottom half of  the screen it'll operate the speed  slider.
now what i'm also going to do to make it  obvious that that's, that's what we're  doing there.
i'm going to draw a rectangle in the  bottom half of the screen, which has the  color of the current speed.
let's leave grayscale for now, because  i'm not working too much on the graphics  in this session.
so we'll just do a grayscale color.
so you remember, color is in the range 0  to 255 we've got this ratio, which isn't  0 to 2.  so, we can just do something like, ratio  times, 128.  now approximately, give us, a gray scale  based on, on the, the range of the  slider.
so the rectangle needs to be at position  it takes up half of the, the bottom half  of the screen.
so we go zero zero and height over two,  so it starts at the far left of the  screen, halfway down, and it goes to the  far right of the screen.
therefore the size of it is the width of  the screen and the height is the height  of the screen over two.
so remember that's the x and y position.
that's the width of the square, and  that's the height.
so let's just double check that, that's  working before we carry on.
okay, so i've got, cannot find symbol.
let's see if we can debug that.
so i'm referring to a variable called  ratio.
where did ratio get defined?
well, it's inside the if statement.
so that means that ratio, because i've  declared it there with float ratio, that  that variable is local to the if  function.
so it's not okay for me to then use it  outside the if function.
so what i can do is take it out like that  and, so now i'm declaring it above the if  statement, and i am then using it outside  the if statement that's fine.
okay, so now i have a problem here, where  i've forgotten to put a t there.
okay, see that, see that it's  highlighting the line that has the  problem.
it's quite communicative about the, the  errors in your code.
[music] sss okay.
so now you can see the slide is now  displaying a color, which represents the  speed.
so i now need to quickly add a bottom and  top of the screen, which deals with,  which deals with the stopping and  starting.
first of all, i am going to draw the  button.
so i will do, and i'll choose whether to  draw it red or green, based on the state  of a boolean.
so we create a boolean called buttonon,  and we start off with buttonon equals  false.
so the button starts off being off.
now if button on, so we'll represent my  button as having a state of being on or  off.
it's just a switch so i use a boolean  which can be a true or a false.
and boolean's are used quite extensively  in controlling the state of programs.
way things can either be on or off.
so it the button is on, i'll set the fill  color to.
red.
otherwise, i'll set it to.
green.
can you guess?
okay.
so, then i draw my rectangle.
this one starts at 0.  this one starts at 0,0 and goes to, and  the size is the same size as the other  one so it's width, height over 2.  okay, then i need to manage it.
if they press mouse, if the mouse is  pressed, i need to now update this data  that button.
so i need to check where it is if mouse y  is less than the height over 2.  in other words if they're in the top half  of the screen, which is where about i'm  going to be, then i set, i toggle value  to bottom button on equals.
and this is how to toggle a boolean  [sound], i'll use this operator here, the  exclamation mark.
that'll switch button on to whatever the  opposite state is.
so if it's true it'll switch it to false.
if it's false it'll switch it to true.
and then, i'm going to change the state  of the player.
so if the button is on i want the player  to play.
remove that line.
otherwise, i want the player to stop.
okay, let's just clean that up a bit.
remember, you can always do the also  format.
ctrl+t, apple+t, depending on what you're  using.
okay?
so, basically, if they are in the region  of the button, which is the top half of  the screen, then we switch the state of  the button, and then we look at what the  current state of the button is now, and  update the player to either stop or, or  play, based on that.
and then we draw the button with either  red or green depending on the states in  the draw function.
so let's roll that.
okay, i can't spell button.
it's bu.
so again it highlighted the line a little  examination of that line showed that i  mistyped the name of the variable.
[music] there's my button, switching it  on and off.
[music] so even a dj could operate this  interface.
[music] [music] i'm not a dj, as you can  tell.
there you go.
so there's a simple interface which  allows you to control the speed and the  playback state of an audio player.
[music] [music]
