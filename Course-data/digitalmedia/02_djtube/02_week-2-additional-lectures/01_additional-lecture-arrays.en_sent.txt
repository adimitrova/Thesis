this week's additional programming  lecture is on arrays.
so last week we talked about variables.
and i talked about how a variable is a  place in memory or a box in memory where  you can put some data.
and that's obviously very useful for  storing most types of data, and being  able to access it via name.
but it's really suitable only for one  particular item of data, a single number,  a single image.
now part of the benefit of using a  computer, is that you can compute lots  and lots of data.
and we'll see in this week's lecture, how  we can use lots and lots of images to  create an animation.
but to do that you need, a way of storing  all of those images in a convenient way,  and not having a hundred variables, if  you have a hundred images in one  dimension.
and, that is where you have we use  something called an array.
now an array variable is created very  much like any other variable, except you  have these two little square brackets.
makes it look a little like a box, but  i'll come to exactly what those mean in a  minute.
but we just put between the type of the  variable, int, and the variable name plus  x.  we put these square brackets in that, it  tells us that it's an array variable,  which is to, stor, study, storing one  int, can store many integers.
and if we see down here at the bottom in  memory, rather than a single box, it's a  lot of boxes, each with their own value  of memory and number.
and you can access with a single name,  posx with this, all of those boxes  together.
it's a single variable, we can have lots  of different bits of data.
so how do you access an individual item  of data?
you access it with a number, and you use  these square brackets, this is where the  square brackets come in.
there the way you get access to a  particular item of the array, and inside  the square brackets, you put a number.
so each of those boxes has a number, and  this is the way you get box number three,  and you would get an item out that.
one thing to note, very importantly, is  that it starts at 0, so the first element  in an array is element 0.  you would naturally think it's element 1.  it is not, it's 0.  and that will influence how you do  everything right.
it's very important to be clear on that.
and that means if you've got a number  element with 10 elements in and an array  with 10 elements in, the first element is  on 0, and the last one is over 9, it is  not over 10, because it starts with 0.  it can be a little bit confusing.
unfortunate, that's just the way it  works, and you will get used to it very  quickly.
so this is how you set an element to the  array, just like you would set a variable  to be, using the equals command.
you can set element 3 here, again using  equals, but we have to use the square  brackets to get hold of that value.
it's just like any ordin, ordinary  variable.
this is how you create an array, one way  of creating an array.
in the example we'll actually use a  function to create an array, but we  declare a new variable.
there many type of create box in memory,  to do this you say the type it's a,  called a floating point.
when we have the square brackets, those  square brackets tell us it's not just one  floating value, it's an array.
give it a name, like any other variable.
and then you create an array.
and this is, these curly brackets and a  list of numbers.
that gives you an array.
but we'll see in the actual example,  we'll do a different, use a different  mechanism, and next week we'll use yet  another mechanism.
but, but here is an example of creating a  very simple array, and then you can use  element zero.
and you can use this syntax with the  square brackets, the name of the array,  square brackets and number, to get any  element.
and once you've got that element, you can  use it in any way you'd use any other  variable, by any way you'd use a number.
so it can just print it out, or you can  use it as inputs to do any command you  like.
so you could do translate vals at zero,  rotate, wrecked, any of these commands  that you're familiar with.
so we can use rectval zero, we could use  fill vals zero, any of the commands  you're used to.
wherever you would use a normal variable,  you could use an array variable, plus  squared brackets and a number.
and that would just give you a number  value, like any other value.
very simple, and we'll in the main  example how you can use them with images,  to create an animation.
