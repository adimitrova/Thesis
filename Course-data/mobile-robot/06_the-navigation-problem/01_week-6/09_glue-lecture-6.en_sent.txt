hello and welcome to glue lecture 6. today's lecture should kind of walk you through a little bit of this idea of how robots are going to behave using the framework introduced in module 6 this week in dr edgersett's lecture.
so hopefully it'll help you with quiz 6. so this week in lecture, dr edgersett introduced this kind of scary looking hybrid automaton that has lots of complicated guard conditions.
and today we're just kind of going to break through those and sort of show you how we might move through this automaton as we try to navigate towards a goal.
so we have these behaviors.
go to goal, this is actually a controller, you go to goal, follow wall, navigating around the obstacle counterclockwise.
avoid obstacle and follow the wall of the obstacle navigating in the clockwise direction.
so, we're going to answer this question, what does this look like on a robot?
so in our little set up we have some robot here.
he has a heading, given by this black arrow.
we have our obstacle in red.
around this obstacle i've drawn a, a line in grey that represents this delta distance away from the obstacle at which we need to switch to avoid obstacles when we get inside.
and then here, the little orange star is our goal.
so now, where does the robot wake up in terms of this high level description of the control?
so this, this first arrow points right here into u, u go to goal, which means the go to goal controller will be running right when the robot wakes up.
so this is the behavior we start with.
so what does this look like in our scenario?
we have this vector here drawn in red.
it points to our goal.
and this is the direction along which u go to goal will drive us.
and remember that on the robot, kind of at that lower level, we're thinking of these controllers with these equations.
right?
so our go to goal controller is going to cause us to drive our current state x to this goal using some gain given in k. likewise with the, with the avoid obstacle controller.
and then with follow wall, we're just rotating the direction that you ao, avoid obstacle controller takes us and we're rotating that by 90 degrees depending on whether we're going clockwise or counterclockwise which way the 90 degrees goes.
and remember that's given by this rotation matrix here.
so, if you see something like, you know where you have, say 0,1,1,0, notice that this could be a rotation matrix.
you know, there might be some theta that satisfies what this matrix looks like that means that this matrix is causing a rotation of a vector.
anytime you see kind of, of a symmetrical structure like this in a, in a matrix, say on quiz 6, keep that in mind.
and remember that our robot is implementing this, this, controller up here u in terms of vnw and our actuator wheel commands.
and we know how to go with, between vnw and the wheel commands back in module 2, that's where we learned that.
so, while we have this high level kind of controlling automaton, there are these other things going on kind of at the lower level on the robot.
but for now we'll just think okay we know that the u go to goal is running, our robot is going to drive towards that star, directly towards it.
so let's watch that as it happens, they're driving towards it and now .
all of a sudden, we're at this point where, where within delta away from our obstacle.
so let's go back to our automaton, and see if that changes anything.
and indeed, two of the guard conditions are that, when we're inside of this radius delta, we might have the condition where we need to change.
so let's look at the other half of both of those conditions, where.
we're looking at this inner product between these vectors defined by this, these control laws, the, the go to goal controller and the follow wall controller, both clockwise and counterclockwise.
and this is really going to determine, once we're inside this delta range, do we follow the obstacle clockwise or counterclockwise.
and we were talking about vec-, vectors here in the euclidean space.
this, so we have our follow wall vector and our ua, avoid obstacle director this -- vector, this is the direction we would drive in if we were operating under this controller or this controller or this controller.
so now, how do we kind of decode this condition of this inner product?
so with these, with these vectors in euclidean space our dot, our inner product is just a dot product.
and so we can write it as the magnitudes of both of these vectors here, for example, with the clockwise follow wall controller.
and then the angle between those two guys.
so, this is really the important term, right?
because this is going to vary between 1 and negative 1, in the following way.
so if the two vectors are, are collinear, then the angle between them is 0. the cosine of that is 1. so that would satisfy this condition, right?
when they're perpendirect, you know, exact perpendicular to each other, the cosine of that is 0. so we did not satisfy this condition.
and then of course, when they're completely open and the angle between them is pi, we get this negative 1 value.
so we know that our vector is this cosine term is going to vary between these values and if it's 0 or negative 1, no matter what these magnitudes are, it's kind of irrelevant.
so really, what we're worried about is when we're in between these two cases between 0 and 1 where this is going to be greater than 0. so you can kind of see now directly from the picture in this case, my angle between the clockwise and the avoid obstacle is a little bit smaller than between these two.
right?
because these are going to add up to 180. this one looks like a little bit less than so that means we're going to follow that clockwise rotation that way.
so we can see that these two conditions are satisfied now.
and so we move from operating under the go to goal controller to now the clockwise follow wall.
and at this point when this is true, we note the time detail because that's the important condition for whether we switch later given by this guy down here.
so we note the, the detail what time it is or not, not what time it is but, how far away we are at the goal.
here at d tal, so we, we mark the distance from our goal at d tal.
and now we follow wall.
so we're going to follow this new kind of pink vector.
the robot's going to keep moving forward.
and now, we've actually gotten a little bit closer to the goal, right?
so let's go back to that automaton.
let's look at the condition that might cause us here, we're in this state now.
what might cause us to leave is if we get, within the distance delta.
well that's not going to happen, right?
because we're following the wall.
or if we get closer to the goal than we were at time detail or at time tell so the distance at time tell.
and then again this other inner product that we need to consider.
so lets look at those two vectors now so here we have follow wall, avoid obstacle, and go to goal.
now, we're interested in whether the cosine of the angle between these two vectors avoid obstacle and go to goal is between 90 and 0. and of course in this case we can see that that's more than ninety so we're going to stay with following wall because we don't satisfy both of the conditions to go back to go to goal.
so we continue to follow wall continue to follow wall and now, we're getting closer to that point where, now this angle here is less than 90. our inner product between these two vectors is now greater than 0, and so we switch.
these are our two conditions we needed to satisfy right, we switch back from follow wall to go to goal.
we've made it all the way, and this is kind of where we're home free.
because we're not going to encounter any more obstacles.
but, if we did, we'd kind of go through that whole process again.
so you can see how this overall hybrid automaton switching our controllers.
we get to these, to this what we did, right?
this path around the obstacle.
and it would make the goal.
so i hope that this helps you with some of the kind of high-level behavior questions you are going to have on quiz six this week and check the forums for more help.
and good luck.
