so, in the last lecture, we saw that,  even for rather un-, scary looking  environments.
let's say that we had, slight non  convexities, or even extended convex  obstacles.
the dynamic duo of behaviors, go to goal  and avoid obstacle,  no longer was enough to negotioate these  environments.
and we saw that we really needed some way  of flowing a long the boundary of an  obstacle in order to be able to get  around in the world.
and today, i want to talk about this  missing piece.
the missinig behavior which is a wall  following behavior.
and what i want to do now is really just  introduce it and then in the next lecture  introduce it in a more systematic way as  to induce mode when you're trying to  avoid sliding or avoid type 1 zeno.
so, here is the question.
how do you actually follow walls?
or when  i say walls what i really mean are  boundaries of.
boundaries around obstacles.
so let's, let's start simple.
here is, as always, an obstacle and i  have a disk around it where, this is my  safety disk.
well, avoid obstacle is going to tell me,  you know what, i want to move straight  away from this from this obstacle.
well, how do i , which direction do i go  in, in order to maintain a constant  distance from this obstacle?
well what i  need to do is, i need to flow, right,  along the boundary of this, this region.
well, what this means is that here, i  need to go in this direction.
and what i really need to do then is take  the direction, given to me by my avoid  obstacle behavior, and flip it down, like  this.
and this is a negative pi over 2, or a  negative 90 degree flip.
so, that's what i need to do.
i need to flip it down by 90 degrees,  like this.
and now, i'm going to call this fw, for  follow-wall, and follow-wall is now,  simply, like i said, a flip down of 90  degrees, which this curious looking  matrix here is actually achieving.
and i may want to scale it, so i may have  some scaling that's making this longer or  shorter, depending on, i don't know.
whatever concerns you may have.
now, i should point out that, this matrix  here, i can write as a rotation matrix,  that corresponds to a pi over 2.  sorry, negative pi over 2 flip.
so i can actually write this as alpha,  which is the scale, times the rotation  matrix, that is, the flip, times u, avoid  obstacle, because that is ultimately the  behavior that i'm, that i'm flipping.
so, this tells me that the way to move  around this obstacle, is to simply take  my avoid obstacle behavior, and flip it.
that's as simple as that.
so, there is a problem though.
i can actually flip in 2 different  directions.
not only can i go like this, i can also  go like that.
so 1 question 1 should ask of course is  which direction should i go in, but the  other question is how do i even  mathematically describe these 2 options?
well, what i have, what we saw before  was, we called it u clockwise follow  wall, and the clockwise follow wall  corresponds to a negative pi over 2 flip  to avoid the obstacle.
a counter clockwise follow wall, which  means follow it in the other direction,  well that is simply a pi over 2 flip of  the void obstacle behavior.
so if i introduce this thing that i've  already called the rotation matrix, this  is simply an operation that does this  flip over vector.
if i have a vector here.
v, and i want to flip it by phi.
this new thing here, is simply r of, it's  not phi, it's theta.
r of theta times v.  this is how i get this new, this new  rotated vector.
so the rotation matrix is cosine theta  negative sine cosine.
that's the form of this linear operator  that's flipping vectors at certain angle.
well what we've already seen is that the  clockwise follow-wall it's a negative pi  over 2 flip so this behavior is simply  equal to alpha times, this matrix times,  uao.
now the counterclockwise, while i can  write that in the same way, it's just a  pi over 2 flip instead of a negative pi  over 2 flip, which gives me the following  expression.
so, i actually have very, very clean  expressions for how i should make my  flip,  meaning how i should proceed along the  boundary of the obstacle.
and this works even if their obstacle is  not just a point, because all i really  did was i took a void obstacle, a void  obstacle behavior and, and flipped it.
now we don't know which direction to go  with them.
so lets say that we have this situation,  right.
[sound] i'm going towards the goal,  and then let's say when i'm here, i now  want to switch to a follow-wall behavior.
which direction to choose?
it's not  entirely clear.
right?
i, if the robot only sees what's  going on around here, for instance, how  does the robot know what the world looks  like?
we haven't built a map of anything.
so, you could either go clockwise,  which in this case turned out to be the  long way around, or you can go  counter-clockwise, but it's really not  clear how we should make this choice.
but here's one thing one can observe, is  that go to goal here is wants to move you  kind of upwards a little bit.
so maybe we can let go to goal make the  choice for us.
go to goal once the drive was a little  bit in this direction, not at all in that  direction.
so that's the idea we have here at, that  there is no obvious answer, there is not  then obvious right choice given what  local information the robot has.
the robot doesn't know globally what the  world looks like.
so given that we only know locally what's  going on may be we can lack this goal to  goal behavior.
decide which direction we should go in.
so let's, let's try to make this a little  bit more mathematically precise, what it  means to let the goal to goal behavior  decide.
here, goal to goal, the angle was wrong  here.
goal to goal wants to go in this  direction.
right?
so here, goal to goal wants to  drive us up.
limit up, so may be we should take  follow-wall up.
so this would be u clockwise.
well, u counter clockwise or u  follow-wall counter clockwise wants to go  down.
and note, that this angle is less than pi  over 2, but this angle, the absolute  value of it, is greater than pi over 2.  so we should be able to look at this  angle to determine.
where we should go, but lucky for us  there's a very simple way of checking  these angles.
if i have two rectors v and w i can take  what is called the inner product of those  t which is simple v transposed to w.  well that's equal to the absolute values  of, or the, the length of vectors times  cosine of this angle in between them.
and if this angle is less than pi over 2,  then cosine is going to be positive.
if it's greater than pi over 2, then  cosine is going to be negative.
so all we need to do.
it's to look at the sine of this thing,  to figure out whether or not we're kind  of pointing in the right direction.
so, here is a test.
check go to goal inner product with  follow wall clockwise.
if that's positive, we should go  clockwise.
so, in this scenario, again.
again, we're pointing in this direction,  here is the follow wall, so this, go to  go.
here is u clockwise.
this angle, is less than pi over 2, which  means that, this situation is satisfied.
here is u counter-clockwise, so this  angle is greater than pi over 2.  so, that means that the other condition  is not satisfied.
so what we actually have is a local  check.
we compute the direction that two  different follow-wall behaviors would  take us in.
then we just take this inner product with  go-to-goal behavior, and we check the  sign.
and whoever comes up with a positive sign  is the winner.
and that's the direction we choose to go  in.
now, there is a problem with this of  course.
and that's that if you remember our  labyrinth, or our little maze here,  right.
if i'm following wall, you know what, i'm  going to follow it all the way around.
and i don't want to keep going  indefinitely around and around, right.
so then i'm just spiraling.
at some point, if here's the goal.
i want to release and go towards the  goal.
so one thing that we don't know yet is.
when do we actually release the  follow-wall behavior?
when do we stop  following walls and start approaching  goals again?
the other question is, you  know what, we had avoid obstacle we had  the rotation matrix, that flips either up  or down, depending when we're going  clockwise or counterclockwise.
and then i have this little alpha there  is there some natural or systematic way  on which we can think about the alpha?
and that is going to one one of the  things we will discuss in the next, the  next lecture.
