1
00:00:00,012 --> 00:00:05,032
So after all this work that we've gone 
through, we've seen how to design control 

2
00:00:05,032 --> 00:00:10,097
systems, we've seen how to take different 
controllers and put them together in a 

3
00:00:10,097 --> 00:00:14,832
hybrid navigation architecture. 
We've seen how to deal with practical 

4
00:00:14,832 --> 00:00:20,017
issues, like the fact that obstacles are 
indeed, not points, and that we're never 

5
00:00:20,017 --> 00:00:25,052
going to be able to measure exactly where 
we are, so we need to factify the guards. 

6
00:00:25,052 --> 00:00:32,677
we have tweaked our parameters. 
We're actually ready to do it for real. 

7
00:00:32,677 --> 00:00:39,347
So the presentation, or slide part of 
this lecture is very short. 

8
00:00:39,347 --> 00:00:41,697
It's this. 
Enough talk. 

9
00:00:41,697 --> 00:00:45,881
Let's do it. 
So now, we are indeed ready to, see all 

10
00:00:45,881 --> 00:00:51,525
our hard work pay off by deploying these, 
rather elegant algorithms that we've 

11
00:00:51,525 --> 00:00:56,231
developed on the actual robots. 
And as always, I'm here with, J. 

12
00:00:56,231 --> 00:00:59,368
P. 
DeLacroix/g, and we are going to, take 

13
00:00:59,368 --> 00:01:04,607
our old friend, the computer, 
differential drive mobile robot, through 

14
00:01:04,607 --> 00:01:07,717
a series of. 
Obstacle courses where the obstacles 

15
00:01:07,717 --> 00:01:12,067
become become more and more complicated 
and as you can see, the first set up is a 

16
00:01:12,067 --> 00:01:15,392
convex/g obstacle. 
We saw in the lecture that in theory, the 

17
00:01:15,392 --> 00:01:19,487
robot can actually get stuck in one of 
these local minimum where the goal to 

18
00:01:19,487 --> 00:01:23,122
goal and obstacle avoidance behaviors 
will cancel each other out. 

19
00:01:23,122 --> 00:01:26,857
In practice, for an obstacle of this 
size, that ain't going to happen. 

20
00:01:26,857 --> 00:01:29,672
Because the world is indeed a noisy place 
and. 

21
00:01:29,672 --> 00:01:34,362
The noise will always kick the robot out 
of these particular local minima. 

22
00:01:34,362 --> 00:01:38,829
So, what we're going to see first is 
goal-to-goal and avoid obstacles and 

23
00:01:38,829 --> 00:01:44,072
together that should be enough to have 
the robot navigate this single convex 

24
00:01:44,072 --> 00:01:47,450
obstacle. 
So as we can see the robot starts in a 

25
00:01:47,450 --> 00:01:51,937
go-to-goal behavior. 
It approaches the obstacle, and there, 

26
00:01:51,937 --> 00:01:57,390
the infrared sensors picks up the 
obstacle, and the robot successfully 

27
00:01:57,390 --> 00:01:59,442
navigates around it. 
Now. 

28
00:01:59,442 --> 00:02:05,033
It's safe to go back to go-to-goal, and 
as we can see, the robot successfully 

29
00:02:05,033 --> 00:02:10,285
managed to navigate this particularly 
simple environment with only two 

30
00:02:10,285 --> 00:02:14,029
behaviors. 
So now, let's take our two favorite 

31
00:02:14,029 --> 00:02:18,971
behaviors, go-to-goal and avoid obstacle, 
and set them up to fail. 

32
00:02:18,971 --> 00:02:24,373
As we saw in the lectures, there's really 
no way for these two behaviors to 

33
00:02:24,373 --> 00:02:28,517
successfully negotiate a. 
Non-convex, obstacle. 

34
00:02:28,517 --> 00:02:33,817
In this case we have a cul-de-sac that we 
will try to get around using onlt these 

35
00:02:33,817 --> 00:02:39,117
two behaviors, but we are not, to be 
completely honet, honest, expecting this 

36
00:02:39,117 --> 00:02:42,967
to go all that well. 
So, the robot starts out in a go to-go 

37
00:02:42,967 --> 00:02:48,067
mode and it is entering the cul-de-sac, 
and it's going to start avoiding the 

38
00:02:48,067 --> 00:02:52,622
obstacles here, but it doesn't quite know 
where to go, because. 

39
00:02:52,622 --> 00:02:58,352
It's pulled away, but the goal to goal is 
pulling it forward and the poor robot is 

40
00:02:58,352 --> 00:03:03,952
completely confused and really has no of 
punching its way out of this cul da sac 

41
00:03:03,952 --> 00:03:08,432
with only two behaviors. 
And as we can see the end result is 

42
00:03:08,432 --> 00:03:12,276
somewhat disastrous. 
So that was rather depressing. 

43
00:03:12,276 --> 00:03:17,190
The poor robot was stuck in the cul de 
sac without really anywhere to go and 

44
00:03:17,190 --> 00:03:22,399
obstacle avoidance and going to go and 
kept pulling it in different directions 

45
00:03:22,399 --> 00:03:27,338
and it ended with a mild disaster. 
We have now seen in the lectures that the 

46
00:03:27,338 --> 00:03:32,582
way around this problem is really to 
introduce a third behavior, induced mode 

47
00:03:32,582 --> 00:03:38,237
Follow-wall, which will allow the robot 
to purposefully make its way out of the 

48
00:03:38,237 --> 00:03:43,782
culdesac and once it has a clear shot to 
the goal, and sufficient for forward 

49
00:03:43,782 --> 00:03:49,652
progress has been made follow-wall will 
be released and go-to-goal will again 

50
00:03:49,652 --> 00:03:53,837
take over. 
So JP, let's see the grand finale here, 

51
00:03:53,837 --> 00:03:58,042
with the full blown hybrid navigation 
architecture in. 

52
00:03:58,042 --> 00:04:01,105
Action. 
The robot starts out, again, in a 

53
00:04:01,105 --> 00:04:06,999
go-to-goal mode, and enters the culdesac, 
and what's going to be different now, is 

54
00:04:06,999 --> 00:04:12,704
the obstacle avoidance is going to be 
replaced by a follow-wall, and the robot 

55
00:04:12,704 --> 00:04:18,409
purposefully makes its way out of the 
culdesac along one of the obstacle arms. 

56
00:04:18,409 --> 00:04:22,660
And, as you can see. 
The problems we had before with the 

57
00:04:22,660 --> 00:04:26,626
confusion. 
And being pulled back and forth between 

58
00:04:26,626 --> 00:04:30,269
the 2 different behaviors, is no longer 
there. 

59
00:04:30,269 --> 00:04:35,814
now the robot has successfully navigated 
around the obstruction. 

60
00:04:35,814 --> 00:04:38,985
And is back into the goal to goal 
behavior. 