1
00:00:00,012 --> 00:00:04,810
Hello and welcome to Glue Lecture 6.
Today's lecture should kind of walk you

2
00:00:04,810 --> 00:00:09,670
through a little bit of this idea of how
robots are going to behave using the

3
00:00:09,670 --> 00:00:14,531
framework introduced in Module 6 this week
in Dr Edgersett's lecture.

4
00:00:14,531 --> 00:00:20,173
So hopefully it'll help you with Quiz 6.
So this week in lecture, Dr Edgersett

5
00:00:20,173 --> 00:00:25,762
introduced this kind of scary looking
hybrid automaton that has lots of

6
00:00:25,762 --> 00:00:30,240
complicated guard conditions.
And today we're just kind of going to

7
00:00:30,240 --> 00:00:35,840
break through those and sort of show you
how we might move through this automaton

8
00:00:35,840 --> 00:00:40,455
as we try to navigate towards a goal.
So we have these behaviors.

9
00:00:40,456 --> 00:00:46,010
Go to goal, this is actually a controller,
you go to goal, follow wall, navigating

10
00:00:46,010 --> 00:00:51,463
around the obstacle counterclockwise.
Avoid obstacle and follow the wall of the

11
00:00:51,463 --> 00:00:54,846
obstacle navigating in the clockwise
direction.

12
00:00:54,846 --> 00:00:59,878
So, we're going to answer this question,
what does this look like on a robot?

13
00:00:59,879 --> 00:01:04,764
So in our little set up we have some robot
here.

14
00:01:04,764 --> 00:01:09,475
He has a heading, given by this black
arrow.

15
00:01:09,475 --> 00:01:15,393
We have our obstacle in red.
Around this obstacle I've drawn a, a line

16
00:01:15,393 --> 00:01:20,940
in grey that represents this delta
distance away from the obstacle at which

17
00:01:20,940 --> 00:01:25,003
we need to switch to avoid obstacles when
we get inside.

18
00:01:25,003 --> 00:01:28,214
And then here, the little orange star is
our goal.

19
00:01:28,214 --> 00:01:33,379
So now, where does the robot wake up in
terms of this high level description of

20
00:01:33,379 --> 00:01:36,804
the control?
So this, this first arrow points right

21
00:01:36,804 --> 00:01:41,952
here into u, u go to goal, which means the
go to goal controller will be running

22
00:01:41,952 --> 00:01:46,328
right when the robot wakes up.
So this is the behavior we start with.

23
00:01:46,328 --> 00:01:49,062
So what does this look like in our
scenario?

24
00:01:49,062 --> 00:01:52,818
We have this vector here drawn in red.
It points to our goal.

25
00:01:52,818 --> 00:01:56,873
And this is the direction along which u go
to goal will drive us.

26
00:01:56,874 --> 00:02:03,251
And remember that on the robot, kind of at
that lower level, we're thinking of these

27
00:02:03,251 --> 00:02:06,621
controllers with these equations.
Right?

28
00:02:06,621 --> 00:02:12,331
So our go to goal controller is going to
cause us to drive our current state x to

29
00:02:12,331 --> 00:02:17,836
this goal using some gain given in k.
Likewise with the, with the avoid obstacle

30
00:02:17,836 --> 00:02:20,718
controller.
And then with follow wall, we're just

31
00:02:20,718 --> 00:02:25,546
rotating the direction that you AO, avoid
obstacle controller takes us and we're

32
00:02:25,546 --> 00:02:29,762
rotating that by 90 degrees depending on
whether we're going clockwise or

33
00:02:29,762 --> 00:02:32,710
counterclockwise which way the 90 degrees
goes.

34
00:02:32,710 --> 00:02:35,992
And remember that's given by this rotation
matrix here.

35
00:02:35,992 --> 00:02:43,474
So, if you see something like, you know
where you have, say 0,1,1,0, notice that

36
00:02:43,474 --> 00:02:49,912
this could be a rotation matrix.
You know, there might be some theta that

37
00:02:49,912 --> 00:02:56,737
satisfies what this matrix looks like that
means that this matrix is causing a

38
00:02:56,737 --> 00:03:01,638
rotation of a vector.
Anytime you see kind of, of a symmetrical

39
00:03:01,638 --> 00:03:06,700
structure like this in a, in a matrix, say
on Quiz 6, keep that in mind.

40
00:03:06,700 --> 00:03:12,100
And remember that our robot is
implementing this, this, controller up

41
00:03:12,100 --> 00:03:16,042
here U in terms of VNW and our actuator
wheel commands.

42
00:03:16,042 --> 00:03:21,616
And we know how to go with, between VNW
and the wheel commands back in Module 2,

43
00:03:21,616 --> 00:03:26,233
that's where we learned that.
So, while we have this high level kind of

44
00:03:26,233 --> 00:03:30,789
controlling automaton, there are these
other things going on kind of at the lower

45
00:03:30,789 --> 00:03:34,153
level on the robot.
But for now we'll just think okay we know

46
00:03:34,153 --> 00:03:38,369
that the u go to goal is running, our
robot is going to drive towards that star,

47
00:03:38,369 --> 00:03:42,044
directly towards it.
So let's watch that as it happens, they're

48
00:03:42,044 --> 00:03:45,741
driving towards it and now .
All of a sudden, we're at this point

49
00:03:45,741 --> 00:03:48,766
where, where within delta away from our
obstacle.

50
00:03:48,766 --> 00:03:52,781
So let's go back to our automaton, and see
if that changes anything.

51
00:03:52,781 --> 00:03:57,479
And indeed, two of the guard conditions
are that, when we're inside of this radius

52
00:03:57,479 --> 00:04:00,941
delta, we might have the condition where
we need to change.

53
00:04:00,941 --> 00:04:04,923
So let's look at the other half of both of
those conditions, where.

54
00:04:04,924 --> 00:04:09,714
We're looking at this inner product
between these vectors defined by this,

55
00:04:09,714 --> 00:04:14,898
these control laws, the, the go to goal
controller and the follow wall controller,

56
00:04:14,898 --> 00:04:19,554
both clockwise and counterclockwise.
And this is really going to determine,

57
00:04:19,554 --> 00:04:24,018
once we're inside this delta range, do we
follow the obstacle clockwise or

58
00:04:24,018 --> 00:04:27,612
counterclockwise.
And we were talking about vec-, vectors

59
00:04:27,612 --> 00:04:31,514
here in the Euclidean space.
This, so we have our follow wall vector

60
00:04:31,514 --> 00:04:36,344
and our UA, avoid obstacle director this
-- vector, this is the direction we would

61
00:04:36,344 --> 00:04:40,829
drive in if we were operating under this
controller or this controller or this

62
00:04:40,829 --> 00:04:44,500
controller.
So now, how do we kind of decode this

63
00:04:44,500 --> 00:04:49,495
condition of this inner product?
So with these, with these vectors in

64
00:04:49,495 --> 00:04:53,531
Euclidean space our dot, our inner product
is just a dot product.

65
00:04:53,531 --> 00:04:57,977
And so we can write it as the magnitudes
of both of these vectors here, for

66
00:04:57,977 --> 00:05:01,359
example, with the clockwise follow wall
controller.

67
00:05:01,359 --> 00:05:06,003
And then the angle between those two guys.
So, this is really the important term,

68
00:05:06,003 --> 00:05:08,654
right?
Because this is going to vary between 1

69
00:05:08,654 --> 00:05:13,441
and negative 1, in the following way.
So if the two vectors are, are collinear,

70
00:05:13,441 --> 00:05:16,933
then the angle between them is 0.
The cosine of that is 1.

71
00:05:16,933 --> 00:05:19,629
So that would satisfy this condition,
right?

72
00:05:19,629 --> 00:05:24,822
When they're perpendirect, you know, exact
perpendicular to each other, the cosine of

73
00:05:24,822 --> 00:05:27,821
that is 0.
So we did not satisfy this condition.

74
00:05:27,821 --> 00:05:32,678
And then of course, when they're
completely open and the angle between them

75
00:05:32,678 --> 00:05:37,548
is pi, we get this negative 1 value.
So we know that our vector is this cosine

76
00:05:37,548 --> 00:05:42,630
term is going to vary between these values
and if it's 0 or negative 1, no matter

77
00:05:42,630 --> 00:05:46,155
what these magnitudes are, it's kind of
irrelevant.

78
00:05:46,155 --> 00:05:51,075
So really, what we're worried about is
when we're in between these two cases

79
00:05:51,075 --> 00:05:54,625
between 0 and 1 where this is going to be
greater than 0.

80
00:05:54,625 --> 00:05:59,656
So you can kind of see now directly from
the picture in this case, my angle between

81
00:05:59,656 --> 00:06:04,936
the clockwise and the avoid obstacle is a
little bit smaller than between these two.

82
00:06:04,936 --> 00:06:07,618
Right?
Because these are going to add up to 180.

83
00:06:07,618 --> 00:06:10,261
This one looks like a little bit less than
90.

84
00:06:10,261 --> 00:06:14,145
So that means we're going to follow that
clockwise rotation that way.

85
00:06:14,145 --> 00:06:17,517
So we can see that these two conditions
are satisfied now.

86
00:06:17,517 --> 00:06:22,749
And so we move from operating under the go
to goal controller to now the clockwise

87
00:06:22,749 --> 00:06:26,047
follow wall.
And at this point when this is true, we

88
00:06:26,047 --> 00:06:31,591
note the time detail because that's the
important condition for whether we switch

89
00:06:31,591 --> 00:06:36,690
later given by this guy down here.
So we note the, the detail what time it is

90
00:06:36,690 --> 00:06:41,101
or not, not what time it is but, how far
away we are at the goal.

91
00:06:41,101 --> 00:06:45,758
Here at d tal, so we, we mark the distance
from our goal at d tal.

92
00:06:45,758 --> 00:06:50,200
And now we follow wall.
So we're going to follow this new kind of

93
00:06:50,200 --> 00:06:54,066
pink vector.
The robot's going to keep moving forward.

94
00:06:54,066 --> 00:06:58,316
And now, we've actually gotten a little
bit closer to the goal, right?

95
00:06:58,316 --> 00:07:02,679
So let's go back to that automaton.
Let's look at the condition that might

96
00:07:02,679 --> 00:07:07,335
cause us here, we're in this state now.
What might cause us to leave is if we get,

97
00:07:07,335 --> 00:07:11,241
within the distance delta.
Well that's not going to happen, right?

98
00:07:11,241 --> 00:07:16,042
Because we're following the wall.
Or if we get closer to the goal than we

99
00:07:16,042 --> 00:07:20,861
were at time detail or at time tell so the
distance at time tell.

100
00:07:20,861 --> 00:07:25,776
And then again this other inner product
that we need to consider.

101
00:07:25,776 --> 00:07:31,946
So lets look at those two vectors now so
here we have follow wall, avoid obstacle,

102
00:07:31,946 --> 00:07:35,676
and go to goal.
Now, we're interested in whether the

103
00:07:35,676 --> 00:07:41,052
cosine of the angle between these two
vectors avoid obstacle and go to goal is

104
00:07:41,052 --> 00:07:44,991
between 90 and 0.
And of course in this case we can see that

105
00:07:44,991 --> 00:07:50,166
that's more than ninety so we're going to
stay with following wall because we don't

106
00:07:50,166 --> 00:07:53,603
satisfy both of the conditions to go back
to go to goal.

107
00:07:53,603 --> 00:07:59,336
So we continue to follow wall Continue to
follow wall and now, we're getting closer

108
00:07:59,336 --> 00:08:03,183
to that point where, now this angle here
is less than 90.

109
00:08:03,183 --> 00:08:08,211
Our inner product between these two
vectors is now greater than 0, and so we

110
00:08:08,211 --> 00:08:11,654
switch.
These are our two conditions we needed to

111
00:08:11,654 --> 00:08:15,906
satisfy right, we switch back from follow
wall to go to goal.

112
00:08:15,906 --> 00:08:20,346
We've made it all the way, and this is
kind of where we're home free.

113
00:08:20,346 --> 00:08:23,561
Because we're not going to encounter any
more obstacles.

114
00:08:23,561 --> 00:08:27,406
But, if we did, we'd kind of go through
that whole process again.

115
00:08:27,406 --> 00:08:31,891
So you can see how this overall hybrid
automaton switching our controllers.

116
00:08:31,891 --> 00:08:34,491
We get to these, to this what we did,
right?

117
00:08:34,491 --> 00:08:38,323
This path around the obstacle.
And it would make the goal.

118
00:08:38,323 --> 00:08:44,332
So I hope that this helps you with some of
the kind of high-level behavior questions

119
00:08:44,332 --> 00:08:50,158
you are going to have on quiz six this
week and check the forums for more help.

120
00:08:50,158 --> 00:08:51,224
And good luck.