So, welcome to the last of the lectures. I've had a great time, I hope you've
learned quite a bit. What I want to do with this last lecture,
is just wrap things up. And the first thing I want to point out
is, what really are the key things that I was hoping to get out of this course, or was hoping that you would get out of the
course. The first is, just learn in general how to
use control theory to make robots move around. And not just move but move elegantly, or
safely or effectively. And in order to do this I want you to go
home, if you're already home, stay home. And appreciate the value of systematic
thinking and design. Sure, you could have hacked together 60%
of what we did in this course. But once you push beyond simple things, you really have to do the theory
right in order for it to work. And then, I'm hoping that some of you
managed to bridge the theory-practice gap by
actually not only doing the lectures and the quizzes, but
also, going through the simulation and experiments and
building your own robots. And if I could wish for one thing, it is
that at the end of this course, you don't just
stop being robot-Isis. You use this as a stepping stone to go out
and think abouut new and exciting ways in which you can use
robots or program robots. So have fun, and I want it to spark
further investigations. So, let's talk a little bit about the
punchlines. Punchline #1 is the model. I've been using models all through this
course. And the point is not that I love models. It's you need a model in order to be able to design
control systems effectively. Because, if I'm going to be able to say
what this robot is going to do over time, I need
some way of predicting what it's going to do, and
the only way I can do a prediction is if I have a
model. The other reason why we really need models
is, well let's say you build a controller. Well the only way of ensuring that the
controller is actually sound and doing what it's supposed to be doing is to go back and analyze how the controller
interacts with the system. But the system is modeled using the model. So that's where we really, really, really
need the model. Now, we need the model to be rich enough
to be relevant. Meaning it should describe something
that's going on in the real world, but, it has to be simple enough to
be useful. You don't have to model everything. You don't have to worry about friction
unless you're trying to go really, really high speeds
for instance. It needs to be simple enough, enough to be
useful, and that's really key, and I talked about
bananas versus non-bananas. In the sense that, there are no linear models out there, or linear systems out
there. Non bananas. But, the world is filled with non-bananas, meaning non-linear systems, yet at the
same time, the linear model is rich enough to do a
lot of things. So keep the bananas in mind, meaning make
it as simple as possible. The other punchline is feedback. We don't just say, okay robot, drive for
two meters, make a left turn, and drive for
four meters. No, instead we measure what the robot is
doing and adjust the control signal based on what the robot
is actually doing. And this is feedback. And feedback is so important to control
theory. In fact, it's important to life. Our cells regulate what enzymes to express
based on feedback. Without it none of us would be here. So, I want you always to think feedback
and there are somethings that we talked about when
we're designing feedback controllers. Stability is the most important thing. If the system ain't stable it won't work.
Then we talked about things like tracking, how do you make it follow a
reference path? And robustness, how do we suppress noise,
for instance? And then, how do we actually design
controllers? Well, the key idea in control theory is
state feedback. We design our controllers as if we had the
full state of the system. Which we don't. And then, we use observers to actually
estimate the state. And, thanks to this wonderful thing called the separation principle, we
can design the controllers as if we had the states, and then design our observers as a
way of getting an estimate of the state. So that's punchline number 2. Punchline number 3 is architectures, you
really have to do the design at different levels of
abstraction. And we talked about three abstraction
layers, that's quite standard where you plan high level where you want to go, then you
generates reference paths, and in this case we did that using linear models, and then you track those using non-linear
models. And in particular, we looked at
differential-drive robots. Now, this is not because, we just happened
to like differential-drive robots. It's because the most robots out there are
either differential-drive robots, or they can be approximated with
differential drive robots. So this is a very, very good way of modeling the actual
non-linear dynamics in a way that's simple enough to actually, be able
to say something about it. The fourth punchline, and this is the last
punchline - is whatever, don't listen to me, this
field is not done. There is so much left to explore in the
wonderful world of robotics. So, just because I didn't cover it here it doesn't mean, it's not important, or it
also doesn't mean that we know already how to do it. So, I would like you to leave the course thinking that, you know what,
there's a whole world of robotics out there, that not only
is for me to discover, but for me to invent. So the field is certainly not done yet. And with that, I would like to say thank
you. I've really enjoyed myself and I do need to point out the five people that have
helped make this possible.
Which are all graduate students in my lab. Greg Droge showed up, he was the Segway
man. JP de la Croix has been the master of
ceremonies throughout the course doing all the
robotic experiments in the studio. He's also been supporting the simulator
and without him, this course would have looked very
differently. Amy LaViers and Smriti Chopra have been providing the glue lectures,
combining or connecting the lectures to the quizzes and Smriti has also tirelessly answered
all the questions on, on the forums. And last, Rowland O'flaherty has been
working on the hardware aspect. Meaning, building the robots. Showing you how you can actually build
your own robot at a relatively low cost. And then the last person, or persons, that I need to thank is really all of you. I don't know exactly what you look like or
where you are, but sometimes I like to imagine what you look like and when I feel that a lecture has gone
particularly well. This is what I hope, it is. People that are happy. People that are learning robotics and
people that are going out in the world, exploring and
discovering new things. Thank you.