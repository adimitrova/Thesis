welcome to last module this 
entire course 
in this module, module , i will 
putting pieces that we 
developed together one neat unified 
package 
going to to in this 
module is, connect robotics piece that 
we discussed early differential drive, 
mobile robots, odometry sensors to 
control theoretic developments that weve 
gone 
in particular, we need to see we 
take navigation algorithms we 
developed, actually make fit onto 
actual robotic platforms that 
interested in 
first lecture is really going to 
a little bit a high level 
discussions things that we 
need to aware we start putting 
things together 
ive call approximations 
abstractions reason that is 
whenever we try to design control systems 
navigation algorithms, using 
models 
we need to understand 
models indeed relevant useful, 
applicable 
so, recall rather messy, yet exciting 
hybrid automoton 
we developed this, we assumed that we 
perfect sensing 
we even assumed that x dot equal to u, 
meaning that we directly could control 
velocities of, robot 
then, we saw end last 
module, we ran a differential drive 
mobile robot 
two robot, systems, 
actual differential drive mobile robot 
x dot equal to u, unclear 
even in common 
we make models fit reality, 
importantly, models 
relevant to real world 
well, i like to think models fables 
lets return to old friend, hare 
tortoise 
so, we discuss zeno phenomenon, 
we hare race tortoise 
well, i dont exactly know 
you live chances that you 
live, rarely you see hares 
tortoises actually racing 
so, heres a story a fable that never 
applies, somehow, we still gain 
kind insight real world 
this story 
like, slow steady wins race if 
tortoise wins 
or, in zeno case, hare is going to 
win 
well, we take away that 
is, well, dont rush youre 
quizzes this course 
so now, hare tortoise actually 
something to say we 
approach course 
similarly, models fables 
relevance, theyre 
exactly telling full story 
so, lets take a step back see 
assumptions we actually make 
kind models we actually use we 
talking robots 
well, we really two main classes 
assumptions 
one dynamics 
we developed control 
algorithms, we made assumption that we 
this particle located x, we 
immediately controlled velocity, x dot 
is equal to u 
well, that may may reasonable 
we also made this assumption that 
robot a sensor suite 
actually one sensor skirts 
that allows robot to see roughly, a 
disk around thats exactly true, 
we saw in last module, we 
see certain parts this disk 
from, in assumption point view, we 
still kind made assumption that, we 
cannot, we see everything around us 
to a point we measure 
obstacles angle to that 
obstacle 
turns that sensing 
assumption is less okay 
robot moves around, you 
actually build rather accurate models 
or, maps whats going in 
world 
problem is dynamics 
this is even close to 
reasonable 
khepera inaudible that weve used a 
lot, not, all, looking like x dot 
is equal to u 
so, in order fable, model, 
navigation algorithm to relevant 
to actual robot, we somehow need to 
remedy this lack reasonability 
so, problem, course, is that we 
point mass 
using unicycle model 
actually describing robot, x 
dot is v cosine phi, v is speed 
phi is heading, y dot v sine 
phi, phi dot equal to omega, 
omega angular velocity 
well, this robot, this model, doesnt act 
like x dot is equal to u somehow 
weve done last couple 
modules to relevant, we need to make 
two models actually coexist 
peacefully 
so, going to spend next two 
lectures is a very, simple problem 
is, we make a unicycle robot 
a differential drive model robot act 
like x dot is equal to u 
