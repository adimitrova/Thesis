1
00:00:00,012 --> 00:00:07,412
The punch line with last lecture was that 
we can, in fact, make the unicycle model 

2
00:00:07,412 --> 00:00:13,112
or a differential drive mobile robot, act 
like a simple x dot equal to u. 

3
00:00:13,112 --> 00:00:19,702
What this means is that if we have some 
desired direction we want to go in, 

4
00:00:19,702 --> 00:00:24,725
direction and magnitude, we can come up 
with v's and omega's, speeds and angular 

5
00:00:24,725 --> 00:00:29,485
velocities that make the differential 
drive robot execute this controller. 

6
00:00:29,485 --> 00:00:32,758
And we did it in two ways. 
First, we saw that we can actually use 

7
00:00:32,758 --> 00:00:35,812
some kind of tracking controller to 
follow this. 

8
00:00:35,812 --> 00:00:40,603
But then, in last lecture, we came up 
with a rather clever transformation that 

9
00:00:40,603 --> 00:00:45,161
allowed us to, to actually track this u 
vector more or less perfectly. 

10
00:00:45,161 --> 00:00:50,121
And when I say more or less, what I mean 
is that we really ignored orientation. 

11
00:00:50,121 --> 00:00:53,363
So, we only cared about where the robot 
actually was, 

12
00:00:53,363 --> 00:00:56,530
not particularly which direction it was 
pointing. 

13
00:00:56,530 --> 00:01:01,582
And we couldn't track or used the 
original point, we had to accept this 

14
00:01:01,582 --> 00:01:05,470
small offset error. 
But it was rather elegant, because no 

15
00:01:05,470 --> 00:01:10,887
longer did we have to design trackers. 
the question one should ask then, of 

16
00:01:10,887 --> 00:01:16,620
course, is does this apply to other types 
of robots? Meaning, this idea of starting 

17
00:01:16,620 --> 00:01:20,351
with a unicycle and then somehow making 
it behave well, 

18
00:01:20,351 --> 00:01:25,327
how, how relevant is that to other kinds 
of robots? So, we have dealt with the 

19
00:01:25,327 --> 00:01:29,544
differential drive robots. 
We know that it's super important in 

20
00:01:29,544 --> 00:01:35,008
relevance to that but you know what, what 
if you have flying things? What if you 

21
00:01:35,008 --> 00:01:40,457
have snake bots? What if you have, this 
is called a snake board, what if you have 

22
00:01:40,457 --> 00:01:45,582
fixed-wing aircrafts or blimps or 
underwater robots? Does this even apply? 

23
00:01:45,582 --> 00:01:48,532
Well, 
what I want to do today is basically see 

24
00:01:48,532 --> 00:01:54,157
that it does supply but, it does supply 
if you squint your eyes a little bit and 

25
00:01:54,157 --> 00:01:59,432
focus on what these types of robots have 
in common as opposed to what they don't 

26
00:01:59,432 --> 00:02:03,413
have in common. 
So, what I want to do today is simply go 

27
00:02:03,413 --> 00:02:10,329
through a smorgasbord of different robot 
classes and see how they actually are 

28
00:02:10,329 --> 00:02:13,911
like unicycles or maybe not. 
We'll see. 

29
00:02:13,911 --> 00:02:16,315
Okay. 
Here's the unicycle, 

30
00:02:16,315 --> 00:02:23,972
right? We have, as always, position, x y, 
and it's pointing in some direction, 

31
00:02:23,972 --> 00:02:28,536
phi, this is the standard robot model. 
So, the states are position and 

32
00:02:28,536 --> 00:02:31,388
orientation. 
The inputs to this model, this 

33
00:02:31,388 --> 00:02:35,280
abstraction, are angular and 
transalational velocitiies. 

34
00:02:35,280 --> 00:02:38,921
Meaning, how quickly do you turn and how 
fast do you go. 

35
00:02:38,921 --> 00:02:44,392
Well, let's start expanding this model to 
encompass slightly more elaborate 

36
00:02:44,392 --> 00:02:47,195
systems. 
So, let's start with what's called a 

37
00:02:47,195 --> 00:02:50,343
car-like robot. 
A car-like robot is not a unicycle 

38
00:02:50,343 --> 00:02:53,077
because all of a sudden, we have more 
states. 

39
00:02:53,077 --> 00:02:56,996
We have our old friends which is x and y, 
which is the position. 

40
00:02:56,996 --> 00:03:01,724
We have phi which is the orientation, but 
then we also have a new angle known as 

41
00:03:01,724 --> 00:03:05,816
the steering angle. 
So, here is the picture we should have in 

42
00:03:05,816 --> 00:03:09,298
mind. 
Here's a car, here are the rear wheels. 

43
00:03:09,298 --> 00:03:15,435
Well, the front wheels are going to be 
turned because we're turning the steering 

44
00:03:15,435 --> 00:03:18,906
wheel. 
So, if I call this point here, x and y, 

45
00:03:18,906 --> 00:03:23,631
as always, then this, of course, is, as 
before, the heading. 

46
00:03:23,631 --> 00:03:29,118
And now, we also have this angle here, 
which is psi, known as the steering 

47
00:03:29,118 --> 00:03:32,411
angle, 
how much are we actually steering it. And 

48
00:03:32,411 --> 00:03:37,656
all I wanted to show here is that we have 
almost the same equation for x and y, the 

49
00:03:37,656 --> 00:03:42,966
only difference is that we are now going 
in this direction, which is phi plus psi. 

50
00:03:42,966 --> 00:03:49,008
and then, the orientation has its own 
dynamics that's a function of the 

51
00:03:49,008 --> 00:03:54,438
velocity and the steering angle. 
And then, what we can do is we can 

52
00:03:54,438 --> 00:03:58,494
control how quickly we're steering. 
So, psi dot is equal to u. 

53
00:03:58,494 --> 00:04:03,172
So, this is the next level up in 
complexity where we no longer have a 

54
00:04:03,172 --> 00:04:07,997
unicycle but a car-like robot, four 
wheels we can turn the front wheels. 

55
00:04:07,997 --> 00:04:13,772
Well we've already seen the Segway robot. 
So, the Segway robot is really a unicycle 

56
00:04:13,772 --> 00:04:16,622
or a differential drive robot at the 
base. 

57
00:04:16,622 --> 00:04:22,021
And then, you know, this, this mess here. 
I drew it like this because it actually 

58
00:04:22,021 --> 00:04:25,458
didn't fit in the box if I didn't make it 
small and sideways. 

59
00:04:25,458 --> 00:04:29,500
The point is that, we had a rather 
complicated equation describing the 

60
00:04:29,500 --> 00:04:33,252
pendulum part or the part that's sitting 
on top of the unicycle. 

61
00:04:33,252 --> 00:04:37,784
So, we had a bunch of states, position, 
orientation, tilt, angle, and here, we 

62
00:04:37,784 --> 00:04:42,405
actually had to deal with the tilt 
velocities and other kinds of velocities 

63
00:04:42,405 --> 00:04:45,372
because we actually need to get into 
dynamics. 

64
00:04:45,372 --> 00:04:50,077
Many accelerations of what's happening 
for this thing not to fall over and the 

65
00:04:50,077 --> 00:04:52,781
inputs were the wheel torques to this 
model. 

66
00:04:52,781 --> 00:04:57,471
The point now is that this still has a 
unicycle underneath and then this mass 

67
00:04:57,471 --> 00:05:01,194
sitting on top of it. 
So, that would, would be the Segway robot 

68
00:05:01,194 --> 00:05:05,455
that we actually already seen. 
Well, what about flying things? Well, a 

69
00:05:05,455 --> 00:05:11,970
standard model for a fixed-wing aircraft 
is ta-da, a unicycle, right? Which means, 

70
00:05:11,970 --> 00:05:16,496
it's moving. 
And then, it can change altitude. 

71
00:05:16,496 --> 00:05:23,442
So now, no one in their right mind would 
actually say that this is what a, 

72
00:05:23,442 --> 00:05:28,000
an aircraft is actually doing but from a 
high level obstruction point of view, 

73
00:05:28,000 --> 00:05:31,525
it's not a bad idea. 
An aircraft can't go sideways but it can 

74
00:05:31,525 --> 00:05:33,854
kind of move like a unicyle in, in the 
plane. 

75
00:05:33,854 --> 00:05:38,248
And then, you can change altitude. 
now, you would actually have to couple 

76
00:05:38,248 --> 00:05:42,390
this to the real dynamics of the aircraft 
if you wanted to do it for real. 

77
00:05:42,390 --> 00:05:46,759
the one thing to note though is that 
there is something slightly fishy about 

78
00:05:46,759 --> 00:05:50,877
this and that's the fact that the fixed 
wing aircraft cannot hover. 

79
00:05:50,877 --> 00:05:55,812
When you can't have v=0, but there's 
really no constraint or no way of 

80
00:05:55,812 --> 00:06:01,247
capturing this in, this model, we see 
later how to do it, but the point here is 

81
00:06:01,247 --> 00:06:06,603
that there are ways of thinking about 
flying things as unicycles plus an 

82
00:06:06,603 --> 00:06:10,588
altitude component. 
Now, let's look at another model. 

83
00:06:10,588 --> 00:06:14,241
This is the standard model of an 
underwater glider, 

84
00:06:14,241 --> 00:06:19,513
and, well, let's go back a slide. 
Aircraft, underwater glider, nothing 

85
00:06:19,513 --> 00:06:22,950
changed, right? 
So, an underwater glider, people 

86
00:06:22,950 --> 00:06:28,230
typically model as a unicycle. 
And then, you can go up and down. 

87
00:06:28,230 --> 00:06:34,825
So, you can go down to a lower depth or 
you could climb up towards the surface. 

88
00:06:34,825 --> 00:06:41,928
So, again, unicycle plus an altitude or a 
vertical component that describes how 

89
00:06:41,928 --> 00:06:45,855
high up or high down the, the robot 
actually is. 

90
00:06:45,855 --> 00:06:49,430
Well, 
all of these robots have some notion of 

91
00:06:49,430 --> 00:06:53,938
where it is at least in the plane and 
where it's pointing. 

92
00:06:53,938 --> 00:07:00,059
And if I call position plus heading for 
POSE, the punchline, at least based on 

93
00:07:00,059 --> 00:07:06,408
the models I showed you, cars, segways, 
flying things, things on the water, and 

94
00:07:06,408 --> 00:07:12,793
as we know, differential drive robots, 
they have this key thing to it known as 

95
00:07:12,793 --> 00:07:15,325
POSE. 
And POSE is x, y, and phi. 

96
00:07:15,325 --> 00:07:21,915
You know, that's just, that's just what's 
going on, where is it and which way is it 

97
00:07:21,915 --> 00:07:25,573
pointing. 
It's pointing in the phi direction 

98
00:07:25,573 --> 00:07:30,407
instead of the x and y. 
Well, you know what, if you ignore the 

99
00:07:30,407 --> 00:07:35,605
dynamics, the actual dynamics and say at 
the certain high level abstraction, we 

100
00:07:35,605 --> 00:07:38,457
already know how we should think about 
this, 

101
00:07:38,457 --> 00:07:41,831
the unicycle. So, almost everything 
involves a POSE. 

102
00:07:41,831 --> 00:07:46,846
And almost everything with POSE is almost 
a unicycle and I will make this more 

103
00:07:46,846 --> 00:07:49,936
precise. 
But the point here is that whenever you 

104
00:07:49,936 --> 00:07:55,589
start dealing with postion and heading, 
the unicycle model is applicable, maybe 

105
00:07:55,589 --> 00:08:01,147
not perfectly, but fairly well. 
So, this model is still very, very rich. 

106
00:08:01,147 --> 00:08:06,866
So, the punchline then becomes that we 
can almost use everything that we've 

107
00:08:06,866 --> 00:08:12,660
already done and then possibly add 
another layer to to what's going on. 

108
00:08:12,660 --> 00:08:19,295
So, what you have, is you have, let's 
say, your, your u plan, right, that comes 

109
00:08:19,295 --> 00:08:25,846
into your unit cycle, and out of that 
comes our old friends, v and omega, and 

110
00:08:25,846 --> 00:08:31,169
then, whatever actual robot you have is 
going to move like this. 

111
00:08:31,169 --> 00:08:37,991
[SOUND] And the point is that, in here, 
we may be forced to somehow make the 

112
00:08:37,991 --> 00:08:41,010
actual robot look like a unicycle a 
little bit. 

113
00:08:41,010 --> 00:08:45,286
But it's just another layer to our 
already elegant and well-layered 

114
00:08:45,286 --> 00:08:49,825
architecture that we've discussed. 
And, in fact, next time, what I want to 

115
00:08:49,825 --> 00:08:54,835
do is exactly this for the car robot, to 
see how do you make a car act like a 

116
00:08:54,835 --> 00:09:00,372
unicycle and this is something I had to 
do when I was dealing with the autonomous 

117
00:09:00,372 --> 00:09:04,370
self-driving cars. 
We were reasoning about them at the level 

118
00:09:04,370 --> 00:09:10,323
of position and orientation and speeds 
and angular velocities but then we have 

119
00:09:10,323 --> 00:09:13,754
to map it back onto the, onto the, the 
car robot. 

120
00:09:13,754 --> 00:09:18,607
Before we do that though, I need to talk 
a little bit about constraints. 

121
00:09:18,607 --> 00:09:22,802
What I mean, mean by that is if you're 
flying, for instance, 

122
00:09:22,802 --> 00:09:25,881
you can't hover. 
You're going to have a certain minimum 

123
00:09:25,881 --> 00:09:30,628
velocity or a lot of times, it's 
convenient to assume a fixed velocity and 

124
00:09:30,628 --> 00:09:33,293
then you can turn. 
But here's an aircraft. 

125
00:09:33,293 --> 00:09:36,717
It can't immediately or very quickly just 
spin either. 

126
00:09:36,717 --> 00:09:40,262
So, there are caps on how quickly you can 
actually turn. 

127
00:09:40,262 --> 00:09:48,275
Well, the most famous of all constrained 
unicycle type models is known as Dubins 

128
00:09:48,275 --> 00:09:56,119
vehicle. And all it is is a unicycle with 
the added caveat that we can only fly 

129
00:09:56,119 --> 00:10:03,537
with v=1 or drive with v=1, meaning we're 
going to go with a constant velocity and 

130
00:10:03,537 --> 00:10:07,635
we have a max and a minimum angular 
velocity. 

131
00:10:07,635 --> 00:10:14,043
If you want, you can say, you know, v0 
there and omega v max or omega max plus 

132
00:10:14,043 --> 00:10:20,534
omega max instead of -1 and 1, but the 
point is that we're constraining the 

133
00:10:20,534 --> 00:10:24,588
velocities. 
This means, that Dubins vehicle can 

134
00:10:24,588 --> 00:10:31,376
basically execute straight lines, it can 
go along paths like this so, so it can go 

135
00:10:31,376 --> 00:10:34,362
along angles, I mean, along circular 
arcs. 

136
00:10:34,362 --> 00:10:39,119
Or it can go anything in between, 
right? But basically, you have, you 

137
00:10:39,119 --> 00:10:42,612
cannot go arbitrarily tight with a Dubins 
vehicle. 

138
00:10:42,612 --> 00:10:46,788
So, this is one way in which people 
incorporate constraints. 

139
00:10:46,788 --> 00:10:50,964
And this makes the planning part 
significantly harder. 

140
00:10:50,964 --> 00:10:56,402
We're not going to cover it, but I 
encourage you to look up Dubins vehicles, 

141
00:10:56,402 --> 00:11:01,545
for instance, to see how people think 
about curvature constrained versions of 

142
00:11:01,545 --> 00:11:06,079
unicycles, for instance. 
Well, another version or another standard 

143
00:11:06,079 --> 00:11:11,003
constraint that people deal with is 
what's known as the Reeds-Shepp model, 

144
00:11:11,003 --> 00:11:18,642
where omega again, is between -1 and 1, 
or negative omega max and omega max, and 

145
00:11:18,642 --> 00:11:25,987
v can now be, well, the absolute value of 
v is 1, which means that v is either +1 

146
00:11:25,987 --> 00:11:32,182
or -1, meaning it's a Dubins vehicle that 
can also go backwards. 

147
00:11:32,182 --> 00:11:36,528
That's all that this means. 
You can go forward along these arcs or 

148
00:11:36,528 --> 00:11:42,257
you can actually pull back in in reverse. 
And Reeds-Shepp is also a standard type 

149
00:11:42,257 --> 00:11:47,516
of model that people like to deal with 
when they're dealing with mobile robots. 

150
00:11:47,516 --> 00:11:52,673
Now, aircrafts typically can't back so 
it's not a par, all that relevant of a 

151
00:11:52,673 --> 00:11:56,003
model for fixed wind aircraft, for 
instance. 

152
00:11:56,003 --> 00:12:00,663
But there are, for instance, robots, 
at the end of the day, we have a top 

153
00:12:00,663 --> 00:12:04,822
speed, for instance, 
so we can't go faster than v=vmax, so, 

154
00:12:04,822 --> 00:12:09,315
but we can indeed go backwards. 
So, the Reeds-Shepp model would not be a 

155
00:12:09,315 --> 00:12:13,520
bad model if you actually want to take 
max velocities into account. 

156
00:12:13,520 --> 00:12:16,802
So, remember that this may or may not 
come into play. 

157
00:12:16,802 --> 00:12:21,437
The last thing I want to say though is 
that there are, of course, robots where 

158
00:12:21,437 --> 00:12:24,523
POSE is not a reasonable way of 
describing them. 

159
00:12:24,523 --> 00:12:28,097
You know, you have a humanoid, well, 
people will have maybe a position and 

160
00:12:28,097 --> 00:12:31,522
orientation but there is so much more 
going on in a humanoid. 

161
00:12:31,522 --> 00:12:35,816
A snake, you know, which way is the snake 
pointing, well, you know, if the snake 

162
00:12:35,816 --> 00:12:39,911
looks like this, what's, what's the 
orientation of the snake? It's very 

163
00:12:39,911 --> 00:12:42,579
unclear. 
What's the position of the snake? Who 

164
00:12:42,579 --> 00:12:45,024
knows? It's not clear what we mean by 
that. 

165
00:12:45,024 --> 00:12:50,155
same thing, we would like mobile 
manipulators like this robots that we 

166
00:12:50,155 --> 00:12:54,355
have here at Georgia Tech, where, well, 
the base is a unicycle. 

167
00:12:54,355 --> 00:12:57,171
So, if you only care about the base, 
fine. 

168
00:12:57,171 --> 00:13:02,499
But if you want to do more things like 
carry things around or opening doors and 

169
00:13:02,499 --> 00:13:06,722
so forth, we have to care about more than 
the just the POSE, 

170
00:13:06,722 --> 00:13:12,918
more than just position and orientation. 
So, there are situations where we have to 

171
00:13:12,918 --> 00:13:18,912
worry about more things, but in a 
surprising amount of situations, POSE is 

172
00:13:18,912 --> 00:13:23,621
indeed the way to go. 
And like I said, the next lecture will be 

173
00:13:23,621 --> 00:13:30,861
about cars and how to actually make a car 
behave like a unicycle. 