in last lecture, we saw that one way 
overcoming this inherent seeming 
tension between xu a way 
generating, references, 
actual robot dynamics to 
introduce a layered architecture, 
you a planner that planned 
reference directories, a tracker that 
tracked reference directories 
i want to today, in todays 
lecture is, see we make, this, 
architecture concrete particular 
example a differential drive wheeled 
mobile robot 
if you recall, going back in time to 
module , 
a differential drive mobile robot 
wheels, 
wheel velocities 
independently controlled 
so we v sub l left wheel, 
v sub r right wheel 
if, 
this robot is located x,y in this 
case heading straight 
so this is angel phi we saw that 
dynamic differential drive 
mobile robot given this 
expression 
we also quickly realize that there 
something 
rather unintuitive this 
hard to feel real velocities 
much easier to feel happening 
if youre, assuming that you control 
speed robot directly 
angler velocity meaning quickly 
youre turning 
if youre that you instead get a 
unicycle model 
differencial drive mobile robot, 
dynamics is unicycle dynamics 
close, infact module part 
things we in that module 
connection we actually 
derived, derived this expression 
right left wheel volocities 
could related to ve anomia directly 
meaning, control signals we produce 
unicycle assumption 
directly mapped onto v sub r v sub l 
thats nice 
v inaudible intuitively 
clear v sub r v sub l 
so, way we think differential 
drive mobile robots is really in terms 
unicycles 
then, we make this final 
transformation onto actual real 
velocities resending the, com 
actuation commands 
so thats model we to deal 
well, if we buy that we use 
unicycles then, we really already 
seen to make unicycle go in a 
desired direction 
so here is unicycle model 
well i would like to go in 
direction phi sub d phi desired 
well, we actually saw early that, 
use a pid regulator well, if i let 
error between desired angle 
actual angle, given e, in 
particular, if you dont e you use 
arc tan sine phi unknown minus phi 
comma cosine, thing 
you get something thats between pi 
pi, 
you dont to worry 
angles being, poorly behaved 
well, if you use a pid regulator 
weve seen that this actually allows 
us to track this, reference direction, 
theta phi sub d, rather elegantly 
and, 
a recap, this is pid 
regulator looks like 
looks rather hairy, but, we also saw 
to implement in a rather direct 
way 
so we know, already, to track angles 
well, we need to is add in 
speed component 
so, lets assume that low level 
planner given us a desired velocity, 
u, we assumed then, that x 
equal to u 
well, we have, actually, unicycle, 
right now, this vector, is actually 
desired direction magnitude, we 
want to move in, and, simply set 
that equal to u u is desired 
velocity 
well, if we that, we start 
seeing, okay, we get, desired 
headings out, 
velocity well, simple 
if we simply take arc tangents u 
u, u is y component u, 
u is x component, that is 
angle 
so phi desired, we get free 
that remains to designed, then, is 
velocity component, hey check 
this 
if i take unicycle model i take x 
dot squared plus y dot squared i 
take square root this, i get this 
square root here 
well, that is square root v 
cosine squared phi plus sin phi 
well, this is one wellknown 
trigonometric identities 
this is exactly equal to , so i get 
is square root v 
is v 
so i noticed is that, if im moving 
unicycle around 
magnitude this vector in 
direction im going 
well, thats v 
well, i know magnitude is 
u vector 
absolute value, the, 
norm u 
so this simply means, is 
you know v equal to 
norm u 
well, norm u is square root 
vu 
so, i immediately know, 
direction i would like to go in 
quickly i go in that direction 
so, way to build a tracker 
unicycle robot is simply to take arc 
tangents u u desired 
heading, let omega equal to 
pid e, e is phi desired minus 
phi, v magnitude u 
vector 
thats good news, this gives us 
we need 
before, before, we plan using 
navigation algorithm 
navigation algorithm comes u 
u, direction in we would 
like to move 
well, end day, tracker 
needs to spit v sub r v sub l, 
is derived left wheel 
velocities differential drive 
mobile robot, we know to put 
inside a tracker block 
if i desire, desired heading is 
arc tangents u u we use a 
pid regulator, instance, 
regulator, regulating 
angle 
so omega pid phi desired phi 
velocity is simply magnitude 
u vector, we know to 
compute 
so, this gives us omega v 
unicycle 
we take this map onto 
left right wheel velocities 
actual robot 
so this means that we actually 
successfully use this layered arcitecture 
differential drive mobile robots, 
this is way we in 
experiments that we saw in previous 
module 
now, unicycle 
there is an even clever trick that 
is involving layered architecture, 
letting unicycle really act 
like x dot u 
in next lecture, we will use 
this pid based tracker, this clever 
trick a way eeven 
elegant handling differential drive 
mobile robots 
