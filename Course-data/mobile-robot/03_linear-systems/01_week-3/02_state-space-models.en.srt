1
00:00:00,012 --> 00:00:05,149
Welcome to the second lecture on LTI
models on state space forum, where LTI

2
00:00:05,161 --> 00:00:10,810
stood for Linear Time-Invariant Systems.
And what we saw last time is that we could

3
00:00:10,822 --> 00:00:17,104
model at least two systems like x dot is
Ax plus Bu and y is Cx. Well, it turns out

4
00:00:17,116 --> 00:00:22,158
that this is a very, very general
description of a large class of systems.

5
00:00:22,264 --> 00:00:27,049
And x here is state of the system. What
that means is that x describes what the

6
00:00:27,061 --> 00:00:32,028
system is currently doing, u is the input
which tells us how we effect the system,

7
00:00:32,134 --> 00:00:36,938
and y is the output which measures the
aspects of the system that we care about

8
00:00:36,950 --> 00:00:42,223
or that we have access to somehow. and the
way we should think about these a, b, and

9
00:00:42,235 --> 00:00:46,705
c matrices are really that, here, Ax,
well, that's the physics of the system.

10
00:00:46,806 --> 00:00:51,212
So, A is given to us by Newton, by the
laws of physics or electromechanics, or

11
00:00:51,224 --> 00:00:55,989
whatever it is that we're using to model
our system. And there's very little we can

12
00:00:56,001 --> 00:01:01,080
do about that. B, on the other hand, that
tells us how the input affects the state.

13
00:01:01,187 --> 00:01:06,365
Meaning, this tells us what actuators we
have. So, if we buy new actuators, we get

14
00:01:06,377 --> 00:01:11,255
a bigger B. In other words, B is, to a
certain degree, up to us, the designers

15
00:01:11,267 --> 00:01:16,085
who are actually building the systems.
Similarly, C, actually encodes what

16
00:01:16,097 --> 00:01:20,940
sensors we have. Meaning, how, can we
actually get information about what's

17
00:01:20,952 --> 00:01:26,021
going on inside the system. So, A is
given. Typically, B and C redesigned when

18
00:01:26,033 --> 00:01:31,367
we designed the system. And as we will see
later on sometimes, we may not have enough

19
00:01:31,379 --> 00:01:36,713
control authority, for instance, to make
the system do what we want, meaning our B

20
00:01:36,725 --> 00:01:41,868
matrix is too measly which means that we
have to buy a better B matrix, maybe buy a

21
00:01:41,880 --> 00:01:47,962
new actuator or so. but at the end of the
day, a system like this, it's influenced

22
00:01:47,974 --> 00:01:53,105
by our control signal u, that's the input,
and out comes y, which is ultimately the

23
00:01:53,117 --> 00:01:58,185
thing we can see. We can typically not see
x, but we can see y, because that's what

24
00:01:58,197 --> 00:02:02,528
our sensors are measuring. And the
question that all of control theory is

25
00:02:02,540 --> 00:02:07,163
really about, is how do we pick this input
to make the system do what it should be

26
00:02:07,175 --> 00:02:11,542
doing? And, more importantly, since we
only can measure y. How do we pick u,

27
00:02:11,643 --> 00:02:16,392
given y? Unfortunately, we cannot answer
that question right away. What we do need

28
00:02:16,404 --> 00:02:20,782
to do first is understand these systems a
little bit and come up with tools for

29
00:02:20,794 --> 00:02:25,438
describing their behaviors because until
we understand their behaviors, we can't

30
00:02:25,450 --> 00:02:29,903
pick u's that make the behaviors be what
we want them to be. so we're going to do

31
00:02:29,915 --> 00:02:34,610
that. but first, we actually need to
understand a little bit more about where

32
00:02:34,622 --> 00:02:40,177
these systems come from. So, let's start
with our old friend, the car model. This

33
00:02:40,189 --> 00:02:45,769
was the model we used when we built the
cruise controller for a car. So, what's

34
00:02:45,781 --> 00:02:50,626
going on here is that, the acceleration of
the car, v dot, was c over m times u minus

35
00:02:50,638 --> 00:02:56,366
gamma v. so, let's put this model on state
space form. Well, let's say, first of all

36
00:02:56,378 --> 00:03:01,345
that, we're building a cruise controller.
All, all we care about is the velocity. In

37
00:03:01,357 --> 00:03:06,161
this case, let's say, that the state is
actually the velocity. The thing we're

38
00:03:06,173 --> 00:03:10,588
measuring is the velocity, which means
that y is Cx, where C is simply 1,

39
00:03:10,588 --> 00:03:13,741
alright?
We're simply measuring one. Well, v dot is

40
00:03:13,753 --> 00:03:20,239
giving by this expression which means that
x dot, where which x is the same as v is

41
00:03:20,251 --> 00:03:26,428
Ax and A here is simply minus gamma, plus
Bu, where B then become C over m. So, in

42
00:03:26,440 --> 00:03:30,863
this case, we have a one-dimensional
system for describing what's going on.

43
00:03:30,966 --> 00:03:35,148
Now, let's pretend that instead of
building a cruise controller, we'll

44
00:03:35,160 --> 00:03:39,615
building a self-driving car. Well,
clearly, we not only care about how fast

45
00:03:39,627 --> 00:03:44,339
it's going, we care about where it is. So,
in this case, let's make our state, the

46
00:03:44,351 --> 00:03:49,605
position and the velocity, so P, V. In
this case, we're measuring the position C,

47
00:03:50,609 --> 00:03:55,981
which means we're taking out the first
component of the state. So, C is 1,0.

48
00:03:56,221 --> 00:04:02,739
Similarly, this equation still holds so
what we're controlling is the acceleration

49
00:04:02,751 --> 00:04:08,790
through the Cm and what remains is my A
matrix where the 1 here simply says, that

50
00:04:08,802 --> 00:04:13,575
the time derivative of position is
velocity and then, this gamma is the same

51
00:04:13,587 --> 00:04:18,600
gamma as we got before. So, the impo rtant
point to note here is that the model we

52
00:04:18,612 --> 00:04:23,650
end up with, to a certain degree, depends
on what we care about and what are the

53
00:04:23,662 --> 00:04:28,452
things that we can, can measure. Now,
let's take another model. Here is a

54
00:04:28,464 --> 00:04:33,884
pendulum. And the pendulum is attached up
here on the ceiling somewhere. And it's

55
00:04:33,896 --> 00:04:39,243
swinging with an angle theta. It has
length l. And the acceleration of this

56
00:04:39,255 --> 00:04:44,280
angle, this angular acceleration, turns
out to be minus gravity over the length

57
00:04:44,592 --> 00:04:51,403
times sine of this angle plus Cu. And the
way we should interpret this is that what

58
00:04:51,415 --> 00:04:58,195
we're doing is we're actually applying a
torque up here that allows us to swing the

59
00:04:58,207 --> 00:05:04,510
pendulum a certain way. okay.
Let's write this as an LTI system. Ouch.

60
00:05:04,512 --> 00:05:09,890
Sine theta is not linear. So, we actually
cannot write this as an LTI system. But,

61
00:05:10,003 --> 00:05:15,558
here is something we can observe. For a
very, for small thetas, then sine theta is

62
00:05:15,570 --> 00:05:20,695
actually roughly equal to theta. so what
we can do for small angles, is actually

63
00:05:20,707 --> 00:05:26,040
replace this thing by theta.
So, let's do that. For small angles then,

64
00:05:26,052 --> 00:05:32,109
what we get is, wellm if we measure the
angle, then y is simply 1, 0, where we're

65
00:05:32,121 --> 00:05:38,744
taking out the angle and not the angle or
velocity. Because the state, in this case,

66
00:05:38,756 --> 00:05:43,058
is theta, theta dot.
Well, similarly, we're having a C here, so

67
00:05:43,070 --> 00:05:48,340
the C shows up there in the B matrix, and
the A matrix looks like this. 0,1 here,

68
00:05:48,448 --> 00:05:53,451
which means that the time derivative of
the angle is the angle of velocity, and

69
00:05:53,463 --> 00:05:58,570
this g over l term here is the same as the
g over l term up there. So, this would be

70
00:05:58,582 --> 00:06:01,557
the a, b, and c matrices for this
pendulum.

71
00:06:01,557 --> 00:06:06,170
And again, I want to encourage you to go
through the math and perform this matrix

72
00:06:06,182 --> 00:06:10,705
multiplications so that you indeed trust
that this is correct. Okay, let's do

73
00:06:10,717 --> 00:06:15,575
another example. Two simple robots. Let's
say that we have two robots on a line and

74
00:06:15,587 --> 00:06:20,615
what we can do is we can control the
velocities of these robots. So, x1 is the

75
00:06:20,627 --> 00:06:26,370
position of robot 1, x2 is the position of
robot 2, and we want to somehow control

76
00:06:26,382 --> 00:06:31,210
them. Well, first of all, what we get is
that x dot is 1 0, 0 1 u. We have no A

77
00:06:31,222 --> 00:06:36,460
matri x in this case, A is equal to 0 and
the B matrix is simply the identity

78
00:06:36,472 --> 00:06:42,160
matrix. let's say that we can match where
the robots are, too, so in that case, y

79
00:06:42,172 --> 00:06:47,684
would simply be the identity matrix times
x, or just x itself, right? So, this would

80
00:06:47,696 --> 00:06:52,405
be, our, our model of this. Now, let's
solve the problem here. Let's solve what's

81
00:06:52,417 --> 00:06:56,737
called the rendezvous problem. the
rendezvous problem is the problem we'll

82
00:06:56,737 --> 00:07:00,967
have when the robots meet. And, you know
what, why don't we actually have them

83
00:07:00,979 --> 00:07:06,114
drive towards each other? So, here's an
idea one can have. Where we say that u1 is

84
00:07:06,126 --> 00:07:11,112
x2 minus x1, which is simply code for
saying that x1 is going to move towards

85
00:07:11,124 --> 00:07:16,924
x2. And similarly, u2, let's make that x1
minus x2. Then, that means that robot 2 is

86
00:07:16,936 --> 00:07:22,827
aiming towards robot 1. Well, what we've
actually done now, is we've designed a

87
00:07:22,839 --> 00:07:28,435
closed loop feedback law, where we have
written control inputs in terms of the

88
00:07:28,447 --> 00:07:33,785
states in this case, but since the outputs
are the same as the states, we're actually

89
00:07:33,797 --> 00:07:38,592
writing them in terms of the outputs.
Well, if I do that, I get a new system. X

90
00:07:38,687 --> 00:07:42,815
dot is negative 1, 1, 1, negative 1, x,
and what this corresponds to is instead of

91
00:07:42,827 --> 00:07:47,815
writing u here, I'm plugging in these
things there, and then you end up with a

92
00:07:47,827 --> 00:07:53,101
new system dynamics that's what's called a
closed loop system dynamics. And, in fact,

93
00:07:53,113 --> 00:07:57,956
if I run this, and let's run it for not 2
robots but a gazillion robots here, then

94
00:07:57,968 --> 00:08:02,276
as you will see, running exactly this
simple controller makes the robots

95
00:08:02,288 --> 00:08:06,997
actually meet on a same, on the same
point, so that's kind of cool. let's do

96
00:08:07,009 --> 00:08:11,886
another example now. This is the unicycle
robot we looked at that when we modeled

97
00:08:11,898 --> 00:08:17,441
the differential drive robot. Again, sines
and cosines are unpleasant. This is not

98
00:08:17,453 --> 00:08:23,713
linear, alright? , But cosine for small
angles is equal to 1. So, let's assume

99
00:08:23,725 --> 00:08:29,443
we're dealing with small angles. And sine,
for small angles, is equal to the angle

100
00:08:29,455 --> 00:08:34,381
itself. So, using that, we get this. But
look at this. This is still not linear

101
00:08:34,476 --> 00:08:38,468
because here, we have a multiplication.
So, even when we made a simplification, wh

102
00:08:38,468 --> 00:08:42,671
ich by the way is a completely stupid
simplification because the pendulum may

103
00:08:42,683 --> 00:08:46,924
swing at small angles, but why does the
car have to drive in only direction where

104
00:08:46,936 --> 00:08:50,804
we are having small angles? That doesn't
make any sense. But the point there is

105
00:08:50,816 --> 00:08:56,222
that this kind of simplification didn't do
anything. Still not linear. So, we need to

106
00:08:56,234 --> 00:09:01,289
be a little bit more systematic when we
generate linear time invariant models

107
00:09:01,301 --> 00:09:06,801
from, for, from these kinds of non-linear
systems because just saying that let the

108
00:09:06,813 --> 00:09:11,667
angle be small and hope for the best,
won't actually give us all that much. And

109
00:09:11,679 --> 00:09:16,295
in the next lecture, we will be systematic
in our generation of these linear

110
00:09:16,307 --> 00:09:17,681
time-invariant models.