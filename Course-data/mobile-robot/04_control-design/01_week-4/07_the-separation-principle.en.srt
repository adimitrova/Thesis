1
00:00:00,012 --> 00:00:05,197
Now we have lots of really good building 
blocks. We haven't yet put them together. 

2
00:00:05,197 --> 00:00:09,797
Cause we don't fully know how they fit 
together, but we have lot's of cool 

3
00:00:09,797 --> 00:00:12,822
things. 
We have controllability, that tells us 

4
00:00:12,822 --> 00:00:17,562
whether or not it's possible to control 
the system, if we have access to the 

5
00:00:17,562 --> 00:00:20,287
state. 
And the way we do that is using state 

6
00:00:20,287 --> 00:00:23,861
feedback. 
We have this notion of observability, 

7
00:00:23,861 --> 00:00:29,060
which tells us whether or not it is 
possible to, to figure out the state from 

8
00:00:29,060 --> 00:00:34,410
the output, and the way we do that is. 
by building observers and we have this 

9
00:00:34,410 --> 00:00:39,725
tool that seems remarkably strong which 
is pole-placement which basically allows 

10
00:00:39,725 --> 00:00:43,578
us to place the closed loop eigen values 
where ever we want. 

11
00:00:43,578 --> 00:00:48,683
So make them equal to the desired eigen 
values and the big question now is how do 

12
00:00:48,683 --> 00:00:53,274
we put everything together. 
And the answer is known as the separation 

13
00:00:53,274 --> 00:00:56,108
principle. 
And in a nut shell, the separation 

14
00:00:56,108 --> 00:01:01,114
principle, which by the way, is quite 
wonderful tells us that we can actually 

15
00:01:01,114 --> 00:01:05,698
decouple observer design and control 
design from each other meaning we can 

16
00:01:05,698 --> 00:01:09,822
actually control the system as if we have 
X, even though we don't. 

17
00:01:09,822 --> 00:01:14,638
And then we can get their estimate from x 
using an observer structure. 

18
00:01:14,638 --> 00:01:19,812
So this is the topic of today's lecture 
and it really is the reason why we're 

19
00:01:19,812 --> 00:01:22,913
able to effectively control linear 
systems. 

20
00:01:22,913 --> 00:01:26,778
So, here's the game plan. 
Now, I have x dot is Ax + Bu. 

21
00:01:26,778 --> 00:01:29,850
Y is Cx. 
So this is a standard linear time and 

22
00:01:29,850 --> 00:01:33,821
variance system. 
Now I'm going to assume that this system 

23
00:01:33,821 --> 00:01:38,052
is both completely controllable and 
completely observable. 

24
00:01:38,052 --> 00:01:41,212
If it's not then, to be completely frank, 
we're toast. 

25
00:01:41,212 --> 00:01:45,719
What that means, we need to go and buy 
new sensors, which is fancy speak for get 

26
00:01:45,719 --> 00:01:48,753
a new C matrix. 
Or we need to buy more actuators which 

27
00:01:48,753 --> 00:01:52,505
means get a better B matrix. 
So let's assume that we have complete 

28
00:01:52,505 --> 00:01:55,312
controllability and complete 
observability. 

29
00:01:55,312 --> 00:02:00,991
Well, the 1st step in our game plan is 
let's ignore the fact that we don't have 

30
00:02:00,991 --> 00:02:04,038
X. 
So I'm going to design the state feedback 

31
00:02:04,038 --> 00:02:09,443
controller as if I had X, meaning I'm 
going to pick U=-Kx, which means that I 

32
00:02:09,443 --> 00:02:13,692
get my closed loop, my closed loop 
dynamics to be this. 

33
00:02:13,692 --> 00:02:18,968
Now, this is what I designed for and I 
have my favorite pole placement tool to 

34
00:02:18,968 --> 00:02:22,244
do this. 
Now, in reality, I don't have that. 

35
00:02:22,244 --> 00:02:26,519
reality is I have u is -Kx hat, where the 
hat is my estimated state. 

36
00:02:26,519 --> 00:02:31,591
So that's what I actually have even 
though that's not what I designed for. 

37
00:02:31,591 --> 00:02:37,172
Now step two, of course, is I'm going to 
estimate x using, using an In order to 

38
00:02:37,172 --> 00:02:40,697
get this x hat and to make it be as 
pleasant as it can. 

39
00:02:40,697 --> 00:02:45,922
The big thing that we should note now is 
that previously we didn't have a U term 

40
00:02:45,922 --> 00:02:50,147
in the observer dynamics. 
Now we do have a U term that we need to 

41
00:02:50,147 --> 00:02:54,647
take into account but it turns out that 
it's very simple to do that. 

42
00:02:54,647 --> 00:02:58,012
I built my predicter and the predicter 
part now. 

43
00:02:58,012 --> 00:03:04,074
Contains both Ax hat and a BU term, 
because a predictor is just a copy of the 

44
00:03:04,074 --> 00:03:08,096
dynamics. 
And then I have my corrector part which 

45
00:03:08,096 --> 00:03:14,384
is this error between the actual output 
and what the ouput would have been if I 

46
00:03:14,384 --> 00:03:19,377
had x hat instead of x. 
Well, this structure again gives me the 

47
00:03:19,377 --> 00:03:23,747
same aerodynamics here. 
So what we do is I pick L so that my 

48
00:03:23,747 --> 00:03:30,097
error, my estimation error is stabilized. 
And that's before the error is the actual 

49
00:03:30,097 --> 00:03:34,332
state minus my estimated state. 
So this is my game plan. 

50
00:03:34,332 --> 00:03:37,872
Now, let's see if this game plan is any 
good. 

51
00:03:37,872 --> 00:03:40,065
A fact. 
It should be good right? because 

52
00:03:40,065 --> 00:03:45,130
otherwise I'm wasting everyones time with 
these slides, but let's make sure that it 

53
00:03:45,130 --> 00:03:48,813
indeed is worth while. 
What do we want, this system to do? We 

54
00:03:48,813 --> 00:03:53,576
want to drive x to zero, because we're 
stabilizing it, and we want to drive e to 

55
00:03:53,576 --> 00:03:56,397
zero, because we want the estimate to be 
good. 

56
00:03:56,397 --> 00:04:00,202
So, what I need to do, is analyze the 
joint dynamics together. 

57
00:04:00,202 --> 00:04:06,972
So x dot, is ax+bu, but u is, if you 
remember, u = -k, not x, but x-hat, which 

58
00:04:06,972 --> 00:04:10,842
is why I get my x dynamics to look like 
this. 

59
00:04:10,842 --> 00:04:17,999
While me e dynamics, that's the matrenary 
dynamics, is what it has always been. 

60
00:04:17,999 --> 00:04:25,373
Okay, let's simplify this a little bit. 
So, I know that the error is X minus X 

61
00:04:25,373 --> 00:04:29,908
hat. 
So I can replace this X hat with X minus 

62
00:04:29,908 --> 00:04:34,781
the error. 
So then I get my dynamics after some 

63
00:04:34,781 --> 00:04:38,462
pushups to be A minus BKX. 
Plus BK. 

64
00:04:38,462 --> 00:04:42,452
E. 
So now I have something that involves X 

65
00:04:42,452 --> 00:04:49,587
and E and here it only invovles E. 
So now I can actually write everything in 

66
00:04:49,587 --> 00:04:54,092
a joint way. 
X dot E dot is this large matrix now 

67
00:04:54,092 --> 00:05:00,997
that's not an NxN but it's a 2Nx2N*X E. 
And mow, our strategy, our joint strategy 

68
00:05:00,997 --> 00:05:06,310
works if and only if this new joint 
system is an asymptotically stable 

69
00:05:06,310 --> 00:05:09,742
system. 
Which means that we need to check the 

70
00:05:09,742 --> 00:05:15,338
eigenvalues of this new system matrix. 
Now, here is where the separation 

71
00:05:15,338 --> 00:05:18,965
principle comes into play. 
This is my dynamics. 

72
00:05:18,965 --> 00:05:22,274
Now, this matrix here is a rather special 
matrix. 

73
00:05:22,274 --> 00:05:26,324
Because it's triangular. 
It has a block there, it has a block 

74
00:05:26,324 --> 00:05:30,670
there and it has a block there. 
And triangular matrices, or block 

75
00:05:30,670 --> 00:05:34,719
triangular matrices. 
May they be upper or lower triangular. 

76
00:05:34,719 --> 00:05:40,117
They have a particularly nice structure. 
So this is an upper triangle block-matrix 

77
00:05:40,117 --> 00:05:43,517
and the eigenvalues are given by the 
diagonal blocks. 

78
00:05:43,517 --> 00:05:48,627
Which means that the eiganvalues to this 
whole matrix are the eiganvalues to this 

79
00:05:48,627 --> 00:05:51,347
matrix and the eiganvalues to this 
matrix. 

80
00:05:51,347 --> 00:05:55,802
Or another way of writing it is that the 
characteristic equation is the 

81
00:05:55,802 --> 00:05:58,982
characteristic equation to the first 
block here. 

82
00:05:58,982 --> 00:06:02,904
Times the characteristic equation to the 
second block here. 

83
00:06:02,904 --> 00:06:07,358
All that this means is that the 
eigenvalues are given by the values of 

84
00:06:07,358 --> 00:06:10,801
the diagonal blocks. 
And here is the wonderful part. 

85
00:06:10,801 --> 00:06:15,618
If we haven't been stupid in how we did 
the design, then this thing has been 

86
00:06:15,618 --> 00:06:20,770
stabalized, because we did cold placement 
to make sure that the real part of our 

87
00:06:20,770 --> 00:06:25,919
diagonals is strictly negative. 
This part we have made sure is also well 

88
00:06:25,919 --> 00:06:31,626
behaved because we have designed our 
observer in such a way that real part of 

89
00:06:31,626 --> 00:06:37,283
the eigenvalue is completely negative. 
Which means that we haven't messed 

90
00:06:37,283 --> 00:06:39,755
anything up. 
Everything works. 

91
00:06:39,755 --> 00:06:43,852
What that means is. 
Control design people, we can design our 

92
00:06:43,852 --> 00:06:48,477
controllers as if we had the state and 
than we rely on our clever sensing people 

93
00:06:48,477 --> 00:06:52,507
to estimate the state for us. 
And thanks to the separation principal 

94
00:06:52,507 --> 00:06:55,952
everything works. 
Now the ones that we keep in mind is that 

95
00:06:55,952 --> 00:07:00,552
we still have this term here, and this 
term that basically tells you something 

96
00:07:00,552 --> 00:07:03,962
about what happens to transients. 
But after awhile. 

97
00:07:03,962 --> 00:07:09,629
This term doesn't really matter and 
everything works, so now we are ready to 

98
00:07:09,629 --> 00:07:15,221
state the separation principle. 
The separation principle tells us that we 

99
00:07:15,221 --> 00:07:18,784
can in fact design controllers as if we 
have x. 

100
00:07:18,784 --> 00:07:24,156
And then, we can design the observers 
independent of the control actions, 

101
00:07:24,156 --> 00:07:29,790
because all we're doing is, we're adding 
a + Bu in the observer dynamic, so the 

102
00:07:29,790 --> 00:07:33,311
control actions are actually just 
canceled out. 

103
00:07:33,311 --> 00:07:38,739
In other words, control and observer 
designs can be completely separated. 

104
00:07:38,739 --> 00:07:43,708
So, if you put everything together, in a 
final Glorious block diagram. 

105
00:07:43,708 --> 00:07:46,937
This is what the world looks like. 
We have our system. 

106
00:07:46,937 --> 00:07:49,588
This is physics. 
This is what a system does. 

107
00:07:49,588 --> 00:07:54,023
Now, we have modeled it using A B and C 
matrices, but what comes out of this 

108
00:07:54,023 --> 00:07:58,763
thing is Y, meaning our measurements and 
what we push into this system is U, our 

109
00:07:58,763 --> 00:08:03,820
control action. 
Now, we're taking u, sorry, we're taking 

110
00:08:03,820 --> 00:08:10,476
y and feeding it into the observer. 
So the observer now is, ax-hat + bu + 

111
00:08:10,476 --> 00:08:17,431
l(y-Cx-hat) and, the one thing to note, 
is that we need both, y and u to Feed 

112
00:08:17,431 --> 00:08:21,798
into the observer. 
Now, out of the observer comes x-hat, 

113
00:08:21,798 --> 00:08:26,398
meaning, our estimate of what the system 
is actually doing. 

114
00:08:26,398 --> 00:08:30,435
And now, we use x-hat to feed back, to 
get are, are u. 

115
00:08:30,435 --> 00:08:35,773
And the beautiful thing here is that, 
these two blocks together, they 

116
00:08:35,773 --> 00:08:41,076
constitute the controller. 
So these two blocks are what's being done 

117
00:08:41,076 --> 00:08:44,697
in software and this, is the physics of 
the world. 

118
00:08:44,697 --> 00:08:50,686
So this the plant, there's nothing we can 
do about that and the controller consists 

119
00:08:50,686 --> 00:08:55,192
now of two pieces. 
One piece that, estimates the state and 

120
00:08:55,192 --> 00:08:59,072
another piece that computes the control 
action/g. 

121
00:08:59,072 --> 00:09:04,582
So now we have everything we need to do 
effective control design and what we'll 

122
00:09:04,582 --> 00:09:09,984
do in the next lecture, which is the 
final lecture, lecture of this module is 

123
00:09:09,984 --> 00:09:14,442
that we'll actually deploy it. 
And in fact, we're going to see it in 

124
00:09:14,442 --> 00:09:20,397
action on a humanoid robot where we're 
doing simultaneous control and state 

125
00:09:20,397 --> 00:09:20,650
estimation. 