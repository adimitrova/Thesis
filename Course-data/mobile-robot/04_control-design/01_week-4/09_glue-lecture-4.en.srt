1
00:00:01,490 --> 00:00:04,590
Hello, and welcome to Glue Lecture Four.

2
00:00:04,590 --> 00:00:08,910
I'm Smriti Chopra, your instructor for the
Glue Lectures, and let's get into it.

3
00:00:08,910 --> 00:00:13,430
So this lecture is titled Controllability
and Observability,

4
00:00:13,430 --> 00:00:15,650
because this week, with Dr. Egerstedt, you
guys learned

5
00:00:15,650 --> 00:00:18,520
about what is a system and then more

6
00:00:18,520 --> 00:00:23,560
importantly, how do you see if it's
stable, unstable?

7
00:00:23,560 --> 00:00:26,490
And if it's unstable, how do you

8
00:00:26,490 --> 00:00:27,640
stabilize it through controls?

9
00:00:27,640 --> 00:00:30,600
But before you can do that, you need to
see if the system is controllable.

10
00:00:30,600 --> 00:00:32,850
And let's say you did stabilize it.

11
00:00:32,850 --> 00:00:36,830
Now you want to see if it's observable,
because, you know, you

12
00:00:36,830 --> 00:00:40,710
don't have state information, so you need
to somehow bring in output, etc.

13
00:00:40,710 --> 00:00:43,440
And then we see how you put everything
together.

14
00:00:43,440 --> 00:00:45,340
So in this lecture, we're just going to go
over this

15
00:00:45,340 --> 00:00:49,850
one big example clearing all these
concepts for you guys.

16
00:00:50,890 --> 00:00:51,670
Okay?

17
00:00:51,670 --> 00:00:54,170
So let's start with system stability.

18
00:00:54,170 --> 00:00:59,354
Let's say this is my robot, and just an
arm is all that we're going to consider,

19
00:00:59,354 --> 00:01:04,770
which is your theta 1 and theta 2 to join
the angles of this arm, two angles.

20
00:01:04,770 --> 00:01:06,730
And I'm going to see that my state is this

21
00:01:06,730 --> 00:01:10,820
guy here, which are the angles and their
velocities.

22
00:01:10,820 --> 00:01:12,936
And my A matrix is this.

23
00:01:12,936 --> 00:01:17,310
This is how my state relates to its
derivatives, right?

24
00:01:17,310 --> 00:01:18,810
This is given to us.

25
00:01:18,810 --> 00:01:23,060
So this is what our system looks like,
this guy, by this equation here.

26
00:01:23,060 --> 00:01:24,735
There you go.
So now what are we going to do?

27
00:01:24,735 --> 00:01:27,080
We're going to check if the system is
stable.

28
00:01:27,080 --> 00:01:29,850
Does it blow up, or as time goes to

29
00:01:29,850 --> 00:01:32,540
infinity, or is going to be stable on its
own?

30
00:01:32,540 --> 00:01:37,000
And the way to do that is by checking the
eigen values of A, right?

31
00:01:37,000 --> 00:01:42,563
So in Matlab you can simply type eig A, or
you can sit and find out the

32
00:01:42,563 --> 00:01:44,970
eigen values yourself.
Either way.

33
00:01:44,970 --> 00:01:50,440
Here we just put it in Matlab, and we see
that all eigen values of A are 0.

34
00:01:50,440 --> 00:01:53,560
And we know from our lectures that when
the eigen

35
00:01:53,560 --> 00:01:56,420
values are all 0, that means your system
is unstable.

36
00:01:58,120 --> 00:02:04,220
So we found out that for this system, this
particular x and A, our guy is unstable.

37
00:02:05,380 --> 00:02:09,420
Okay, so that means we need to introduce
control, right?

38
00:02:09,420 --> 00:02:10,860
But how do you introduce control?

39
00:02:10,860 --> 00:02:14,960
We know this pretty equation here, x dot
equal to Ax plus Bu.

40
00:02:14,960 --> 00:02:18,050
But what does it really mean?
What is B?

41
00:02:18,050 --> 00:02:21,040
What is u; u of course, is our control
signal.

42
00:02:21,040 --> 00:02:24,230
Well, we need to first find out what it is
that we can

43
00:02:24,230 --> 00:02:25,990
control about the system, let's say
through

44
00:02:25,990 --> 00:02:29,010
putting motors or through putting
actuators, etc.

45
00:02:29,010 --> 00:02:31,390
So we're going to assume that we can
control

46
00:02:31,390 --> 00:02:34,580
the acceleration of my first joint angle,
theta

47
00:02:34,580 --> 00:02:34,680
1.

48
00:02:34,680 --> 00:02:41,350
And if we do that, then we see that our B
matrix turns out to be this guy here.

49
00:02:41,350 --> 00:02:41,540
Why?

50
00:02:41,540 --> 00:02:45,430
Because now, when you put B here in this
equation of yours, you'll

51
00:02:45,430 --> 00:02:49,280
see that the input u shows up next to
theta 1 double dot.

52
00:02:49,280 --> 00:02:52,840
That means you can influence the
acceleration of

53
00:02:52,840 --> 00:02:56,470
my theta 1 double of my theta 1, right?

54
00:02:56,470 --> 00:02:58,540
That's where my input shows up.

55
00:02:58,540 --> 00:02:59,874
So that's how you generate

56
00:02:59,874 --> 00:03:03,184
your B matrix.
Now that we have this, great.

57
00:03:03,184 --> 00:03:09,490
But can we, with this particular choice of
B, actually control this guy or not?

58
00:03:09,490 --> 00:03:12,880
That is, do we see if it's controllable of
not?

59
00:03:12,880 --> 00:03:17,630
And for this we have a very simple test,
which is you create this matrix.

60
00:03:17,630 --> 00:03:21,730
This is the controllability matrix, right?

61
00:03:21,730 --> 00:03:24,600
And then you simply check the rank of this
matrix.

62
00:03:24,600 --> 00:03:24,970
So here we

63
00:03:24,970 --> 00:03:27,450
going to make this matrix first.

64
00:03:27,450 --> 00:03:33,430
And you guys should be comfortable with
finding matrix multiplications, etc.

65
00:03:33,430 --> 00:03:35,670
Not for maybe such big systems, but for
let's say a

66
00:03:35,670 --> 00:03:38,100
two by two matrix, you should be able to
do it.

67
00:03:38,100 --> 00:03:42,306
If you want we can really fast go over one
example.

68
00:03:42,306 --> 00:03:49,374
For example, this is your A, right: 0000,
1000, 0000,

69
00:03:49,374 --> 00:03:52,788
0010.
And then you've got, I'm going to find AB.

70
00:03:52,788 --> 00:03:58,215
So let's put B here, which is 0100.
And now, because my A is a 4 cross 4, and

71
00:03:58,215 --> 00:04:04,560
my B is a 4 cross 1, my resulting matrix
is going to be a 4 cross 1, right?

72
00:04:04,560 --> 00:04:08,060
And let's multiply quick: 0 times 01000.

73
00:04:08,060 --> 00:04:10,606
So this guy, because there's a one that
lines up at the same place.

74
00:04:10,606 --> 00:04:15,242
We're going to get a 1 here, which is here
too, right?

75
00:04:15,242 --> 00:04:19,016
And then there are no 1s that line up, so
you get a 0, 0, and 0.

76
00:04:19,016 --> 00:04:21,307
So you see how we got this guy here,

77
00:04:21,307 --> 00:04:26,020
which correlates to this vector in the
controllability matrix.

78
00:04:26,020 --> 00:04:28,292
So you should be able to do AB, A square

79
00:04:28,292 --> 00:04:32,010
B, etc, quite easily, for at least 2 cross
2 matrices.

80
00:04:32,010 --> 00:04:35,370
And now we're going to check the rank of
this guy,

81
00:04:35,370 --> 00:04:37,850
and it turns out that the rank here is 2.

82
00:04:37,850 --> 00:04:40,430
But we have this condition

83
00:04:40,430 --> 00:04:43,940
that the rank needs to be full rank, or
the matrix

84
00:04:43,940 --> 00:04:46,400
needs to have full rank in order for it to
be controllable.

85
00:04:46,400 --> 00:04:51,760
That means it should have all linearly
independent vectors, right?

86
00:04:51,760 --> 00:04:53,370
And what do you mean by full rank?

87
00:04:53,370 --> 00:04:55,700
Basically, your rank should be equal to n,
Where

88
00:04:55,700 --> 00:04:58,900
n is the number of states that you have.

89
00:04:58,900 --> 00:05:00,500
Here n is 4, right?

90
00:05:00,500 --> 00:05:05,270
So clearly, this guy has rank 2, not equal
to 4,

91
00:05:05,270 --> 00:05:11,440
and that's why this guy is uncontrollable.
And in case you don't want to sit and,

92
00:05:11,440 --> 00:05:15,570
you know, compute rank, etc, of all these
things, you can even do this in Matlab.

93
00:05:15,570 --> 00:05:17,420
And this is the code for it.

94
00:05:19,440 --> 00:05:22,040
You create your A matrix.
Create your B matrix.

95
00:05:22,040 --> 00:05:27,190
Then the CTRB function will give you the
controllability matrix gamma.

96
00:05:27,190 --> 00:05:30,570
And then you just do rank of this guy and
pops out 2,

97
00:05:30,570 --> 00:05:33,610
which is not equal to 4, we know that, and
so it's uncontrollable.

98
00:05:34,800 --> 00:05:35,062
Okay?

99
00:05:35,062 --> 00:05:36,790
All right, perfect.

100
00:05:36,790 --> 00:05:38,430
So now what do we do?
It's uncontrollable.

101
00:05:38,430 --> 00:05:40,200
Should we just give up?

102
00:05:40,200 --> 00:05:40,820
No.

103
00:05:40,820 --> 00:05:43,670
We need to introduce more controls
somehow, right?

104
00:05:43,670 --> 00:05:44,610
And then we saw earlier,

105
00:05:44,610 --> 00:05:46,300
how do you introduce control?

106
00:05:46,300 --> 00:05:50,280
It's by putting actuators, putting motors,
seeing what else you can control.

107
00:05:50,280 --> 00:05:52,900
So here in this case, let's say now we can
control theta 1

108
00:05:52,900 --> 00:05:56,840
double dot, and theta 2 double dot, the
acceleration of theta 2 as well.

109
00:05:56,840 --> 00:06:00,610
And of course, then what will happen to
your B matrix?

110
00:06:00,610 --> 00:06:05,920
This is how the B matrix will look, right?
And to double check again, put it here.

111
00:06:05,920 --> 00:06:09,820
See if, in fact, u shows up for both theta
1 double dot, and theta 2 double dot, and

112
00:06:09,820 --> 00:06:14,400
then we know that u is influencing these
accelerations, right?

113
00:06:14,400 --> 00:06:16,820
Okay, so now we have this new guy, and

114
00:06:16,820 --> 00:06:18,710
we have to check if this is controllable
or not.

115
00:06:18,710 --> 00:06:23,250
And we do the same thing again.
We create the controllability matrix.

116
00:06:23,250 --> 00:06:24,170
And we're going to do this in

117
00:06:24,170 --> 00:06:28,000
Matlab, because we don't feel like
computing everything.

118
00:06:28,000 --> 00:06:30,690
And this is the code again for it.

119
00:06:30,690 --> 00:06:32,980
Again, very similar to what we did
earlier.

120
00:06:32,980 --> 00:06:34,850
This time your controllability matrix is
going to

121
00:06:34,850 --> 00:06:39,180
be much bigger, because you have two
vectors here in B.

122
00:06:39,180 --> 00:06:45,170
So your AB is going to have dimension 4
plus 4 times

123
00:06:45,170 --> 00:06:51,520
4 cross 2, which gives you 4 cross 2
instead of 4 cross 1.

124
00:06:51,520 --> 00:07:00,040
So each guy here is going to be your, you
know, B, AB, A square B, A cube B.

125
00:07:00,040 --> 00:07:03,990
So you see, now your matrix has expanded.

126
00:07:03,990 --> 00:07:06,010
And anyway, now you find the rank of this
guy

127
00:07:06,010 --> 00:07:08,400
in terms of this rank is 4, which is equal
to

128
00:07:08,400 --> 00:07:11,870
the number of states we have, and so we
are

129
00:07:11,870 --> 00:07:14,950
full rank, which is great, because that
means we are controllable.

130
00:07:17,040 --> 00:07:22,040
Okay, so now that we are controllable, for
this particular system, what does it mean?

131
00:07:22,040 --> 00:07:26,450
It means that I can use u to make my
original system,

132
00:07:26,450 --> 00:07:31,450
which was x dot equal to Ax, unstable
original system, stable, right?

133
00:07:31,450 --> 00:07:32,210
And how do we do that?

134
00:07:32,210 --> 00:07:33,636
We use state feedback.

135
00:07:33,636 --> 00:07:36,980
That is, we say, u is equal to negative
Kx.

136
00:07:38,340 --> 00:07:42,347
And now we're going to try and design our
K so that we can force the eigen

137
00:07:42,347 --> 00:07:48,600
values to make sure that this system is
stable, right?

138
00:07:48,600 --> 00:07:52,716
Okay, let's go over this example, because
finding K for

139
00:07:52,716 --> 00:07:57,500
this huge 4 cross 4 matrix, etc, is really
cumbersome.

140
00:07:57,500 --> 00:07:59,720
We'll just use a simpler system.

141
00:07:59,720 --> 00:08:01,500
Let's shave off one angle completely.

142
00:08:01,500 --> 00:08:05,225
So let's just think of our state as theta
1.

143
00:08:07,330 --> 00:08:11,820
And theta 1 double dot, theta 1 dot.
So we've just gotten rid of theta 2.

144
00:08:11,820 --> 00:08:12,390
No problem.

145
00:08:12,390 --> 00:08:14,150
So we have this new guy here, but again,

146
00:08:14,150 --> 00:08:16,360
now we have to do this entire charade
again.

147
00:08:16,360 --> 00:08:19,580
First we need to find out, is this guy
stable or not?

148
00:08:19,580 --> 00:08:20,770
And I'm just going to give you the answer.

149
00:08:20,770 --> 00:08:23,440
You should do it yourself, just to
convince yourself.

150
00:08:23,440 --> 00:08:25,290
But yeah, this guy is unstable.

151
00:08:25,290 --> 00:08:30,020
So I'm going to introduce control through
this plus Bu thing.

152
00:08:30,020 --> 00:08:33,330
And again, I'm going to say I can control
the acceleration.

153
00:08:33,330 --> 00:08:37,270
I'm going to get this as my B matrix.
And now, is this controllable?

154
00:08:37,270 --> 00:08:39,530
Because that's the second question you
ask, right?

155
00:08:39,530 --> 00:08:41,100
And I'm going to tell you it's
controllable.

156
00:08:41,100 --> 00:08:43,180
You guys can find out on your own.

157
00:08:43,180 --> 00:08:44,790
Just make the controllability matrix.

158
00:08:44,790 --> 00:08:46,690
Do it.
It's good exercise.

159
00:08:47,740 --> 00:08:50,670
And now I'm going to come back to, okay,
state feedback.

160
00:08:50,670 --> 00:08:53,640
We're going to design state feedback, but
for the much simpler system, so

161
00:08:53,640 --> 00:08:57,770
we can actually work it out ourselves
instead of putting it in Matlab.

162
00:08:57,770 --> 00:08:58,420
Okay,

163
00:08:58,420 --> 00:09:00,000
with that, so how do we do this?

164
00:09:01,470 --> 00:09:03,370
We know that our system is controllable,
and

165
00:09:03,370 --> 00:09:06,304
we have this guy, u equal to negative Kx.

166
00:09:06,304 --> 00:09:09,850
So let's put u into this equation of our x
dot, and we get

167
00:09:09,850 --> 00:09:14,020
this new guy here, right, x dot is equal
to this big guy here.

168
00:09:14,020 --> 00:09:15,320
Okay.

169
00:09:15,320 --> 00:09:19,530
So we just put the values inside.
A, this is A.

170
00:09:19,530 --> 00:09:23,611
B, your K is this.
1 cross

171
00:09:23,611 --> 00:09:30,130
2 matrix, k1 and k2, two gains, and what
you finally get

172
00:09:30,130 --> 00:09:35,980
after solving this entire thing is this
new guy here, or simply A dash, right?

173
00:09:35,980 --> 00:09:39,780
So you have this new A dash, where you've
put

174
00:09:39,780 --> 00:09:43,830
in your control and everything, which is
this matrix here.

175
00:09:43,830 --> 00:09:46,000
And we all know that if you are given a
system

176
00:09:46,000 --> 00:09:48,970
x dot equal to Ax, or A dash x, or
whatever,

177
00:09:48,970 --> 00:09:52,770
to see if it's stable or not, you check
the eigen values of A or A dash.

178
00:09:52,770 --> 00:09:57,780
In this case, we have control over k1 and
k2, so we're actually going to force the

179
00:09:57,780 --> 00:10:03,230
eigen values through our k1 and k2 to B to
make sure that the system is stable.

180
00:10:03,230 --> 00:10:06,770
And if you remember, the eigen value's one
condition is that the, the

181
00:10:06,770 --> 00:10:10,210
real part of the eigen value should be in
the left half plane, right?

182
00:10:10,210 --> 00:10:13,986
So we're going to force, through our k1
and k2, the eigen values to be

183
00:10:13,986 --> 00:10:16,250
in the left half plane of the world.

184
00:10:17,440 --> 00:10:22,230
Okay, with that so how do you find the
eigen values?

185
00:10:22,230 --> 00:10:27,490
So in the first slide we pretty much just
put it in Matlab and said eig A.

186
00:10:27,490 --> 00:10:32,840
But really, how you do it is, you find
this guy here, the determinant of A dash

187
00:10:32,840 --> 00:10:38,070
minus lambda I, which is really, if you
follow it, turns out to be this.

188
00:10:38,070 --> 00:10:39,030
So basically what you're

189
00:10:39,030 --> 00:10:40,240
doing is, you're saying A, and

190
00:10:43,190 --> 00:10:49,040
then you have, so when you actually solve
the system, you're just going to get minus

191
00:10:49,040 --> 00:10:57,620
lambda 1, 1 minus k1, minus k2, minus
lambda 2 as your final matrix.

192
00:10:57,620 --> 00:10:59,380
And then you find the determinant of this
guy

193
00:10:59,380 --> 00:11:03,430
and solve it, and you'll get this equation
right here.

194
00:11:03,430 --> 00:11:04,010
Okay.

195
00:11:04,010 --> 00:11:06,760
Another exercise that you guys should be
doing on your own.

196
00:11:06,760 --> 00:11:08,130
And it's good stuff.

197
00:11:08,130 --> 00:11:08,420
Okay.

198
00:11:08,420 --> 00:11:12,400
So now that we have this characteristic
polynomial, what we're going to do is

199
00:11:12,400 --> 00:11:16,420
we're going to pick our two favorite eigen
values on the left half plane.

200
00:11:16,420 --> 00:11:18,690
And let's say we pick negative 1 and
negative 2.

201
00:11:18,690 --> 00:11:24,120
So now what we're going to do is, this is
what we got.

202
00:11:24,120 --> 00:11:27,880
And this is what we want, right, which is
just this guy here.

203
00:11:27,880 --> 00:11:33,120
So we are just going to simply compare
these two guys,

204
00:11:33,120 --> 00:11:37,180
and get our values for k2 and k1, just by
simple comparison of two polynomials.

205
00:11:38,540 --> 00:11:44,915
Because what happens now is that, with
this particular choice of k2

206
00:11:44,915 --> 00:11:51,400
and k1, my system, with this particular
choice is going to actually be stable.

207
00:11:53,410 --> 00:11:54,670
Just one quick thing.

208
00:11:54,670 --> 00:11:58,240
So yeah, when you put this k2 and k1 here,
in this guy, right,

209
00:11:58,240 --> 00:12:03,300
in this matrix, now your A dash is
definitely going to have this eigen value.

210
00:12:03,300 --> 00:12:04,850
This is what it really means.

211
00:12:04,850 --> 00:12:06,920
And because we chose these eigen values to
be in the left

212
00:12:06,920 --> 00:12:10,850
half plane, we know that this new system
is going to be stable.

213
00:12:10,850 --> 00:12:11,030
Okay.

214
00:12:11,030 --> 00:12:13,010
So yeah.
There you go.

215
00:12:13,010 --> 00:12:14,880
We have state feedback on a simpler
system.

216
00:12:14,880 --> 00:12:17,990
We chose our key, and now we know that
this guy is stable.

217
00:12:17,990 --> 00:12:18,075
So,

218
00:12:18,075 --> 00:12:20,930
woo-hoo.

219
00:12:20,930 --> 00:12:23,490
But now, we come to another annoying
thing,

220
00:12:23,490 --> 00:12:26,000
which is that we don't know our state.

221
00:12:26,000 --> 00:12:27,760
We are very happy saying that, oh, you
should

222
00:12:27,760 --> 00:12:30,480
be negative Kx, but we don't have this x.

223
00:12:32,340 --> 00:12:35,400
What we instead have is x hat, an estimate
of our state.

224
00:12:36,550 --> 00:12:38,830
We don't even have that, but this is what
we are using really.

225
00:12:38,830 --> 00:12:41,850
And now we need to find this estimate of
our state.

226
00:12:45,300 --> 00:12:49,150
And for that, again, now we have to
introduce this concept of output.

227
00:12:49,150 --> 00:12:50,620
What can we see?

228
00:12:50,620 --> 00:12:51,650
What are our senses?

229
00:12:51,650 --> 00:12:52,440
What can we measure?

230
00:12:52,440 --> 00:12:56,950
That's why the whole y matrix and the
whole thing comes in.

231
00:12:56,950 --> 00:12:57,170
Why?

232
00:12:57,170 --> 00:13:01,190
Because now we say, assume we can see this
guy here.

233
00:13:01,190 --> 00:13:01,500
Theta 1.

234
00:13:01,500 --> 00:13:08,920
So, accordingly, my C matrix is going to
be this, and my y is equal to Cx.

235
00:13:08,920 --> 00:13:10,460
Again, why?
Because when

236
00:13:10,460 --> 00:13:16,290
you put the C guy inside here, you'll see
that your

237
00:13:16,290 --> 00:13:20,820
y becomes simply theta 1, and that's what
we can see, right?

238
00:13:20,820 --> 00:13:23,740
So we choose what we can see, we choose
the senses we have,

239
00:13:23,740 --> 00:13:30,060
and then we create C, and accordingly, get
this y equal to Cx thing.

240
00:13:32,290 --> 00:13:37,350
But now we come to this other whole thing
of, is, is this observable?

241
00:13:37,350 --> 00:13:39,100
Is this new system now observable?

242
00:13:39,100 --> 00:13:43,180
The new system being these guys.
Is it observable?

243
00:13:45,190 --> 00:13:47,750
Which means, that can I, in fact, estimate
my

244
00:13:47,750 --> 00:13:52,080
state, x hat, based on this particular C
matrix.

245
00:13:53,400 --> 00:13:54,920
And for that, you have a very

246
00:13:54,920 --> 00:13:57,350
simple test, very similar to the
controllability matrix.

247
00:13:57,350 --> 00:14:00,430
This guy is called the observability
matrix.

248
00:14:00,430 --> 00:14:04,510
And because we have just two states here,
this is going to be a short little matrix.

249
00:14:04,510 --> 00:14:08,950
And you find out what it is which, you
guys can.

250
00:14:08,950 --> 00:14:11,330
And then you check the rank of this guy.

251
00:14:11,330 --> 00:14:14,870
This rank is actually equal to 2.
Is it full rank or not?

252
00:14:14,870 --> 00:14:21,156
Well it is, because our states, our number
of states are, sorry, 2, right?

253
00:14:21,156 --> 00:14:23,430
Here.
So yes.

254
00:14:23,430 --> 00:14:27,620
It is in fact full rank, which means that
this guy is observable.

255
00:14:27,620 --> 00:14:29,520
Perfect.
That is great.

256
00:14:29,520 --> 00:14:30,960
So yay.

257
00:14:32,740 --> 00:14:36,410
But what does it really mean?
Again, just to reiterate, what it means

258
00:14:36,410 --> 00:14:39,930
is that from lectures, you guys remember
that you can write

259
00:14:39,930 --> 00:14:44,360
the dynamics of your estimate of your
state in this form.

260
00:14:45,720 --> 00:14:47,860
Where L is just some gain matrix, very

261
00:14:47,860 --> 00:14:51,480
similar to your K matrix for
controllability, right?

262
00:14:51,480 --> 00:14:55,050
And by saying this, what it really means
is that if you were

263
00:14:55,050 --> 00:15:01,730
to write down the error dynamics given
this guy for your state dynamics,

264
00:15:01,730 --> 00:15:06,058
you get this matrix here, which looks very
similar to A minus

265
00:15:06,058 --> 00:15:11,460
KB right?
For, if you guys remember from your

266
00:15:11,460 --> 00:15:16,860
earlier controllability analysis.
So very nice.

267
00:15:16,860 --> 00:15:17,110
Why?

268
00:15:17,110 --> 00:15:20,430
Because now we can choose L the same way
that we chose

269
00:15:20,430 --> 00:15:24,940
K, to make sure that the eigen values of
this guy here

270
00:15:27,220 --> 00:15:32,280
force the error to become stable, or in
fact, what that

271
00:15:32,280 --> 00:15:35,230
means is basically force that the error
does not blow up.

272
00:15:35,230 --> 00:15:38,230
It, as time goes to infinity, the error
actually

273
00:15:38,230 --> 00:15:42,720
diminishes to 0, and that's what really
observability means.

274
00:15:42,720 --> 00:15:46,540
Can you in fact find an L that will make
sure that the error

275
00:15:46,540 --> 00:15:50,740
goes to 0, which means that my estimate
will become equal to my state.

276
00:15:52,450 --> 00:15:52,740
Okay,

277
00:15:52,740 --> 00:15:53,610
perfect.

278
00:15:53,610 --> 00:15:58,818
So for the quiz, it's important you guys
should be familiar at least with

279
00:15:58,818 --> 00:16:04,290
what is really going on, what is the
dynamics of my estimate, error, etc.

280
00:16:04,290 --> 00:16:08,340
Just be comfortable with understanding
what it is that's happening.

281
00:16:09,520 --> 00:16:12,510
And now all together, execution, because
this is the most important part, right?

282
00:16:12,510 --> 00:16:14,410
We have got these little blocks

283
00:16:14,410 --> 00:16:16,880
everywhere, controllable, observable,
blah, blah, blah.

284
00:16:16,880 --> 00:16:17,760
But we really don't know how to

285
00:16:17,760 --> 00:16:21,060
put it all together.
And that's what we're going to do now.

286
00:16:21,060 --> 00:16:23,575
So this is our system.

287
00:16:23,575 --> 00:16:28,080
X dot equal to Ax plus Bu, y is equal to
Cx.

288
00:16:28,080 --> 00:16:30,210
With this particular choice of x, A, B,

289
00:16:30,210 --> 00:16:33,620
and C, which we've been solving all this
while.

290
00:16:33,620 --> 00:16:38,140
Okay, and then we have found out that x
dot equal to

291
00:16:38,140 --> 00:16:42,950
Ax on its own is unstable, and then by
introducing B and C,

292
00:16:42,950 --> 00:16:45,810
the system is controllable and observable.
Great.

293
00:16:47,550 --> 00:16:51,040
Controllable means I can find a K to make
sure that my system becomes stable.

294
00:16:51,040 --> 00:16:53,500
Observable means I can find L to make sure

295
00:16:53,500 --> 00:16:56,960
that I can in fact estimate my state,
right?

296
00:16:58,260 --> 00:16:59,390
So let's put it all together.

297
00:16:59,390 --> 00:17:04,040
So I wake up at this time t equal to t
nought where I'm at

298
00:17:04,040 --> 00:17:07,710
some x equal to x nought that I don't
know, because I don't know my state.

299
00:17:07,710 --> 00:17:07,950
But I'm

300
00:17:07,950 --> 00:17:11,428
going to estimate my x had to be some x
hat nought.

301
00:17:11,428 --> 00:17:12,171
Right?

302
00:17:12,171 --> 00:17:15,050
Just something.

303
00:17:15,050 --> 00:17:18,260
And I'm going to start my loop with DD
increments.

304
00:17:18,260 --> 00:17:23,190
So I started d not, and I'm going to start
incrementing time with dd increments.

305
00:17:23,190 --> 00:17:24,870
Okay, and I'm going to read the output.

306
00:17:26,140 --> 00:17:28,800
Because I don't have my state information,
all I have is the

307
00:17:28,800 --> 00:17:32,400
output, so I'm going to read what my
output is giving me.

308
00:17:32,400 --> 00:17:33,150
Okay,

309
00:17:33,150 --> 00:17:40,280
then using that, I'm going to compute my
control, u equal to negative Kx hat,

310
00:17:40,280 --> 00:17:44,270
not using the output, using the estimate,
the initial estimate that we had.

311
00:17:44,270 --> 00:17:44,760
Simply.

312
00:17:44,760 --> 00:17:47,740
Okay and, remember that you've already
designed K and L.

313
00:17:47,740 --> 00:17:53,380
Okay, so you compute your output, sorry,
compute your control,

314
00:17:53,380 --> 00:17:56,670
and then you send this control signal to
your system, right?

315
00:17:58,290 --> 00:18:04,450
And then you update x hat using your
dynamics, where x hat was this guy here.

316
00:18:04,450 --> 00:18:07,410
And this is where you use your output,
what output you read.

317
00:18:07,410 --> 00:18:07,910
Right?

318
00:18:10,840 --> 00:18:14,410
Because for control you need x hat, so now
obviously you need to see

319
00:18:14,410 --> 00:18:18,740
where is your new x hat, and that you're
going to update through this guy here.

320
00:18:18,740 --> 00:18:21,560
And just remember, when you're updating
your dynamics,

321
00:18:22,740 --> 00:18:24,550
all I have here is x hat dot.

322
00:18:24,550 --> 00:18:28,780
How do I find out what my x hat should be
the next time instant, you know what,

323
00:18:28,780 --> 00:18:31,530
you're going to use this Oiler's
approximation, which we

324
00:18:31,530 --> 00:18:35,370
all studied together in the Glue Lecture
One, I think.

325
00:18:35,370 --> 00:18:35,960
And of course you've

326
00:18:35,960 --> 00:18:37,980
been going over it with Dr. Egerstedt.

327
00:18:37,980 --> 00:18:43,164
Basically, your next step is your previous
step, plus dt times your dynamics.

328
00:18:43,164 --> 00:18:45,360
Right?
So that's what we're going to do.

329
00:18:45,360 --> 00:18:48,760
We're going to find out x hat dot, and
then we're going to just say our next

330
00:18:48,760 --> 00:18:53,950
guy is our previous guy, which was this
estimate here, plus dt times x hat dot.

331
00:18:53,950 --> 00:18:54,960
And that'll give us our new guy.

332
00:18:54,960 --> 00:18:56,870
And now we're going to repeat.

333
00:18:56,870 --> 00:18:58,440
So now when we come back, we can read the

334
00:18:58,440 --> 00:19:01,870
output again, compute the new controls and
the control update

335
00:19:01,870 --> 00:19:02,950
x hat, etc.

336
00:19:02,950 --> 00:19:04,600
This is how we put all of this

337
00:19:04,600 --> 00:19:09,740
stuff together, for execution, in your
code, etc, whatever.

338
00:19:09,740 --> 00:19:13,160
Okay, and with that, check the forums,
good luck with Quiz Four.

339
00:19:13,160 --> 00:19:13,540
All the best.