so
welcome
back
.
today
,
i
would
like
to
investigate
a
particular
hybrid
system
that
has
to
do
with
a
bouncing
ball
.
so
,
that
is
,
i
take
a
ball
and
i
drop
it
on
a
surface
and
i
would
first
of
all
,
like
to
model
it
.
and
secondly
,
like
to
figure
out
how
the
ball
behaves
.
and
the
reason
why
i
want
to
do
this
is
not
necessarily
because
i
really
like
balls
but
because
this
bouncing
ball
example
holds
the
key
to
another
little
peculiarity
of
hybrid
systems
that
we
should
be
aware
of
.
so
,
here
is
the
set
up
.
i
have
a
ball
.
it
's
h
above
the
ground
.
now
,
what
happens
in
between
the
bounces
?
well
,
newton
tells
me
that
force
is
mass
times
acceleration
and
,
and
the
acceleration
is
,
in
fact
,
-g
,
where
g
is
the
gravitational
constant
.
so
,
if
i
let
x1=h
and
x2
be
equal
to
h
dot
,
which
is
what
we
always
do
,
then
what
i
get
is
that
x
dot
is
this
thing
,
0100
x
,
which
is
just
the
point
mass
,
plus
this
gravitational
force
that
's
pulling
it
down
.
now
,
let
's
say
that
the
thing
that
i
'm
interested
in
also
is
,
where
the
ball
actually
is
,
how
high
,
how
high
up
it
is
,
so
y
is
going
to
be
01
x.
so
,
that
is
my
model
of
the
ball
.
what
happens
at
the
bounces
?
well
,
you
could
try
to
model
ball
deformations
and
whatnot
,
but
that
seems
rather
complicated
so
what
we
're
simply
going
to
say
is
that
these
are
what
's
called
inelastic
bouncers
which
mean
,
which
means
that
a
little
bit
of
energies
sucked
out
of
the
ball
every
time
it
bounces
.
and
in
fact
,
what
we
're
going
to
say
is
that
velocity
,
this
is
the
velocity
,
so
if
the
ball
is
coming
down
here
[
sound
]
hits
the
ground
then
the
velocity
instantaneously
flips
,
it
means
,
that
's
why
we
have
a
minus
sign
there
because
the
ball
instantaneously
flips
but
we
're
also
scaling
it
with
this
gamma
constant
,
so
we
're
making
the
velocity
change
direction
from
downwards
to
upwards
,
but
a
little
bit
less
,
which
means
we
lost
some
energy
in
the
bounce
.
well
,
the
position
does
n't
change
in
the
bounce
,
so
this
means
that
my
reset
condition
is
going
to
be
this
.
this
is
just
encoding
this
fact
that
i
'm
flipping
a
little
bit
,
i
'm
flipping
my
velocity
,
and
i
'm
loosing
a
little
bit
of
energy
at
the
time
of
the
bounce
.
alright
,
so
lets
see
what
this
bouncing
ball
hybrid
automaton
might
look
like
.
well
,
x
dot
is
ax+b
,
in
this
case
,
not
bu
and
b
is
0-g
so
this
is
this
forcing
term
that
is
gravity
,
no
big
deal
.
now
,
what
's
going
to
happen
is
i
'm
going
to
switch
from
that
mode
to
itself
when
i
'm
bouncing
.
and
we
already
saw
that
the
reset
condition
is
this
inelastic
bounce
condition
that
says
that
we
're
losing
a
little
bit
of
the
velocity
at
the
time
of
the
bounce
.
so
,
that
's
the
reset
condition
.
now
,
the
guard
condition
is
what
?
well
,
clearly
,
we
're
bouncing
when
we
're
hitting
the
ground
.
so
,
we
would
like
the
height
to
be
less
than
or
equal
to
0
,
right
?
well
,
let
's
see
what
happens
.
here
comes
the
ball
[
sound
]
hits
the
ground
,
now
the
height
is
0
,
we
're
switching
and
now
the
first
thing
we
do
is
we
reverse
the
velocity
but
,
meaning
,
we
're
switching
.
but
hey
,
wait
a
second
,
the
height
is
still
less
than
or
equal
to
0.
the
height
is
still
0.
so
,
what
we
're
going
to
do
is
we
're
just
going
to
end
up
spinning
like
crazy
if
we
have
this
guard
.
so
,
this
is
not
a
good
guard
.
let
's
get
rid
of
it
.
instead
,
what
we
need
to
do
is
we
're
,
we
're
going
to
switch
when
we
come
down
to
the
ground
and
the
velocity
is
pointing
downwards
.
meaning
that
h
needs
to
be
negative
or
less
than
or
equal
0.
and
h
dot
has
to
be
less
than
or
equal
0
,
meaning
,
we
're
facing
downwards
.
or
since
h
and
h
dot
constitute
our
state
,
then
the
guard
should
really
simply
be
that
x
is
less
than
or
equal
to
that
's
the
guard
condition
.
well
,
it
could
be
it
's
just
a
,
the
height
is
just
0
,
but
this
is
really
the
condition
that
tells
us
that
it
's
time
to
,
to
switch
.
okay
,
good
.
so
now
,
we
have
that
.
is
this
any
good
?
well
,
i
mean
clearly
,
it
's
good
.
it
's
pretty
and
we
have
guards
and
resets
.
but
does
it
model
,
first
of
all
,
faithfully
what
balls
do
when
they
bounce
?
and
secondly
,
are
there
reasons
why
a
model
like
this
would
cause
us
to
be
a
little
bit
nervous
?
to
answer
that
,
we
need
to
figure
out
what
the
ball
is
actually
doing
if
we
have
this
model
.
so
,
first
of
all
,
we
have
this
system
again
now
.
what
i
would
like
to
know
is
what
is
the
output
of
this
system
.
well
,
fast
forward
,
sorry
,
not
forward
,
reverse
two
weeks
and
we
go
back
to
linear
time-invariant
systems
.
we
know
what
the
solution
to
this
system
is
.
we
know
that
the
output
is
c
times
this
bad
boy
here
,
that
we
call
the
state
transition
matrix
,
which
was
fancy
speak
for
this
matrix
exponential
times
the
initial
condition
plus
c
times
this
rather
awkward-looking
integral
there
.
now
,
all
of
these
is
,
is
,
is
not
particularly
pleasant
.
and
i
remember
vividly
how
we
struggled
to
get
through
this
because
there
were
so
many
integrals
to
keep
track
of
here
.
now
,
in
this
particular
case
,
we
're
a
little
bit
lucky
because
this
a
matrix
is
what
's
called
nilpotent
because
if
i
take
a
to
the
power
two
,
or
three
,
or
any
high
there
,
higher
exponential
here
,
then
i
get
0
out
.
and
that
turns
out
to
be
quite
wonderful
for
us
.
why
is
that
?
well
,
remember
,
that
e^at
is
really
this
infinite
sum
.
a
,
there
should
be
a
parentheses
here
,
i
apologize
.
0
at
to
the
power
of
k
divided
by
k
!
.
well
,
in
our
case
,
all
the
higher
order
a
's
are
equal
to
0
,
so
i
get
first
k=0
,
which
gives
me
the
identity
matrix
.
then
i
get
k=1
,
which
simply
gives
me
a
times
t.
and
then
,
i
have
all
the
others
which
are
equal
to
0.
so
,
e^at
,
in
this
case
,
is
simply
this
matrix
.
here
is
the
part
that
comes
from
the
adjacent
matrix
and
since
a
is
simply
that
times
t
,
i
get
the
t
up
here
.
so
,
this
is
my
e^at
or
my
state
transition
matrix
.
so
now
,
i
should
be
able
to
plug
this
back
into
the
equation
for
y
and
get
a
rather
nice
looking
expression
.
so
,
let
's
do
that
.
well
,
here
is
c.
here
is
the
state
transition
matrix
.
here
's
my
initial
condition
.
here
's
this
rather
awkward-looking
differential
equation
sorry
,
integral
.
now
,
we
can
try
to
solve
that
.
and
if
we
do
that
,
instead
of
actually
doing
the
math
,
i
did
the
math
,
i
encourage
you
to
go
home
and
do
that
.
i
'm
just
going
to
write
down
what
the
solution
is
.
it
's
going
to
be
h0
times
the
initial
velocity
,
h
dot
0
of
t-t0
and
that
's
then
minus
g/2
t-t0
squared
.
so
,
this
is
what
the
output
looks
like
in
between
bounces
.
good
.
now
,
that
we
have
that
,
let
's
figure
out
how
long
it
takes
in
between
bounces
.
so
,
let
's
say
that
we
start
at
zero
o
clock
,
at
height
zero
.
this
is
when
the
bounce
is
about
to
start
and
then
,
[
sound
]
we
want
to
know
how
long
this
,
this
took
.
we
want
to
know
how
long
it
took
us
to
get
back
the
ground
.
well
,
that
's
simple
.
let
's
pick
a
big
time
,
big
t
and
say
,
well
,
y
at
that
time
t
has
to
be
equal
to
well
,
then
we
plug
that
in
.
h0=0
not
so
we
do
n't
any
turn
there
we
just
get
h
dot
0
times
t
minus
this
thing
.
or
another
way
of
writing
it
is
like
this
.
and
you
know
what
,
this
needs
to
be
equal
to
0
because
h
is
0
there
and
h
is
0
there
,
which
is
why
we
have
two
solutions
.
so
,
one
solution
corresponds
to
t=0
,
which
is
at
the
beginning
of
the
bounce
.
and
the
other
solution
is
when
we
return
down
.
so
,
this
is
how
long
it
took
me
to
go
from
the
ground
,
up
into
the
air
,
and
then
back
down
to
the
ground
.
this
is
the
time
in
between
bounces
.
let
's
compute
the
accumulated
bounce
times
,
just
because
we
find
it
amusing
.
well
,
the
velocity
at
the
beginning
,
so
at
the
first
time
,
let
's
just
say
that
the
velocity
is
v
,
right
?
so
then
,
the
time
of
the
first
bounce
,
instead
of
h
dot
0
,
i
just
plug
in
v
there
.
i
get
2v/g
,
that
's
the
time
of
the
first
bounce
.
well
,
the
velocity
after
the
first
bounce
,
well
,
the
reset
condition
says
that
i
have
gamma
times
v
,
so
okay
,
i
have
a
new
v
here
.
that
's
what
i
'm
going
to
plug
into
my
h
dot
0
here
that
immediately
tells
me
that
the
time
of
the
second
bounce
is
,
well
,
it
's
the
time
of
the
first
bounce
plus
the
time
it
took
for
the
second
bounce
and
instead
of
v
,
i
have
v
divided
by
gamma
there
.
so
,
that
's
how
long
it
took
me
to
perform
two
bounces
,
and
so
forth
.
this
tells
me
that
the
time
of
the
nth
bounce
is
given
by
this
2v/g
which
is
this
term
that
shows
up
over
and
over
again
.
and
then
,
every
bounce
gets
this
gamma
to
the
power
of
k
accumulated
.
now
,
this
is
what
's
called
a
geometric
series
.
and
if
you
look
that
up
or
you
happen
to
know
it
,
if
gamma
is
less
than
one
,
which
means
that
you
're
not
adding
energy
at
the
bounce
times
,
this
thing
will
actually
,
okay
,
and
we
have
gamma
less
than
one
,
this
will
actually
converge
in
the
sense
that
when
n
goes
to
infinity
,
this
thing
becomes
equal
to
this
expression
.
well
now
,
maybe
some
of
you
are
asking
,
so
what
?
[
laugh
]
well
,
you
should
n't
be
asking
so
what
.
well
,
what
's
going
on
there
?
this
is
the
time
it
takes
to
perform
infinitely
many
bounces
,
infinitely
many
bounces
,
and
this
is
less
than
infinity
.
what
that
means
is
this
bouncing
ball
is
going
to
go
[
sound
]
infinitely
many
.
and
there
is
some
time
t
infinity
here
where
this
system
is
just
going
to
grind
to
a
halt
and
our
model
is
just
going
to
keep
computing
bounce
after
bounce
after
bounce
after
bounce
faster
and
faster
and
faster
.
and
this
is
actually
a
serious
problem
that
causes
our
system
to
actually
crash
.
so
,
the
ball
bounces
in
infinite
numbers
of
times
in
finite
time
.
and
like
i
said
,
this
is
not
just
a
mathematical
curiosity
that
shows
that
we
can
compute
geometric
series
.
it
means
that
if
i
'm
simulating
it
,
then
my
simulation
would
crash
.
in
fact
,
i
encourage
you
to
write
this
exact
model
into
your
favorite
simulator
and
watch
it
crash
.
this
also
means
that
if
i
write
down
my
hybrid
system
like
this
,
then
it
's
undefined
beyond
t
infinity
because
it
's
not
clear
what
's
happening
beyond
there
.
time
is
not
allowed
to
go
to
infinity
.
so
,
stability
,
which
says
what
happens
when
t
goes
to
infinity
[
sound
]
you
ca
n't
even
ask
that
question
because
t
does
n't
go
to
infinity
.
what
's
worse
obviously
is
that
real
balls
do
n't
do
this
,
real
balls
bounce
and
after
awhile
they
lay
still
,
right
?
so
,
this
is
also
an
indication
that
our
model
is
not
particularly
good
.
and
,
in
fact
,
this
type
of
phenomenon
where
you
have
infinitely
many
switches
in
finite
time
is
known
as
the
zeno
phenomenon
,
after
the
philosopher
zeno
,
that
had
the
a
tortoise
race
,
a
hare
.
and
the
paradox
that
zeno
came
up
with
was
the
fact
that
the
hare
never
managed
to
overtake
the
tortoise
.
and
in
the
next
lecture
,
we
will
see
,
first
of
all
,
why
the
tortoise
is
able
to
beat
the
hare
and
what
to
do
about
it
,
meaning
how
do
you
make
the
rabbit
overtake
the
turtle
?
well
,
that
,
my
friends
,
is
the
topic
of
the
next
lecture
.
