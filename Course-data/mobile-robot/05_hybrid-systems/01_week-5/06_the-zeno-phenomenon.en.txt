So, in the last lecture, we investigated 
this innocent-looking model or system, which was a ball bouncing on a surface. 
And we saw something rather strange there, which was that, that the, the ball 
ended up bouncing an infinite number of times in finite time. 
And this is part of another potential complication that comes from hyberdizing 
your model, namely, that you have these kinds of infinitely many swicthes. 
And this is known as the Zeno Phenomenon. And in today's lecture, we're going to 
dig a little deeper into the, the Zeno Phenomenon and see what we can do about 
it and if you can understand it. But fundamentally, what I would like to 
point out is that Zeno is bad, because if you're actually running something that's 
asked to do an infinite amount of things in finite time, it crashes. 
If you're running this on the computer, the simulations crash. 
another thing is that we know that there is something inaccurate or wrong with our 
model because the ball, if I drop a ball, it doesn't bounce an infinite number of 
times, it bounces 17 times and then it stops 
bouncing. So, there's something wrong with our 
model. That's another warning flag. 
And the third warning flag is that we don't actually know what the system does 
beyond the, the Zeno point, meaning the time up to which we have an infinite 
number of switches. So, since we can't really define what the 
system is doing beyond that point, things like asymptotic stability is meaningless 
because time is not allowed to really progress off to infinity. 
So, first of all, why is it called the Zeno phenomenon? Well, there was a Greek 
philosopher, Zeno, Zeno of Elea who spent a lot of time thinking about movement and 
the dynamic world and basically his point was that our perception of the world is 
wrong because clearly there are all these problems out there. For instance, here's 
one of his famous paradoxes. We have a hare racing a tortoise. And the 
tortoise is a little slower so the tortoise gets a head start. 
In fact, the tortoise starts there and then, the race is on. 
And at some point, the hare reaches the point were the tortoise started from but 
at that point, right, the tortoise has moved, not much but it has moved a little 
bit. This is how far the tortoise has moved. 
Okay. The race goes on. And at some point, the hare catches up to 
where the tortoise was last time but now, the tortoise has moved a little bit more, 
not much, and then this repeats. In fact, here is the, the paradox. The 
paradox is that the hare never catches up with the tortoise because every time it 
reaches the step that the tortoise was last time, the tortoise would have moved 
a tiny bit. Now mathematically, 
this is nothing. We know now about convergent series. 
We know that even though there are infinitely many of these small intervals 
the sum of them will converge and there is indeed a point where the hare will 
catch the tortoise. but the problem for us is that if I model 
this as a hybrid system, I have, again, infinitely many switches in finite time. 
So, this is why this kind of infinite amount of switches is called the Zeno 
Phenomenon because it can be traced back to Zeno's many paradoxes about motion. 
Now, let's look at another example, one that's not a hare and a tortoise but one 
that's rather innocent-looking. Let's say that x-dot is negative, for +x 
- 1 and it's positive for -x. Okay, so we have this. 
If I write this as a this is a hybrid automoton, so let's see what's going 
there. An if I draw this little plot here, 
right, here is here is time and here's x. Let's say that x starts there. 
Well, it starts positive so x-dot is going to be -1, so it's going to decay 
down with a slope of -1 and then it becomes tiny bit negative, and then oh, 
it's going to switch back up to plus, and then it goes up and in a second, it 
becomes just a tiny bit positive again, it switches down and, in fact, really 
what's happening is that once it hits 0, it starts switching like crazy here. 
In practice, it would chatter but in theory, it starts switching like crazy 
here and this is actually not good at all. 
So, this is really a Super-Zeno Phenomenon because not only do we have 
infinitely many switches in finite time, we have it at the single time instance, 
which is when the system actually hits x=0. 
So, for that reason, we typically talk about two different kinds of Zeno types 
to, so type 1 Zeno, which is what I now call the Super-Zeno. It says that you get 
infinitely many switches in a single time instant. 
In this case, again, I want to reiterate this, the ball came down here and then, 
not the ball, this system came down here and then it started switching infinitely 
many times right there. Now, type 2 is Zeno by not type 1, 
meaning, you have infinitely many switches but you have that over a time 
interval and the bouncing ball is really an example of that. 
So. there are some good news and bad news in 
all these rather messy switching situation. 
The bad news is that Zeno is a problem as we've seen. 
However, type 1 which is arguably the more common type is not only detectable, 
meaning, it is easy to see if you're going to end up in a situation where you 
are going to switch infinitely many times at a single time instant. 
But the other good news about type 1 is that we can actually deal with it because 
you know what, what should this system do? It should go 
down to zero and then it should stay at 0. 
It's clear that that's what we want the system to do and, in fact, you can do 
that as you will see in the next lecture. Now, the last piece of bad news though is 
that type 2, the bouncing ball type, that is hard, 
it's hard to deal with a bouncing ball. It's hard to detect it, it hard, it's 
hard to remedy it. and this is again, a situation where you 
really need to test your system and see do I get something like this where you 
start seeing an accumulation of switch times. 
And if you do, you need to go back and revisit your model. 
But in the next lecture, we will see how to indeed overcome the, the problems that 
a type 1 Zeno system will will cause us.