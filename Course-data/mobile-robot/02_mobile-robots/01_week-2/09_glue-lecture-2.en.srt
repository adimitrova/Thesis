1
00:00:00,900 --> 00:00:04,610
Hi, I'm Smirti Chopra again, and I'm your
instructor

2
00:00:04,610 --> 00:00:07,340
for the Glue Lectures for the duration of
this course.

3
00:00:07,340 --> 00:00:10,890
This is Glue Lecture Two, and let's get
into it.

4
00:00:12,750 --> 00:00:15,730
This lecture is titled Robot Models,
because this week you

5
00:00:15,730 --> 00:00:20,330
guys focused a lot on different models for
the robots specifically.

6
00:00:20,330 --> 00:00:22,310
And as usual pay attention because this
lecture will

7
00:00:22,310 --> 00:00:25,900
help you guys with quiz two okay, with
that.

8
00:00:25,900 --> 00:00:28,160
So, we saw at this week in Dr. [UNKNOWN]

9
00:00:28,160 --> 00:00:31,160
lectures that he introduced two models for
the robots.

10
00:00:31,160 --> 00:00:37,280
That's your robot, and then one model was
with respect to, you know, the angular

11
00:00:37,280 --> 00:00:42,040
velocities Of the wheels of the robot,
which is the differential right model.

12
00:00:42,040 --> 00:00:47,580
And then another model that we saw was
with respect to the sine of v and omega

13
00:00:51,560 --> 00:00:52,480
inputs.

14
00:00:52,480 --> 00:00:58,260
So why these two different models are,
why, why is it that you know, we have a

15
00:00:58,260 --> 00:01:00,960
One model that's actually your angular as
and

16
00:01:00,960 --> 00:01:03,640
the other model that's your b and they go.

17
00:01:03,640 --> 00:01:06,050
Well, he went over it, and he explained to
you guys that,

18
00:01:06,050 --> 00:01:11,150
you know, this differential drive model,
which is actually the one that is

19
00:01:13,170 --> 00:01:16,010
used with the robot, or actually the model
for

20
00:01:16,010 --> 00:01:20,230
the robot, it's a two-wheel differential
drive Thing is

21
00:01:20,230 --> 00:01:23,100
very important because when your
implementing your controller onto

22
00:01:23,100 --> 00:01:25,430
the robot you have to use the correct
model.

23
00:01:25,430 --> 00:01:27,170
It has to two wheels, so obviously you
need

24
00:01:27,170 --> 00:01:29,510
to give it inputs with, for both the
wheels.

25
00:01:30,540 --> 00:01:34,410
But when we are designing our controller
and we are designing our controls, in

26
00:01:34,410 --> 00:01:37,540
that time we don't want to, you know,
think in terms of wheel velocities etc.,

27
00:01:37,540 --> 00:01:39,170
we'd rather just

28
00:01:39,170 --> 00:01:41,550
Think in terms of, you know, okay, me
walking

29
00:01:41,550 --> 00:01:43,750
and I'm walking with a linear velocity and
an angular

30
00:01:43,750 --> 00:01:46,920
velocity, and it's kind of much easier
than, you know,

31
00:01:46,920 --> 00:01:49,270
thinking about each wheel and how it
turns, et cetera.

32
00:01:49,270 --> 00:01:52,230
So we have these two models here, the
differential

33
00:01:52,230 --> 00:01:54,620
drive and the simpler model, which is used
for design.

34
00:01:55,810 --> 00:02:00,830
Okay, so I just want to show you guys this
Model in action, or

35
00:02:00,830 --> 00:02:04,190
you know, this whole thing of how you
design controllers based on the

36
00:02:04,190 --> 00:02:07,710
different model and then you use something
else for implementation.

37
00:02:07,710 --> 00:02:08,800
And that's.

38
00:02:08,800 --> 00:02:10,760
Watch this video, it's a really
interesting video.

39
00:02:10,760 --> 00:02:11,750
It's my work.

40
00:02:11,750 --> 00:02:13,590
And it's robots playing music.

41
00:02:14,840 --> 00:02:18,290
And they're playing Beethoven's Fur Elise,
actually.

42
00:02:19,804 --> 00:02:21,671
The point here that I want to make is that

43
00:02:21,671 --> 00:02:23,692
[MUSIC]

44
00:02:23,692 --> 00:02:27,226
All the control that is designed for this
visual box is done using the

45
00:02:27,226 --> 00:02:31,318
model, the simplified model that we saw,
the v omega model, but then when you

46
00:02:31,318 --> 00:02:35,906
are implementing it onto these robots and
actually converting my v omega into, you

47
00:02:35,906 --> 00:02:38,262
know, angular velocities for each robot
and

48
00:02:38,262 --> 00:02:40,509
that is the input that they are getting.

49
00:02:40,509 --> 00:02:41,295
[SOUND] Here.

50
00:02:41,295 --> 00:02:43,703
So in [INAUDIBLE] it's a differential
drive robot,

51
00:02:43,703 --> 00:02:46,490
and that's what, how we are doing it.

52
00:02:46,490 --> 00:02:48,930
Okay, so, how do you do that?

53
00:02:50,040 --> 00:02:55,100
If you really simplify and see, this was
my robot, and basically what I'm saying

54
00:02:55,100 --> 00:02:58,970
is, you know, you go from point A to point
B in time ten seconds.

55
00:02:58,970 --> 00:03:01,570
This is a simple thing you'll, here, this
At this point

56
00:03:01,570 --> 00:03:05,230
it's playing note A on the piano and here
it's playing

57
00:03:05,230 --> 00:03:07,810
some G sharp or something, let's say, on
the floor piano

58
00:03:07,810 --> 00:03:10,220
and it needs to go from here to here in
ten seconds.

59
00:03:10,220 --> 00:03:15,360
That is the basic problem for one robot if
you really simplify it.

60
00:03:15,360 --> 00:03:15,590
Okay.

61
00:03:15,590 --> 00:03:18,810
This is the model I'm using, like I said,
to

62
00:03:18,810 --> 00:03:22,400
calculate my V and omega to make them
actually do this.

63
00:03:22,400 --> 00:03:24,300
That's how or however whatever trajectory
they

64
00:03:24,300 --> 00:03:26,730
take, straight line, move like this,
whatever they

65
00:03:26,730 --> 00:03:32,630
are doing this input that I am giving them
is based of the model shown here.

66
00:03:35,000 --> 00:03:38,810
Choose the high level task and then
control design is done here.

67
00:03:38,810 --> 00:03:40,760
But then the Cmd that I am going to be
sending to the

68
00:03:40,760 --> 00:03:46,340
robots Are going to be found using this
model which is the differential model.

69
00:03:46,340 --> 00:03:48,270
You guys have seen all this before.

70
00:03:48,270 --> 00:03:55,600
Okay, what happens is when you use this
guy and this guy together,

71
00:03:55,600 --> 00:03:59,860
you can actually derive these solutions.
So all I'm saying is that,

72
00:03:59,860 --> 00:04:03,690
I'm going to find V comma Omega based on
this guy.

73
00:04:03,690 --> 00:04:05,890
And then I'm going to convert it and put
it

74
00:04:05,890 --> 00:04:09,410
into this equation here to get v r and v
l.

75
00:04:09,410 --> 00:04:11,080
Which is what then i'm going to send to
the robots.

76
00:04:11,080 --> 00:04:17,950
And that is exactly what you saw in that,
Music playing robots thing as well.

77
00:04:17,950 --> 00:04:20,210
So okay that is one more we'll do another.

78
00:04:20,210 --> 00:04:22,790
And an intuitive example, let's go really
quick over it.

79
00:04:24,180 --> 00:04:24,890
Let's say my

80
00:04:24,890 --> 00:04:28,940
velocity input that I'm giving to my robot
is zero and my omega

81
00:04:28,940 --> 00:04:30,520
or my angular velocity is constant,

82
00:04:30,520 --> 00:04:32,720
what are the corresponding angular wheel
velocities?

83
00:04:34,320 --> 00:04:40,350
So again, v and omega is what I have found
out But when I send the commands

84
00:04:40,350 --> 00:04:44,420
to the robots, I'm going to find Vr and Vl
using these equations right here.

85
00:04:44,420 --> 00:04:45,080
Right?

86
00:04:45,080 --> 00:04:49,220
So, when you plug this stuff in, you see
that Vr is going to be this value here.

87
00:04:49,220 --> 00:04:49,930
Vl is going

88
00:04:49,930 --> 00:04:50,770
to be this value here.

89
00:04:50,770 --> 00:04:53,400
Where C is just some constant which is
actually the Omega.

90
00:04:54,720 --> 00:04:57,660
Okay, now intuitively, do you understand
what's happening here?

91
00:04:59,610 --> 00:05:02,550
Let's see that my robot let's its units
point and I'm saying that

92
00:05:02,550 --> 00:05:06,450
you know it's not going straight at all
it's just going to keep moving you

93
00:05:06,450 --> 00:05:09,880
know on its' own like I'm saying my
velocity is zero but my

94
00:05:09,880 --> 00:05:14,990
omega is constant so I have a constant
angular velocity, okay That means that

95
00:05:14,990 --> 00:05:18,280
my robot is not moving forward, it's just
spinning in place.

96
00:05:18,280 --> 00:05:20,510
And that makes sense because now what
we've found out,

97
00:05:20,510 --> 00:05:23,670
in terms of, you know, right and left
wheel angular velocities.

98
00:05:23,670 --> 00:05:25,940
One, is simply the negative of the other.

99
00:05:25,940 --> 00:05:27,940
So one wheel is getting, let's say, plus

100
00:05:27,940 --> 00:05:29,660
five and the other is getting negative
five.

101
00:05:29,660 --> 00:05:32,740
So they're just going to, going to make
the robot spin in place.

102
00:05:32,740 --> 00:05:34,400
It's not going to make it go forward at
all.

103
00:05:35,660 --> 00:05:37,930
So that was the whole intuitive example.

104
00:05:37,930 --> 00:05:40,450
But basically you guys should be pretty
comfortable

105
00:05:40,450 --> 00:05:46,058
going between this,you know, mapping or
transformation, from v [UNKNOWN] to v r u.

106
00:05:46,058 --> 00:05:49,460
Okay, with that, I'm back to our musical
bot.

107
00:05:49,460 --> 00:05:51,850
So you guys remember this?

108
00:05:51,850 --> 00:05:54,500
Of course you do, it happened two slides
ago.

109
00:05:54,500 --> 00:05:59,770
This musical bot example My Rova having to
go from A to B in, let's see, ten seconds.

110
00:06:01,890 --> 00:06:04,010
Now I want to go a little deeper into the
control.

111
00:06:04,010 --> 00:06:07,670
So earlier we, when we showed the mapping
between, you know, v and omega

112
00:06:07,670 --> 00:06:12,790
and vr vlv, assume that somehow magically
I really had v and omega, right.

113
00:06:14,260 --> 00:06:16,560
Now I want to go a little deeper and say
okay.

114
00:06:16,560 --> 00:06:19,630
This whole finding the control V and
Omega.

115
00:06:19,630 --> 00:06:21,140
Based on the model that I said.

116
00:06:23,200 --> 00:06:27,950
How, what does it actually mean?
This is the model I have.

117
00:06:27,950 --> 00:06:31,410
Now I'm asking you guys this.
That [SOUND] Let's make it really simple.

118
00:06:31,410 --> 00:06:34,630
My robot is here and it's looking also in
this direction.

119
00:06:34,630 --> 00:06:34,770
Okay?

120
00:06:34,770 --> 00:06:36,370
It needs to go from here to here.

121
00:06:36,370 --> 00:06:40,270
Let's say even my Theta is perfect.
It's already looking here.

122
00:06:40,270 --> 00:06:43,930
It wakes up at A.
It needs to reach it, at 10 seconds.

123
00:06:43,930 --> 00:06:47,310
So why can't I just say?
Guess what?

124
00:06:47,310 --> 00:06:48,740
Omega can be zero.

125
00:06:48,740 --> 00:06:53,240
And V can be, B minus A over 10.
Right?

126
00:06:55,550 --> 00:06:58,170
And we know all of us know from Physics,
Geometry from

127
00:06:58,170 --> 00:07:01,290
the model et cetera, that if I was to give
my robot

128
00:07:01,290 --> 00:07:04,290
this velocity, and this omega, and at
every time instant for

129
00:07:04,290 --> 00:07:07,780
10 seconds, I can, I'll in fact reach this
point, over here.

130
00:07:07,780 --> 00:07:09,090
It's simple maths, right?

131
00:07:09,090 --> 00:07:10,010
So why don't we do that?

132
00:07:10,010 --> 00:07:12,030
Why do we make such a big deal about, oh,

133
00:07:12,030 --> 00:07:14,450
we have to design the control V, omega et
cetera, like.

134
00:07:16,130 --> 00:07:18,240
Is this what the robot is doing actually

135
00:07:18,240 --> 00:07:21,520
in that music video that we just saw
etcetera?

136
00:07:21,520 --> 00:07:24,520
Well the answer is no.
Why?

137
00:07:24,520 --> 00:07:26,790
Because we don't live in a perfect world.

138
00:07:26,790 --> 00:07:30,160
So in our world of simulation this would
be perfect,

139
00:07:30,160 --> 00:07:33,530
yeah sure, in my computer and in my, you
know.

140
00:07:34,780 --> 00:07:37,460
Mind, it works perfectly, but actually
when I put it

141
00:07:37,460 --> 00:07:41,780
onto the robots, what's going to happen is
there will be friction.

142
00:07:41,780 --> 00:07:44,370
There will be other problems.

143
00:07:44,370 --> 00:07:46,720
Maybe my wheels don't move at the same
rate that they

144
00:07:46,720 --> 00:07:49,920
should or maybe the encoders are slightly
off, or maybe

145
00:07:49,920 --> 00:07:51,870
I come and kick the robot off while it's
moving.

146
00:07:51,870 --> 00:07:52,388
Whatever.

147
00:07:52,388 --> 00:07:58,140
I need - To know that let's say while I'm
moving here I wear off slightly

148
00:07:58,140 --> 00:08:03,020
by V and omega at this point needs to know
that I have gone off the path.

149
00:08:03,020 --> 00:08:06,860
In other words we need to have feedback,
if there is no feedback of where

150
00:08:06,860 --> 00:08:12,040
I am in the world then, then it's so easy
for me to just veer of

151
00:08:12,040 --> 00:08:15,000
because of, you know, problems like
friction, etc.

152
00:08:15,000 --> 00:08:18,530
When I'm actually moving the robot and
then my

153
00:08:18,530 --> 00:08:20,520
v and omega has no idea that I want to.

154
00:08:20,520 --> 00:08:23,600
So let's say while walking I come here,
I'll just keep going straight instead.

155
00:08:24,600 --> 00:08:29,420
I'm not doing any kind, kind of you know,
feedback on, on how I should be moving.

156
00:08:29,420 --> 00:08:32,520
So this, I think this a very key concept
in

157
00:08:32,520 --> 00:08:37,040
controls that And kind of motivates why it
is that

158
00:08:37,040 --> 00:08:40,970
we need state information or we need
Feedback or even all

159
00:08:40,970 --> 00:08:44,800
the stuff that you studied about you know,
PID regulators, PI everything.

160
00:08:44,800 --> 00:08:46,960
When you are minimizing the error you need
Feedback,

161
00:08:46,960 --> 00:08:49,250
you need output, you need to know where
you

162
00:08:49,250 --> 00:08:51,420
are in order to find even the error, how

163
00:08:51,420 --> 00:08:53,500
far you are from, what you need to be
doing.

164
00:08:53,500 --> 00:08:57,190
For all this Feedback is a very important
thing that you need.

165
00:08:57,190 --> 00:08:59,270
So hopefully with all this, I have kind

166
00:08:59,270 --> 00:09:02,460
of explained to you guys, the motivation
behind why

167
00:09:02,460 --> 00:09:04,850
you need to know where you are in the
world.

168
00:09:04,850 --> 00:09:08,260
And as you saw in the lectures Dr.
Edgarson

169
00:09:08,260 --> 00:09:10,590
goes over this whole thing of wheel
encoders, right.

170
00:09:10,590 --> 00:09:15,650
because if you have wheel encoders you
will be to measure where you are.

171
00:09:15,650 --> 00:09:20,350
Okay, for that again real quick.
this is how the wheel encoder works.

172
00:09:20,350 --> 00:09:24,460
Each encoder has N ticks, and a total of N
ticks that

173
00:09:24,460 --> 00:09:28,100
means if you over haul N ticks you would
have moved one revolution

174
00:09:28,100 --> 00:09:30,190
on the wheel which is two pi r on, you

175
00:09:30,190 --> 00:09:33,770
know, your distance, and then you have Dl,
Dr, Dc.

176
00:09:33,770 --> 00:09:39,390
What is Dl, Dr, Dc is basically how much
Your wheel is moving how

177
00:09:39,390 --> 00:09:44,740
much distance the distance of this arc,
for example, based on the number of ticks.

178
00:09:44,740 --> 00:09:47,140
So that I have got 5 ticks how much I
move?

179
00:09:47,140 --> 00:09:48,060
what is this distance?

180
00:09:48,060 --> 00:09:50,580
that is given by Dl, Dr, Dc.
Dc is this.

181
00:09:50,580 --> 00:09:53,350
You see all this before and then okay

182
00:09:53,350 --> 00:09:55,850
once we had this of this is what you know,
the wheel encoders

183
00:09:55,850 --> 00:09:59,010
give us now what, how do we find where we
are in space?

184
00:09:59,010 --> 00:10:03,810
Okay, I know where I am in the beginning
let's say I this is where I wake up.

185
00:10:03,810 --> 00:10:09,200
Now I use DL, DR, DC in this form, in this
update equation

186
00:10:09,200 --> 00:10:14,090
and now I get my new position X prime, Y
prime, and V prime.

187
00:10:14,090 --> 00:10:18,400
And remember, X, Y, and V is my state, or
where I am in place,

188
00:10:18,400 --> 00:10:22,150
like X, Y, and looking there.
That kind of a thing.

189
00:10:22,150 --> 00:10:25,900
Okay, cool.
So this whole thing is the wheel encoders.

190
00:10:25,900 --> 00:10:27,630
This is how they work.

191
00:10:27,630 --> 00:10:31,100
So just for your general you know,
knowledge or curiosity

192
00:10:31,100 --> 00:10:34,400
if you are wondering where did this model
come from,

193
00:10:34,400 --> 00:10:36,380
well we could go back to our, you know
concepts

194
00:10:36,380 --> 00:10:39,130
in physics really quick and we could be
like, all right.

195
00:10:39,130 --> 00:10:43,790
If this is a circle, if this is me walking
on the circle with radius Small r here.

196
00:10:44,940 --> 00:10:50,120
And I have a speed of lets say, you know,
some v, linear speed.

197
00:10:50,120 --> 00:10:53,970
Well, I must have some angular velocity,
right?

198
00:10:53,970 --> 00:10:55,510
For b to be walking on this circle.

199
00:10:55,510 --> 00:10:57,580
Otherwise, I would just keep walking
straight.

200
00:10:57,580 --> 00:11:00,560
So how do these 3 variables, kind of you
know, match up?

201
00:11:00,560 --> 00:11:05,930
So, There is this very famous formula we
use, omega R, that kind of

202
00:11:05,930 --> 00:11:10,080
relates the fact that if somebody is
walking or if you are tracking this point

203
00:11:10,080 --> 00:11:14,080
on a circle of radius R, how does the
linear velocity, which

204
00:11:14,080 --> 00:11:18,540
is V, and the angular velocity, which is
omega relate to one another?

205
00:11:19,590 --> 00:11:21,590
And now if I wanted to see how much
distance

206
00:11:21,590 --> 00:11:25,190
I moved in let's say time delta t, well,
what I'm

207
00:11:25,190 --> 00:11:28,300
simply going to do is I'm going to say,
multiply this with

208
00:11:28,300 --> 00:11:32,450
my speed, and my distance then becomes
omega r delta t.

209
00:11:32,450 --> 00:11:35,360
That's the distance.
And I

210
00:11:35,360 --> 00:11:39,090
want you guys to like, kind of Understand
that the same concept

211
00:11:39,090 --> 00:11:42,170
can be thought of in terms of the, each
wheel of the robot.

212
00:11:42,170 --> 00:11:48,170
So if my angular velocity for each wheel
is vr and my radius is r, I can actually

213
00:11:48,170 --> 00:11:54,320
calculate the distance moved as r times vr
times dt.

214
00:11:57,190 --> 00:11:59,020
And from here, I'm going to let you guys
figure

215
00:11:59,020 --> 00:12:03,030
out How it is that we'll reach this model.

216
00:12:03,030 --> 00:12:08,380
And as hence, I'm going to say, okay, we
already found out how we got this.

217
00:12:08,380 --> 00:12:11,190
We know this as our model for the robot.

218
00:12:11,190 --> 00:12:14,100
And now can we do something to you know,
kind

219
00:12:14,100 --> 00:12:17,560
of get this equation using The update law
that we

220
00:12:17,560 --> 00:12:20,160
know that if we ever want to find the
position

221
00:12:20,160 --> 00:12:22,390
of the next time is when we simply say
position

222
00:12:22,390 --> 00:12:27,400
of previous plus x dot time.
So it's a nice exercise find out how we

223
00:12:27,400 --> 00:12:34,290
get this model and then, all is good.
With that let's go to the next example.

224
00:12:35,480 --> 00:12:42,080
So this is an odometry example.
Just to kind of you know make it again

225
00:12:42,080 --> 00:12:47,040
really clear the concept of wheel-encoders
again very important for the quiz.

226
00:12:47,040 --> 00:12:47,670
So let's

227
00:12:47,670 --> 00:12:49,530
say my robot starts at the origin.

228
00:12:49,530 --> 00:12:54,090
When I say origin, I mean my position and
orientation both are zero.

229
00:12:54,090 --> 00:12:58,320
And it is located after the 0.1 seconds
what you have to find.

230
00:12:58,320 --> 00:12:59,000
Now, where is it?

231
00:12:59,000 --> 00:13:02,430
And now it is given that your left wheel
or your right wheel

232
00:13:02,430 --> 00:13:05,430
of the car, then takes your left wheel of
the car six ticks, blablabla.

233
00:13:05,430 --> 00:13:07,290
All the stuff is given.
How will you do it?

234
00:13:07,290 --> 00:13:07,890
Okay.

235
00:13:07,890 --> 00:13:09,810
These are the set of equations that you
are going to use.

236
00:13:09,810 --> 00:13:12,810
First, because you know the numbers of
ticks, you're going to

237
00:13:12,810 --> 00:13:15,390
find out how much each wheel has moved.

238
00:13:15,390 --> 00:13:18,480
Based on these equations right here,
right.

239
00:13:18,480 --> 00:13:21,130
And then you're going to use them in this
update law

240
00:13:21,130 --> 00:13:25,420
to find out finally where your x, y, and
pi land up.

241
00:13:25,420 --> 00:13:29,870
And a real quick note just for my
satisfaction here is that

242
00:13:32,850 --> 00:13:37,990
it's nice to wonder If I'm the robot, or
if I have the robot, I

243
00:13:37,990 --> 00:13:42,020
know the input I'm giving it, I know the
angular velocities I'm giving it, right?

244
00:13:42,020 --> 00:13:47,250
So why can't I myself find out through my
model, which is

245
00:13:47,250 --> 00:13:52,790
this, right, this guy here, why don't I
find out By

246
00:13:52,790 --> 00:13:57,330
updating using this where my next position
is going to be based on just my VR and VL?

247
00:13:57,330 --> 00:13:57,860
Why is that

248
00:13:57,860 --> 00:14:00,650
that I'm using the encoder in the first
place like why don't

249
00:14:00,650 --> 00:14:04,400
I just simulate based on my inputs where
I'm going to be in the

250
00:14:06,930 --> 00:14:07,460
time insteasd.

251
00:14:07,460 --> 00:14:13,230
Well, that's exactly the point that we're
trying to make here that Even though I'm

252
00:14:13,230 --> 00:14:18,000
giving it a certain input, I don't know
that it's actually going to be doing that.

253
00:14:18,000 --> 00:14:22,890
So when I update my equation, I don't want
to do it based solely on the model.

254
00:14:22,890 --> 00:14:25,950
I actually want to get feedback, physical
feedback from the

255
00:14:25,950 --> 00:14:28,510
robot, and that's how I want to update my
equation.

256
00:14:29,590 --> 00:14:31,970
That's why we do this whole in quarter
thing instead of

257
00:14:31,970 --> 00:14:33,250
just simply saying, you know what?

258
00:14:33,250 --> 00:14:36,530
I'm going to find it myself through my
update equation because I know [INAUDIBLE]

259
00:14:36,530 --> 00:14:40,570
And I'm going to find out where my x, y,
and z line up.

260
00:14:40,570 --> 00:14:42,610
No, that's why we don't want to do this.

261
00:14:42,610 --> 00:14:43,470
We want feedback.

262
00:14:43,470 --> 00:14:47,510
We want to see if it actually translated
into that much motion or not.

263
00:14:47,510 --> 00:14:49,756
That's why we use the [INAUDIBLE].

264
00:14:49,756 --> 00:14:55,950
And with that, we will In this lecture and
good luck with quiz two.

265
00:14:55,950 --> 00:14:57,170
Keep checking the forums.
Bye bye.