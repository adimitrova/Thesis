[music] the goal of computing is not 
numbers but insight. 
i don't care that f(2) is equal to four. 
i do care about the qualitative features 
of a function. 
here's a graph of some random function i 
just made up. 
a significant qualitative feature of this 
graph is that right here is a valley in 
the graph and up here is a mountaintop. 
speaking of mountaintops and valleys is 
maybe too metaphorical, not precise 
enough. 
let's try to work out a better 
definition. 
so, instead of calling this a mountain 
top, i'm going to call that a local 
maximum. 
let's be even a little bit more precise. 
let's suppose that that maximum value 
occurs at the input c, where the output 
is f(c). 
i'm going to call f(c) the local maximum 
value of the function near the input c. 
here's a precise definition, 
f(c) is a local maximum value for f if 
whenever x is near the input c, f(c) is 
bigger than or equal to f(x). 
maybe this isn't even precise enough. 
a big sticking point with this is this 
word near. 
that's sort of a weasley word. 
i can make this near precise just like 
we've been doing with limits. 
i'll introduce sum epsilon. 
so f(c) is a local maximum value for the 
function f, if there's some small number, 
that's what i mean by near. 
so that whenever x is near c, 
and by near c, now, i'm in between c- 
epislon and c+ epsilon. 
this is really close to c if epsilon is 
real small. 
okay. 
so that, whenever x is contained in this 
interval, f(c) is bigger then or equal to 
f(x). 
we can give a similar sort of definition 
for the valleys. 
here's that same graph again and i've 
highlighted a local minimum on the graph 
of this function. 
near the input c, f(c) is the smallest 
output for the function. 
a little bit more precisely, i'm calling 
it a local minimum value, 
because whenever x is near c, f(c) is 
less than or equal to f(x). 
or even a little bit more precisely again 
just like for local maximums, i can 
replace near with espilon. 
so f(c) is a local minimum value for the 
function, if there's some epsilon 
measuring the nearness, so that whenever 
x is between c- epsilon, and c+ epsilon, 
f(c) is less than or equal to f(x). 
sometimes, i'm going to want to talk 
simultaneously about local maximums and 
local minimums. 
so, we'll call either a local minimum or 
a local maximum a local extremum. 
and this is kind of a pretentious word, 
but it's just a word that we can use so 
that we can talk about both of these 
concepts simultaneously, 
because they actually share quite a few 
features in common. 
what if i want to talk about multiple 
extremums? well, what if we wanted to 
talk about an octopus? well, that's not 
really a problem, 
but, what if you wanted to talk about two 
of these things? you might not call it an 
octopus, you might call it an octopuses 
now. 
but, you'll find some people will get 
angry at you if you do that and i want 
you to call these octopi. 
i probably don't really agree with them, 
but, the same problem comes up with 
minimums and maximums and extremums. 
you're going to find some people who will 
demand that you call these minima, 
maxima, and extrema if you're talking 
about more than one of these things, 
but really, either is fine. 
the world local here is really in 
contrast to the world global. 
we'll say, in fact, everyone will say 
that f(c) is a global maximum value for 
the function f if no output of the 
function is larger than f(c). 
maybe that's too cute of a way to say it. 
here's a more precise way to say it, 
f(c) is a global maximum value for the 
function if whenever x is in the domain 
of f, 
i'm only going to be considering inputs 
in the domain, of course, 
then f(c) is bigger than or equal to 
f(x). 
do the same deal for minimal values, 
f(c) is a global minimum value for the 
function if whenever i've got a point in 
the domain f(c) is less than or equal to 
f(x). 
one subtle thing to point out here is 
that i'm not claiming, say for global 
maximum values that this is the biggest 
output of the function. 
what i'm saying is that any other output 
isn't larger than f(c), 
f(c) is bigger than or equal to any other 
output of the function and the same deal 
for this global minimum. 
i'm not saying this is the smallest 
output of the function, i'm just saying 
that any other output is bigger than or 
equal to this output. 
now we can see some examples of this. 
of this. 
here's that same graph we've been looking 
at so many times here. 
let's try to figure out where the local 
extrema are. 
this point here is a local maximum, 
that's the biggest output value for 
nearby input values. 
this point here is a local minimum, 
right? you're sitting in that valley, 
that's the smallest output valley among 
nearby inputs. and, up here is another 
local max and this local maximum is also 
a global maximum. 
i mean, if you're really assuming that 
this graph just continues down to the 
left and the right-hand sides, 
you should also note that if you really 
believe this thing continues down like 
this, this function has no global 
minimum. 
nobody's promising you that there is a 
global minimum or a global maximum, but 
in this case, there isn't one. 
there's no global minimum. 
there can definitely be multiple local 
maximums, 
but there can also be multiple global 
maximums. 
so here, i've drawn another graph, where 
i've rigged it so that these two output 
values are the same. 
so these are both local maximums, 
but they're also both global maximums. 
alright? so in this case, these are both 
global and also local maximums. 
there's even more, dare i say it, extreme 
version of this. 
here, i've graphed the constant function 
y=17 is both a global maximum and a 
global minimum for this constant 
function. 
the distinction between local and global 
maximums is really quite important, even 
in everyday life. 
when you're standing at a local maximum, 
on the top of this mountain, small 
changes to your situation just make 
things worse, 
and yet, if you're willing to go through 
this valley, you'll eventually come up 
here to what at least appears to be to 
global maximum of this function. 
[music] 
