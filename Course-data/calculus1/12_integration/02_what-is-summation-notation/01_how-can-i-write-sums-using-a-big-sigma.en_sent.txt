[music] sometimes, you'll see a greek restaurant with a name like this.
so, it's g, r, sigma, sigma, k restaurant.
and my little rant here is that this does not say greek restaurant.
it says grssk restaurant.
that sigma is really a letter s. right?
sigma makes the s sound.
yeah, so grssk restaurant.
well, this sigma makes an s sound, right?
so, you know, forget this greek restaurant story.
what's another word that actually does start with s?
alright, a word that starts with s is sum.
so, we're going to use that giant sigma for sums.
let's see an example.
so, i'll write a big sigma for sum, and then below the sigma, i'll write what i want to start at.
above the sigma, i'll right what i want to end at.
and here's what i want to add up.
so, in this example, i first plug in n equals 1. right?
and 2 times 1 minus 1 is 1. then, i plug in n equals 2.
2 times 2 minus 1 is 3. then, i plug in n equals 3.
2 times 3 minus 1 is 5. then, i plug in n equals 4.
2 times 4 minus 1 is 7. then, i plug in n equals 5.
2 times 5 minus 1 is 9. and i keep on doing this, right, until i plug in n equals 10. which is 2 times 10 minus 1 which is 19. so, to evaluate this sum, right, the meaning of these symbols is just to add up 1 plus 3 plus 5 plus 7, and so on, until i get to 19. we can compute this.
well, here we go.
alright, 1 plus 3 is 4.
4 plus 5 is 9. alright, 9 plus 7 is 16.
16 plus 9 is 25.
25 plus, what's the next number in this list, is 11.
25 plus 11 is 36.
36 plus the next number that would come after 11 and this is 13.
36 plus 13 is 49.
49 plus, the next number is 15.
49 plus 15 is 64.
64 plus 17 is the next number, right before 19.
64 plus 17 is 81. and 81 plus 19 is 100. so, yeah.
if i add up 1 plus 3 plus 5 plus 7 plus 9 all the way up 19, by just adding up the odd numbers between 1 and 19, i get 100 and that's the value of this sum.
if you have some programming experience, you can think of these sums as like loops.
formally, what does this notation mean, right?
so, i put a big summation symbol, a big sigma.
n goes from a to b, a and b are whole numbers.
and then, i've got some expression involving n which i can write as a function of n. and what this notation means is just to plug in all the numbers between a and b, the whole numbers between a and b including a and b, into this expression, and then sum them all up.
right?
giant sigma for sum.
you know, so if i wanted to expand this out, if i want to right out what this is doing, you know, i first plug in a, then i plug in a plus 1, then i add to that a, whatever i get when i plug in a plus 2, and then dot, dot, dot, i keep on going, right.
and then, i get closer to the n. right before the n, i plug in b minus 1. and then, i finish by plugging in b and i add up all these things and that's the value of this sum.
alright that's what this notation means.
there's one easy case where we can figure out the whole story.
what happens if we take the sum of just a constant?
some expression that doesn't depend on the indexing variable at all.
for instance, what is the sum, as n goes from a to b, of just the constant c, right?
this is you know, sort of expression that doesn't involve n at all.
so, to compute this, all we have to know is how many times c is being added into itself.
right, so this is c plus c plus, and it keeps on going, you know, plus c. but the whole issue is just how many times c appears.
and c appears b minus a plus 1 times.
that, that plus 1 maybe is a little bit confusing.
but you can see that the plus 1 really belongs there, if you plug in some specific values for, for b and a. so, if i add c to itself, b minus a plus 1 times, this sum is really just a multiplication problem, right.
repeated addition is called multiplication.
it's c times b minus a plus 1. so, the sum of c as n goes from a to b is just c times b minus a plus 1.
